<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="Migration" resourceRoot="" soapui-version="3.6.1" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Auth1.1_Routing" type="rest" basePath="" definitionUrl="file:/C:/repoman/keystone/keystone/content/admin/Auth1.1.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/repoman/keystone/keystone/content/admin/Auth1.1.wadl"><con:part><con:url>file:/C:/repoman/keystone/keystone/content/admin/Auth1.1.wadl</con:url><con:content><![CDATA[<application xsi:schemaLocation="http://docs.rackspacecloud.com/auth/api/v1.1                                  admin-api.xsd" xmlns="http://wadl.dev.java.net/2009/02" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1">
  <grammars>
    <include href="admin-api.xsd"/>
    <include href="api-common.xsd"/>
  </grammars>
  <resources base="https://auth.api.rackspacecloud.com">
    <resource id="version" path="v1.1">
      <method href="#getVersionInfo"/>
      <resource id="extensions" path="extensions">
        <method href="#getExtensions"/>
        <resource id="alias" path="{alias}">
          <param name="alias" style="template" type="xsd:string"/>
          <method href="#getExtension"/>
        </resource>
      </resource>
      <resource id="auth" path="auth">
        <method href="#authenticate"/>
      </resource>
      <resource id="token" path="token">
        <resource id="tokenId" path="{tokenId}">
          <param name="tokenId" style="template" type="xsd:string"/>
          <method href="#validateToken"/>
          <method href="#revokeToken"/>
        </resource>
      </resource>
      <resource id="users" path="users">
        <method href="#createUser"/>
        <resource id="user" path="{userId}">
          <param name="userId" style="template" type="xsd:string"/>
          <method href="#getUser"/>
          <method href="#deleteUser"/>
          <method href="#updateUser"/>
          <resource id="enabled" path="enabled">
            <method href="#getUserEnabled"/>
            <method href="#setUserEnabled"/>
          </resource>
          <resource id="key" path="key">
            <method href="#getUserKey"/>
            <method href="#setUserKey"/>
          </resource>
          <resource id="serviceCatalog" path="serviceCatalog">
            <method href="#getServiceCatalog"/>
          </resource>
          <resource id="baseURLRefs" path="baseURLRefs">
            <method href="#getBaseURLRefs"/>
            <method href="#addBaseURLRef"/>
            <resource id="baseURLRef" path="{baseURLId}">
              <param name="baseURLId" style="template" type="xsd:int"/>
              <method href="#getBaseURLRef"/>
              <method href="#deleteBaseURLRef"/>
            </resource>
          </resource>
          <resource id="groups" path="groups">
            <method href="#getUserGroups"/>
          </resource>
        </resource>
      </resource>
      <resource id="nastUsers" path="nast/{nastId}">
        <param name="nastId" style="template" type="xsd:string"/>
        <method href="#userRedirect"/>
      </resource>
      <resource id="mossoUsers" path="mosso/{mossoId}">
        <param name="mossoId" style="template" type="xsd:int"/>
        <method href="#userRedirect"/>
      </resource>
      <resource id="baseURLs" path="baseURLs">
        <method href="#getBaseURLs"/>
        <resource id="baseURLId" path="{baseURLId}">
          <param name="baseURLId" style="template" type="xsd:int"/>
          <method href="#getBaseURL"/>
        </resource>
        <resource id="isBaseURLenabled" path="enabled">
          <method href="#getBaseURL"/>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--Repeated Methods from auth.wadl. Fixing as of now to resolve SOAP UI issue. (i.e.: could not verify referenced WADLs.)-->
  <!--Extensions-->
  <method name="GET" id="getExtensions">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:extensions"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getExtension">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:extension"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getVersionInfo">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:version"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Token Methods...-->
  <method name="POST" id="authenticate">
    <request>
      <representation mediaType="application/xml" element="auth:credentials"/>
      <representation mediaType="application/xml" element="auth:nastCredentials"/>
      <representation mediaType="application/xml" element="auth:mossoCredentials"/>
      <representation mediaType="application/xml" element="auth:passwordCredentials"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:auth"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:userDisabled"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="401 403 400 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="validateToken">
    <request>
      <param name="belongsTo" style="query" required="false" type="xsd:string"/>
      <!--SOAP UI fix:-->
      <!--<param name="type"      style="query"
                required="false" type="auth:UserType"
                default="CLOUD" />-->
      <!--Here's what I have to say:-->
      <param name="type" style="query" required="false" type="xsd:string" default="CLOUD">
        <option value="CLOUD"/>
        <option value="NAST"/>
        <option value="MOSSO"/>
      </param>
      <!--Achives the same thing, need to
                 keep this consistent with UserType-->
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:token"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
      <representation mediaType="application/xml" element="auth:userDisabled"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="revokeToken">
    <response status="204"/>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--User Methods...-->
  <method name="POST" id="createUser">
    <request>
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithId"/>
      </representation>
      <representation mediaType="application/json"/>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="auth:user">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="409">
      <representation mediaType="application/xml" element="auth:usernameConflict"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 409 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUser">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserEnabled">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyEnabled"/>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserEnabled">
    <request>
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyEnabled"/>
      </representation>
      <representation mediaType="application/json"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyEnabled"/>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserKey">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyKey"/>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserKey">
    <request>
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyKey"/>
      </representation>
      <representation mediaType="application/json"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyKey"/>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserGroups">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:groups">
        <param name="user" style="plain" path="/" type="auth:GroupsList"/>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUser">
    <response status="204"/>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="updateUser">
    <request>
      <representation mediaType="application/xml" element="auth:user"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getBaseURLs">
    <request>
      <param name="serviceName" style="query" required="false" type="xsd:string"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:baseURLs"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getBaseURL">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:baseURL"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getBaseURLRefs">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:baseURLRefs"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addBaseURLRef">
    <request>
      <representation mediaType="application/xml" element="auth:baseURLRef"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="auth:baseURLRef">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getBaseURLRef">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:baseURLRef"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteBaseURLRef">
    <response status="204"/>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getServiceCatalog">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:serviceCatalog"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="userRedirect">
    <response status="303">
      <representation>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:\C:\repoman\keystone\keystone\content\admin\admin-api.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Auth Admin API Schema Types</xsdxt:title>
      <xsdxt:link rev="index" href="api.xsd"/>
      <xsdxt:link rev="index" href="adminAuthRequest.xsd"/>
      <xsdxt:link rev="index" href="user.xsd"/>
      <xsdxt:link rev="index" href="groups.xsd"/>
      <xsdxt:link rev="index" href="full-token.xsd"/>
      <xsdxt:link rev="index" href="baseURLs.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This is the main index XML Schema document for the Rackspace
                Cloud Authentication Admin API.</p>
    </xsd:documentation>
  </annotation>
  <!--Inlcude Public API-->
  <include schemaLocation="api.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This is the main index XML Schema document for the Rackspace
                    Cloud Authentication Public API.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <!--Add Administration Stuff-->
  <include schemaLocation="adminCredentials.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Defines credentials used to obtain an auth token.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="user.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Contains entities related to a user.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="groups.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Contains entities related to groups.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="full-token.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Full token definition.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="baseURLs.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Entities related to baseURLs and baseURLRefrences, used to
                    build serviceCatalogs.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\keystone\keystone\content\admin\api.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Auth API Schema Types</xsdxt:title>
      <xsdxt:link rev="index" href="auth.xsd"/>
      <xsdxt:link rev="index" href="authRequest.xsd"/>
      <xsdxt:link rev="index" href="fault.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This is the main index XML Schema document
                for the Rackspace Cloud Authentication API.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="auth.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Auth entities include: AuthData, Token, and ServiceCatalog.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="credentials.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Defines credentials used to obtain an auth token.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="fault.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>All fault types.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\keystone\keystone\content\admin\auth.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Token and Service Catalog</xsdxt:title>
      <xsdxt:link rel="index" href="api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines the token and the service catalog
                entities.</p>
    </xsd:documentation>
  </annotation>
  <!--Root Elements-->
  <element name="auth" type="auth:AuthData">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A combination of the token and the service catalog. This
                    is returned when a user authenticates.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/auth.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/auth.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="serviceCatalog" type="auth:ServiceCatalog">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The service catalog contains a list of all regional and
                    global endpoints available to a user. The endpoints are
                    sorted by service type.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/serviceCatalog.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/serviceCatalog.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="AuthData">
    <sequence>
      <element name="token" type="auth:Token">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>An Auth Token.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element ref="auth:serviceCatalog">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The service catalog.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="Token">
    <attribute name="id" type="xsd:ID" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The Token Id, to be used in Authentication headers.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="expires" type="xsd:dateTime" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The token will be invalid after the expires time.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="ServiceCatalog">
    <sequence>
      <element name="service" type="auth:Service" minOccurs="1" maxOccurs="1000">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="Service">
    <sequence>
      <element name="endpoint" type="auth:Endpoint" minOccurs="1" maxOccurs="1000">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="name" type="xsd:ID" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The service name.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="Endpoint">
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The airport code of the region where the endpoint
                        lives.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute default="false" name="v1Default" type="xsd:boolean" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>If true, then the endpoint will be selected
                        automatically in V1.0 of the Auth API.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The publically accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A service URL, accessible only within the
                        Rackspace Cloud.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A service URL used for administration. This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\keystone\keystone\content\admin\credentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Credentials</xsdxt:title>
      <xsdxt:link rel="index" href="api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines entities credentials used to obtained
                a token from the authentication service.</p>
    </xsd:documentation>
  </annotation>
  <element name="credentials" type="auth:UserCredentials">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Credentials used to obtain an auth token.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/credentials.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/credentials.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Credentials" abstract="true"/>
  <complexType name="KeyCredentials">
    <complexContent>
      <extension base="auth:Credentials">
        <attribute name="key" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>The API key.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="UserCredentials">
    <complexContent>
      <extension base="auth:KeyCredentials">
        <attribute name="username" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>The name of the user authenticated.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\keystone\keystone\content\admin\fault.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2009 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Faults</xsdxt:title>
      <xsdxt:link rel="index" href="api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>
        This schema file defines faults that may be raised by the Auth
                API. These faults are derived from the
        <a href="#type_AuthFault" title="See definition of         AuthFault">AuthFault</a>
        .
      </p>
      <p>
        Faults are associated with a default HTTP status code that
                corresponds to the particular fault type. For example an
        <a href="#element_itemNotFound" title="see definition of         itemNotFound">&lt;itemNotFound></a>
        element is associated
                with the HTTP status code 404. Some elements, the
        <a href="#element_authFault" title="see definition of         authFault">&lt;authFault></a>
        element for example, may be
                associated with multiple status codes. It is also possible
                for multiple fault elements to be associated with the same
                default code. The examples below showcase the default status
                codes for each element type. Note that these default codes are
                not part of the formal schema. In practice, however, an
                element type will likely be associated with its corresponding
                default status code.
      </p>
    </xsd:documentation>
  </annotation>
  <!--Elements-->
  <element name="authFault" type="auth:AuthFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A generic Auth API fault.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/authFault.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/authFault.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="userDisabled" type="auth:UserDisabledFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The user has been disabled and is not permitted to
                    authenticate.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/disabled.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/disabled.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="badRequest" type="auth:BadRequestFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The request is malformed.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/badRequest.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/badRequest.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="temporaryUnavailable" type="auth:TemporaryUnavailableFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The service request is temporary unavailable.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/temporaryUnavailable.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/temporaryUnavailable.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="unauthorized" type="auth:UnauthorizedFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Authorization failed. Bad API Key? Username?</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/unauthorized.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/unauthorized.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="itemNotFound" type="auth:ItemNotFoundFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The item or resource could not be found.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/notfound.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/notfound.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="forbidden" type="auth:ForbiddenFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Authentication succeeded but you lack sufficient privileges.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/forbidden.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/forbidden.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="usernameConflict" type="auth:UsernameConflictFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The username already exists.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/nameconflict.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/nameconflict.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="serviceUnavailable" type="auth:ServiceUnavailableFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The API is currently unavailable.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/unavailable.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/unavailable.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="AuthFault">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace). This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="UserDisabledFault">
    <complexContent>
      <extension base="auth:AuthFault"/>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault">
    <complexContent>
      <extension base="auth:AuthFault"/>
    </complexContent>
  </complexType>
  <complexType name="TemporaryUnavailableFault">
    <complexContent>
      <extension base="auth:AuthFault"/>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault">
    <complexContent>
      <extension base="auth:AuthFault"/>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault">
    <complexContent>
      <extension base="auth:AuthFault"/>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault">
    <complexContent>
      <extension base="auth:AuthFault"/>
    </complexContent>
  </complexType>
  <complexType name="UsernameConflictFault">
    <complexContent>
      <extension base="auth:AuthFault"/>
    </complexContent>
  </complexType>
  <complexType name="ServiceUnavailableFault">
    <complexContent>
      <extension base="auth:AuthFault"/>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\keystone\keystone\content\admin\adminCredentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Alternate Credential Types</xsdxt:title>
      <xsdxt:link rel="index" href="api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines alternate credentials used by admins
                to obtained a token from the authentication service.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="credentials.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Defines credentials used to obtain an auth token.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <element name="nastCredentials" type="auth:NastCredentials">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Nast Credentials.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/nast-credentials.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/nast-credentials.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="mossoCredentials" type="auth:MossoCredentials">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Mosso Credentials.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/mosso-credentials.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/mosso-credentials.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="passwordCredentials" type="auth:PasswordCredentials">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Password credentials.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/password-credentials.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/password-credentials.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <complexType name="NastCredentials">
    <complexContent>
      <extension base="auth:KeyCredentials">
        <attribute name="nastId" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>Nast Id used to identify the user.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="MossoCredentials">
    <complexContent>
      <extension base="auth:KeyCredentials">
        <attribute name="mossoId" type="xsd:int" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>Mosso account used to identify the user.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentials">
    <complexContent>
      <extension base="auth:Credentials">
        <attribute name="username" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>The name of the user authenticated.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
        <attribute name="password" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>Password used to verify the user.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\keystone\keystone\content\admin\user.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Auth User</xsdxt:title>
      <xsdxt:link rel="index" href="admin-api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema defines entity contains entities related to a user.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="baseURLs.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Entities related to baseURLs and baseURLRefrences, used to
                    build serviceCatalogs.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <element name="user" type="auth:User">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An Auth User.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/user.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/user.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="User">
    <sequence>
      <element ref="auth:baseURLRefs" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A reference to BaseURLs associated with the user.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A  unique user id.  This is also known as the CLOUD username.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="mossoId" type="xsd:int" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The mosso account number associated with this user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="nastId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The mosso account number associated with this user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="key" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The user's API Key.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>True if the user is enabled.  A user cannot log in if
                        enabled is false.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <!--Migration-disabled-->
    <!--<attribute name="migrated" type="xsd:boolean" use="optional">
            <annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        Whether this user has been migrated to IDM.
                    </p>
                </xsd:documentation>
            </annotation>
        </attribute>-->
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A Timestamp of when the user was created.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A Timestamp of when the user was last updated.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="UserWithOnlyEnabled">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The only allowed attribute for this User type is the enabled
                    attribute.</p>
      </xsd:documentation>
    </annotation>
    <complexContent>
      <restriction base="auth:User">
        <attribute name="id" type="xsd:ID" use="prohibited"/>
        <attribute name="mossoId" type="xsd:int" use="prohibited"/>
        <attribute name="nastId" type="xsd:string" use="prohibited"/>
        <attribute name="key" type="xsd:string" use="prohibited"/>
        <attribute name="created" type="xsd:dateTime" use="prohibited"/>
        <attribute name="updated" type="xsd:dateTime" use="prohibited"/>
        <attribute name="enabled" type="xsd:boolean" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>True if the user is enabled.  A user cannot log in if
                                enabled is false.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="UserWithOnlyKey">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The only allowed attribute for this User type is the key
                    attribute.</p>
      </xsd:documentation>
    </annotation>
    <complexContent>
      <restriction base="auth:User">
        <attribute name="id" type="xsd:ID" use="prohibited"/>
        <attribute name="mossoId" type="xsd:int" use="prohibited"/>
        <attribute name="nastId" type="xsd:string" use="prohibited"/>
        <attribute name="enabled" type="xsd:boolean" use="prohibited"/>
        <attribute name="created" type="xsd:dateTime" use="prohibited"/>
        <attribute name="updated" type="xsd:dateTime" use="prohibited"/>
        <attribute name="key" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>The user's API Key.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="UserWithId">
    <complexContent>
      <restriction base="auth:User">
        <attribute name="id" type="xsd:ID" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>A  unique user id.  This is also known as the CLOUD username.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </restriction>
    </complexContent>
  </complexType>
  <!--Simple Types-->
  <simpleType name="UserType">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An authRequest can be made with various user/account
                    names. The UserType signifies what kind of account is
                    being used to log in.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <enumeration value="CLOUD">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Cloud username.  This is the same as the unique user id
                            in the UserType.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="NAST">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Nast account number.  This is the same as a nastId in
                            the UserType.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="MOSSO">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Mosso account number. This is the same as mossoId in
                            the UserType.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\keystone\keystone\content\admin\baseURLs.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Base URLs</xsdxt:title>
      <xsdxt:link rel="index" href="admin-api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema defines base URLs and base URL references.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="user.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Contains entities related to a user.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <element name="baseURLs" type="auth:BaseURLList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of base URLs.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/baseURLs.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/baseURLs.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="baseURL" type="auth:BaseURL">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A base URLs.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/baseURL.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/baseURL.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="baseURLRef" type="auth:BaseURLRef">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A refrence to a base URL.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/baseURLRequest.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/baseURLRequest.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="baseURLRefs" type="auth:BaseURLRefList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of base URL refrences.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/baseURLRefs.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/baseURLRefs.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="BaseURL">
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="userType" type="auth:UserType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>What type of user informatins hould be appended to this
                        baseURL to form a complete endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="serviceName" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The base URL's service name.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The URL's region.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The public base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The internal version of the public base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The admin base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="default" type="xsd:boolean" default="false" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>If true the baseURL is automatically added to
                        new accounts.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>True if the Base URL is enabled (active). 
                        A Base URL cannot be added if it's disabled or inactive (false).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="BaseURLRef">
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="href" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A hyperlink refrence to the base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="v1Default" type="xsd:boolean" use="optional" default="false">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>If true, then the refred to base URL is used in version
                        1.0 of the Auth service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="BaseURLList">
    <sequence>
      <element name="baseURL" type="auth:BaseURL" minOccurs="0" maxOccurs="1000"/>
    </sequence>
  </complexType>
  <complexType name="BaseURLRefList">
    <sequence>
      <element name="baseURLRef" type="auth:BaseURLRef" minOccurs="0" maxOccurs="1000"/>
    </sequence>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\keystone\keystone\content\admin\groups.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Auth User Groups</xsdxt:title>
      <xsdxt:link rel="index" href="admin-api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema defines entity contains entities related to the groups of a user.</p>
    </xsd:documentation>
  </annotation>
  <element name="groups" type="auth:GroupsList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Auth Groups.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/groups.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/groups.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="GroupsList">
    <sequence>
      <element name="group" type="auth:Group" minOccurs="0" maxOccurs="1000"/>
    </sequence>
  </complexType>
  <complexType name="Group">
    <sequence>
      <element name="description" type="string" minOccurs="0" maxOccurs="1">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Description of the group.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>ID of the group.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\keystone\keystone\content\admin\full-token.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Full Token</xsdxt:title>
      <xsdxt:link rel="index" href="admin-api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>Defines a full token.</p>
    </xsd:documentation>
  </annotation>
  <!--Inlcude Auth Stuff-->
  <include schemaLocation="auth.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Auth entities include: AuthData, Token, and ServiceCatalog.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <element name="token" type="auth:FullToken">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A Token containing user information and a timestamp of when
                    it was created.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/full-token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/full-token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="FullToken">
    <complexContent>
      <extension base="auth:Token">
        <attribute name="created" type="xsd:dateTime" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>A timestamp of when the token was created.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
        <attribute name="userId" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>An Id of the user associated with this token.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
        <attribute name="userURL" type="xsd:anyURI" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>A URI of the user associated with this token.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\keystone\keystone\content\admin\api-common.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2009-2011 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="extensions.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to extensions.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="version.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to API version details.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\keystone\keystone\content\admin\extensions.xsd</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:ext="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Import ATOM specific schema definitions-->
  <xsd:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom.xsd"/>
  <xsd:element name="extensions" type="ext:Extensions"/>
  <xsd:element name="extension" type="ext:Extension"/>
  <xsd:complexType name="Extensions">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="1000"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="1000"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
      <xsd:annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>There should be at least one atom link
                        with a describedby relation.</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:assert>
  </xsd:complexType>
  <xsd:simpleType name="Alias">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\keystone\keystone\content\admin\atom.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <xs:simpleType name="relation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="link" type="atom:link"/>
  <xs:complexType name="link">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\keystone\keystone\content\admin\xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\keystone\keystone\content\admin\version.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Import ATOM specific schema definitions-->
  <xs:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom.xsd"/>
  <!--Multiple choices-->
  <xs:element name="choices" type="vers:VersionChoiceList"/>
  <!--Versioning-->
  <xs:element name="versions" type="vers:VersionChoiceList"/>
  <xs:element name="version" type="vers:VersionChoice" vc:minVersion="1.0" vc:maxVersion="1.1"/>
  <xs:element name="version" type="vers:VersionChoiceRoot" vc:minVersion="1.1"/>
  <!--Types-->
  <xs:simpleType name="VersionStatus">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="DEPRECATED"/>
      <xs:enumeration value="ALPHA"/>
      <xs:enumeration value="BETA"/>
      <xs:enumeration value="CURRENT"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="VersionChoiceList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of service version choices.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="1000"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
      <xs:annotation>
        <xs:documentation>
          <html:p>In version lists, every single version must
                        contain at least one self link.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:assert>
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <xs:assert test="atom:link[@rel='describedby']">
          <xs:annotation>
            <xs:documentation>
              <html:p>When used as a root element, a version choice
                                must contain at least one describedby link.</html:p>
            </xs:documentation>
          </xs:annotation>
        </xs:assert>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information about an available service
                    that a user can then use to target a specific version of the service. Note
                    that both the descriptive media types and the atom link references are
                    not mandatory and are offered as message enrichment elements rather
                    than message requirements.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="1000"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="1000"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the simple MIME type
                        that then a more complicated media type can be derived from. These
                        types are basic and provide no namespace or version specific
                        data are are only provided as a convenience. Because of this the
                        base attribute is declared as optional.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            The type attribute of a MediaType describes the MIME specific
                        identifier of the media type in question. This identifier should include 
                        a vendor namespace (
            <html:a href="http://tools.ietf.org/html/rfc2048">See RFC 2048</html:a>
            )
                        as well as a version suffix.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:endpoint>${#Project#endPoint}</con:endpoint></con:endpoints><con:resource name="v1.1" path="${#Project#path}"><con:settings/><con:parameters/><con:resource name="extensions" path="extensions"><con:settings/><con:parameters/><con:resource name="{alias}" path="{alias}"><con:settings/><con:parameters><con:parameter><con:name>alias</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - getExtension" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:extension</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getExtensions" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:extensions</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="auth" path="auth"><con:settings/><con:parameters/><con:method name="POST - authenticate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:nastCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:mossoCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401 403 400 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="token" path="token"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter><con:name>tokenId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - validateToken" method="GET"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>type</con:name><con:value>CLOUD</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>CLOUD</con:default><con:option>CLOUD</con:option><con:option>NAST</con:option><con:option>MOSSO</con:option></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:token</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE - revokeToken" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="enabled" path="enabled"><con:settings/><con:parameters/><con:method name="GET - getUserEnabled" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT - setUserEnabled" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="key" path="key"><con:settings/><con:parameters/><con:method name="GET - getUserKey" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT - setUserKey" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="serviceCatalog" path="serviceCatalog"><con:settings/><con:parameters/><con:method name="GET - getServiceCatalog" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceCatalog</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="baseURLRefs" path="baseURLRefs"><con:settings/><con:parameters/><con:resource name="{baseURLId}" path="{baseURLId}"><con:settings/><con:parameters><con:parameter><con:name>baseURLId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - getBaseURLRef" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRef</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE - deleteBaseURLRef" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getBaseURLRefs" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRefs</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="POST - addBaseURLRef" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRef</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRef</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="groups" path="groups"><con:settings/><con:parameters/><con:method name="GET - getUserGroups" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:groups</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getUser" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE - deleteUser" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT - updateUser" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="POST - createUser" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:usernameConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 409 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="nast/{nastId}" path="nast/{nastId}"><con:settings/><con:parameters><con:parameter><con:name>nastId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - userRedirect" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType xsi:nil="true"/><con:status>303</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="mosso/{mossoId}" path="mosso/{mossoId}"><con:settings/><con:parameters><con:parameter><con:name>mossoId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - userRedirect" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType xsi:nil="true"/><con:status>303</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="baseURLs" path="baseURLs"><con:settings/><con:parameters/><con:resource name="{baseURLId}" path="{baseURLId}"><con:settings/><con:parameters><con:parameter><con:name>baseURLId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - getBaseURL" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURL</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="enabled" path="enabled"><con:settings/><con:parameters/><con:method name="GET - getBaseURL" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURL</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getBaseURLs" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceName</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLs</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getVersionInfo" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Identity -admin" type="rest" basePath="" definitionUrl="C:\Users\mant0623\Desktop\admin\identity-admin-auth2.0.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints><con:endpoint>${#Project#endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path=""><con:settings/><con:parameters/><con:resource name="extensions" path="extensions"><con:settings/><con:parameters/><con:resource name="{alias}" path="{alias}"><con:settings/><con:parameters><con:parameter><con:name>alias</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Extension Details - getExtension" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:extension</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Extensions - listExtensions" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:extensions</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tokens" path="${#Project#path2}/tokens"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>tokenId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="endpoints" path="endpoints"><con:settings/><con:parameters/><con:method name="List Endoints for a Token - listEndpointsForToken" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoints</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Validate Token - validateToken" method="GET"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Check Token - checkToken" method="HEAD"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Authenticate for Service API - authenticate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="users" path="${#Project#path2}/users"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="List User Global Roles - listUserGlobalRoles" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a User by ID - getUserById" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a User by Name - getUserByName" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="${#Project#path2}/tenants"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="List Roles for User on Tenant - listRolesForUserOnTenant" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource><con:method name="Get Tenants by ID - getTenantById" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Tenants - listTenants" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenants</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get tenants by name - getTenantByName" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Version Details - getVersionInfo" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-KSKEY" type="rest" basePath="" definitionUrl="C:\Users\mant0623\Desktop\admin\RAX-KSKEY-admin-auth2.0.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints><con:endpoint>${#Project#endPoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="v2.0"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters/><con:resource name="credentials" path="credentials"><con:settings/><con:parameters/><con:resource name="RAX-KSKEY:apiKeyCredentials" path="RAX-KSKEY:apiKeyCredentials"><con:settings/><con:parameters/><con:method name="Update user credential - updateUserCredential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete user credential - deleteUserCredential" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get user Credentials - getUserCredential" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add user Credential. - addUserCredential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List Credentials - listCredentials" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>userId</con:name><con:style>QUERY</con:style></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:5001</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Migration Resources" type="rest" definitionUrl="C:\Users\mant0623\Desktop\admin\OS-KSADM-admin.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints/><con:resource name="migration" path="${#Project#migrationPath}/users/{username}"><con:settings/><con:parameters><con:parameter><con:name>username</con:name><con:value/><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:resource name="enable" path="/enable"><con:settings/><con:parameters/><con:method name="enable" method="PUT"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="disable" path="/disable"><con:settings/><con:parameters/><con:method name="disable" method="PUT"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="unmigrate" path="/unmigrate"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value>${#TestSuite#authtokenGA}</con:value><con:style>HEADER</con:style></con:parameter></con:parameters><con:method name="unmigrate" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="users" method="POST"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="getUser" method="GET"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="migrate groups" path="${#Project#migrationPath}/groups"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/></con:parameter></con:parameters><con:method name="migrate groups" method="POST"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="migrate baseUrls" path="${#Project#migrationPath}/baseurls"><con:settings/><con:parameters/><con:method name="Method 1" method="POST"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style><con:default/></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="OS-KSADM" type="rest" basePath="" definitionUrl="C:\repoman\identity-api\openstack-identity-api\src\docbkx\admin\OS-KSADM-adminv2.0.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/repoman/identity-api/openstack-identity-api/src/docbkx/admin/OS-KSADM-adminv2.0.wadl"><con:part><con:url>file:/C:/repoman/identity-api/openstack-identity-api/src/docbkx/admin/OS-KSADM-adminv2.0.wadl</con:url><con:content><![CDATA[<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<!--*******************************************************-->
<!--Import Common XML Entities-->
<!---->
<!--You can resolve the entites with xmllint-->
<!---->
<!--xmllint -noent OS-KSADM-admin.wadl-->
<!--*******************************************************-->
<!--A collection of common faults, these are pretty much expected
         in every request.-->
<!--Faults on GET-->
<!--Faults on POST/PUT-->
<application xsi:schemaLocation="http://docs.openstack.org/identity/api/v2.0 ../common/xsd/api.xsd   http://docs.openstack.org/common/api/v1.0 ../common/xsd/api-common.xsd   http://wadl.dev.java.net/2009/02 http://www.w3.org/Submission/wadl/wadl.xsd   http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0 ../common/xsd/OS-KSADM.xsd   " xmlns="http://wadl.dev.java.net/2009/02" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <grammars>
    <include href="../common/xsd/api.xsd"/>
    <include href="../common/xsd/api-common.xsd"/>
    <include href="../common/xsd/OS-KSADM.xsd"/>
  </grammars>
  <!--*******************************************************-->
  <!--All Resources-->
  <!--*******************************************************-->
  <!--We should use SSL in production-->
  <resources base="http://localhost:35357">
    <resource id="version" path="v2.0">
      <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
        <doc>You need a valid admin token for access.</doc>
      </param>
      <resource id="users" path="users">
        <method href="#listUsers"/>
        <method href="#addUser"/>
        <resource id="userById" path="{userId}">
          <param name="userId" style="template" required="true" type="xsd:string"/>
          <method href="#updateUser"/>
          <method href="#deleteUser"/>
          <resource id="userRoles" path="roles">
            <resource id="user-roles-OS-KSADM" path="OS-KSADM">
              <resource id="userRoleById" path="{roleId}">
                <param name="roleId" style="template" type="xsd:string"/>
                <method href="#addUserRole"/>
                <method href="#deleteUserRole"/>
              </resource>
            </resource>
          </resource>
          <resource id="user-OS-KSADM" path="OS-KSADM">
            <resource id="enabled" path="enabled">
              <method href="#setUserEnabled"/>
            </resource>
            <resource id="userCredentials" path="credentials">
              <method href="#addUserCredential"/>
              <method href="#listCredentials"/>
              <resource id="userCredentialsByType" path="{credential-type}">
                <param name="credentialType" style="template" type="OS-KSADM:extensibleCredentialsType" required="true"/>
                <method href="#updateUserCredential"/>
                <method href="#deleteUserCredential"/>
                <method href="#getUserCredential"/>
              </resource>
            </resource>
          </resource>
        </resource>
      </resource>
      <resource id="tenants" path="tenants">
        <method href="#addTenant"/>
        <resource id="tenantById" path="{tenantId}">
          <param name="tenantId" style="template" type="xsd:string"/>
          <method href="#updateTenant"/>
          <method href="#deleteTenant"/>
          <resource id="usersForTenant" path="users">
            <method href="#listUsersForTenant"/>
            <resource id="userForTenant" path="{userId}">
              <param name="userId" style="template" type="xsd:string"/>
              <resource id="userRolesForTenant" path="roles">
                <resource id="tenant-user-role-OS-KSADM" path="OS-KSADM">
                  <resource id="userSpecificRoleForTenant" path="{roleId}">
                    <param name="roleId" style="template" type="xsd:string"/>
                    <method href="#addRolesToUserOnTenant"/>
                    <method href="#deleteRoleFromUserOnTenant"/>
                  </resource>
                </resource>
              </resource>
            </resource>
          </resource>
        </resource>
      </resource>
      <resource id="role-service-OS-KSADM" path="OS-KSADM">
        <resource id="roles" path="roles">
          <method href="#getRoleByName"/>
          <method href="#listRoles"/>
          <method href="#addRole"/>
          <resource id="roleId" path="{roleId}">
            <param name="roleId" style="template" type="xsd:string"/>
            <method href="#getRole"/>
            <method href="#deleteRole"/>
          </resource>
        </resource>
        <resource id="services" path="services">
          <method href="#listServices"/>
          <method href="#addService"/>
          <method href="#getServiceByName"/>
          <resource id="serviceId" path="{serviceId}">
            <param name="serviceId" style="template" type="xsd:int"/>
            <method href="#getService"/>
            <method href="#deleteService"/>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--*******************************************************-->
  <!--All Methods-->
  <!--*******************************************************-->
  <!--Tenant Operations-->
  <method name="POST" id="addTenant">
    <doc xml:lang="EN" title="Add Tenant">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Creates a tenant.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">This call creates a tenant.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:tenant">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/tenantwithoutid.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/tenantwithoutid.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="identity:tenant">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/tenant.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/tenant.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="updateTenant">
    <doc xml:lang="EN" title="Update Tenant">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Updates a tenant.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">This call updates a tenant.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:tenant">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/tenant.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/tenant.json"/>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="identity:tenant">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/tenant.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/tenant.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteTenant">
    <doc xml:lang="EN" title="Delete a Tenant">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Deletes a tenant.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">This call deletes a tenant.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listUsersForTenant">
    <doc xml:lang="EN" title="List users for a Tenant.">
      <p class="shortdesc" xmlns="http://www.w3.org/1999/xhtml">Lists all the users for a tenant.</p>
      <p xmlns="http://www.w3.org/1999/xhtml">Lists all the users for a tenant.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:users">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/users.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/users.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="addRolesToUserOnTenant">
    <doc xml:lang="EN" title="Add roles to a user on a tenant.">
      <p xmlns="http://www.w3.org/1999/xhtml">Adds a specific role to a user for a tenant.</p>
    </doc>
    <response status="201"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteRoleFromUserOnTenant">
    <doc xml:lang="EN" title="Delete roles from a user on tenant.">
      <p xmlns="http://www.w3.org/1999/xhtml">Deletes a specific role from a user for a tenant.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--User Operations-->
  <method name="GET" id="listUsers">
    <doc xml:lang="EN" title="List users">
      <p xmlns="http://www.w3.org/1999/xhtml">List users.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:userss">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/users.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/users.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addUser">
    <doc xml:lang="EN" title="Add user">
      <p xmlns="http://www.w3.org/1999/xhtml">Adds a user.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/userwithoutid.xml"/>
        </doc>
        <param name="user" style="plain" path="/identity:user" type="OS-KSADM:UserForCreate"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/userwithoutid.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/user.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/user.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="updateUser">
    <doc xml:lang="EN" title="Update user">
      <p xmlns="http://www.w3.org/1999/xhtml">Update a user.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/user.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/user.json"/>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/user.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/user.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUser">
    <doc xml:lang="EN" title="Delete user">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete a user.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserEnabled">
    <doc xml:lang="EN" title="Set user enabled.">
      <p xmlns="http://www.w3.org/1999/xhtml">Enable user.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/userwithenabledonly.xml"/>
        </doc>
        <param name="user" style="plain" path="/identity:user" type="OS-KSADM:UserWithOnlyEnabled"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/userwithenabledonly.json"/>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="identity:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/user.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/user.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--User Roles-->
  <method name="PUT" id="addUserRole">
    <doc xml:lang="EN" title="Add Global roles to a user.">
      <p xmlns="http://www.w3.org/1999/xhtml">Adds a specific global role to a user.</p>
    </doc>
    <response status="201"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUserRole">
    <doc xml:lang="EN" title="Delete Global Roles on User.">
      <p xmlns="http://www.w3.org/1999/xhtml">Deletes a specific global role from a user.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--User Credentials-->
  <method name="POST" id="addUserCredential">
    <doc xml:lang="EN" title="Add user Credential.">
      <p xmlns="http://www.w3.org/1999/xhtml">Adds a credential to a user.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:credential">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="identity:credential">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listCredentials">
    <doc xml:lang="EN" title="List Credentials">
      <p xmlns="http://www.w3.org/1999/xhtml">List credentials.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/credentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/credentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="listCredentialsByType">
    <doc xml:lang="EN" title="List Credentials by type">
      <p xmlns="http://www.w3.org/1999/xhtml">List credentials by type.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/credentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/credentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="updateUserCredential">
    <doc xml:lang="EN" title="Update user credential">
      <p xmlns="http://www.w3.org/1999/xhtml">Update credentials.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:credential">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.json"/>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="identity:credential">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUserCredential">
    <doc xml:lang="EN" title="Delete user credential">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete User credentials.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserCredential">
    <doc xml:lang="EN" title="Get user Credentials">
      <p xmlns="http://www.w3.org/1999/xhtml">Get user credentials.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:credential">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/passwordcredentials.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Roles-->
  <method name="GET" id="listRoles">
    <doc xml:lang="EN" title="List Roles">
      <p xmlns="http://www.w3.org/1999/xhtml">List roles.</p>
    </doc>
    <request>
      <param name="serviceId" style="query" required="false" type="xsd:string"/>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:roles">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/roles.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/roles.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addRole">
    <doc xml:lang="EN" title="Add Role">
      <p xmlns="http://www.w3.org/1999/xhtml">Add a Role.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="identity:role">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/role.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/role.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="identity:role">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/role.xml"/>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/role.json"/>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getRoleByName">
    <doc xml:lang="EN" title="Get Role By Name">
      <p xmlns="http://www.w3.org/1999/xhtml">Get a role by Name.</p>
    </doc>
    <request>
      <param name="name" style="query" type="xsd:string" required="true"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:role">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/role.xml"/>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/role.json"/>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getRole">
    <doc xml:lang="EN" title="Get Role">
      <p xmlns="http://www.w3.org/1999/xhtml">Get a role.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="identity:role">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/role.xml"/>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/role.json"/>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteRole">
    <doc xml:lang="EN" title="Delete Role">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete a role.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Service Operations-->
  <method name="GET" id="listServices">
    <doc xml:lang="EN" title="List Services">
      <p xmlns="http://www.w3.org/1999/xhtml">List services.</p>
    </doc>
    <request>
      <param name="marker" style="query" required="false" type="xsd:string"/>
      <param name="limit" style="query" required="false" type="xsd:int"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="OS-KSADM:services">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/services.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/services.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getServiceByName">
    <doc xml:lang="EN" title="Get Service">
      <p xmlns="http://www.w3.org/1999/xhtml">Get a service by name.</p>
    </doc>
    <request>
      <param name="name" style="query" type="xsd:string" required="true"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="OS-KSADM:service">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/service.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/service.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getService">
    <doc xml:lang="EN" title="Get Service">
      <p xmlns="http://www.w3.org/1999/xhtml">Get a service.</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="OS-KSADM:service">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/service.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/service.json"/>
        </doc>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addService">
    <doc xml:lang="EN" title="Add Service">
      <p xmlns="http://www.w3.org/1999/xhtml">Add a service.</p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="OS-KSADM:service">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/service.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/service.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="OS-KSADM:service">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/service.xml"/>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../common/samples/service.json"/>
        </doc>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="415">
      <representation mediaType="application/xml" element="identity:badMediaType"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteService">
    <doc xml:lang="EN" title="Delete Service">
      <p xmlns="http://www.w3.org/1999/xhtml">Delete a service.</p>
    </doc>
    <response status="204"/>
    <response>
      <representation mediaType="application/xml" element="identity:identityFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="identity:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="identity:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="identity:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="405">
      <representation mediaType="application/xml" element="identity:badMethod"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="413">
      <representation mediaType="application/xml" element="identity:overLimit"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="identity:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="identity:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:\C:\repoman\identity-api\openstack-identity-api\src\docbkx\common\xsd\api.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <include schemaLocation="token.xsd"/>
  <include schemaLocation="tenant.xsd"/>
  <include schemaLocation="fault.xsd"/>
  <include schemaLocation="endpoints.xsd"/>
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="user.xsd"/>
  <include schemaLocation="credentials.xsd"/>
  <include schemaLocation="services.xsd"/>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\identity-api\openstack-identity-api\src\docbkx\common\xsd\token.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="roles.xsd"/>
  <include schemaLocation="services.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="access" type="identity:AuthenticateResponse"/>
  <!--Complex Types-->
  <complexType name="Token">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A token is an arbitrary bit of text that is used to access
                    resources. Each token has a scope which describes which
                    resources are accessible with it. A token may be
                    revoked at anytime and is valid for a finite duration.</p>
        <p>While Keystone supports token-based authentication in this release,
                    the intention is for it to support additional protocols in the
                    future. The desire is for it to be an integration service, and not
                    a full-fledged identity store and management solution.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="tenant" type="identity:TenantForAuthenticateResponse"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="expires" type="xsd:dateTime" use="required"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticateResponse">
    <sequence>
      <element name="token" type="identity:Token"/>
      <element name="user" type="identity:UserForAuthenticateResponse"/>
      <element name="serviceCatalog" type="identity:ServiceCatalog" minOccurs="0"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserForAuthenticateResponse">
    <sequence>
      <element name="roles" type="identity:RoleList"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TenantForAuthenticateResponse">
    <attribute name="id" type="xsd:string"/>
    <attribute name="name" type="xsd:string"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceCatalog">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>The service catalog lists the services you have access to</p>
        <div class="design">
          <p>We optimized for future flexibility around the hierarchy. So we
                    left the design as a flat list of endpoints with attributes and the
                    consumer can categorize as they need.
                    This results in potential duplication (such as with the version/@list)
                    but we acceopt that normalization cost in order to not force an
                    artificial hierarchy (suchas on region, which can be optional).</p>
        </div>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/services.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/services.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
    <sequence>
      <element name="service" type="identity:ServiceForCatalog" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceForCatalog">
    <sequence>
      <element name="endpoint" type="identity:EndpointForService" minOccurs="1" maxOccurs="unbounded">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--EndpointForService-->
  <complexType name="EndpointForService">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the region where the endpoint
                        lives. Example: airport codes; LHR (UK),
                        STL (Saint Louis)</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Public accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A service URL, accessible only locally within that
                        cloud (generally over a high bandwidth, low latency,
                        free of charge link).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An Admin URL (used for administration using privileged
                        calls). This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <!--VersionForService-->
  <complexType name="VersionForService">
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Id of the version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="info" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information specific to this version.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="list" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>URI to get the information about all versions.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\identity-api\openstack-identity-api\src\docbkx\common\xsd\atom\atom.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <xs:simpleType name="relation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="link" type="atom:link"/>
  <xs:complexType name="link">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO(Jorge)</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\identity-api\openstack-identity-api\src\docbkx\common\xsd\atom\xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\identity-api\openstack-identity-api\src\docbkx\common\xsd\roles.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="roles" type="identity:RoleList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of roles.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="role" type="identity:Role">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A role.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Role">
    <attribute name="id" type="xsd:string" use="optional"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <attribute name="serviceId" type="xsd:string" use="optional"/>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="RoleList">
    <sequence>
      <element name="role" type="identity:Role" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\identity-api\openstack-identity-api\src\docbkx\common\xsd\services.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Simple Types-->
  <simpleType name="ExtensibleServiceType">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>
          An extensible service type allows all of the
                    strings defined in
          <a href="#type_ServiceType" title="See definition of                         ServiceType">ServiceType</a>
          or an
                    alias prefixed status.
        </p>
      </xsd:documentation>
    </annotation>
    <union memberTypes="identity:ServiceType identity:ExtendedService"/>
  </simpleType>
  <simpleType name="ServiceType">
    <restriction base="xsd:string">
      <enumeration value="compute">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for an OpenStack Compute API 1.1 compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="object-store">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Swift-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="image">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Glance-compatible service</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="identity">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The type for a Keystone-compatible service.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
  <simpleType name="ExtendedService">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A non-core service type which must contain an extension prefix.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <pattern value="(\w|-)+:(\w|-)+"/>
    </restriction>
  </simpleType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\identity-api\openstack-identity-api\src\docbkx\common\xsd\tenant.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="tenant" type="identity:Tenant">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A container used to group or isolate resources and/or identity
                  objects. Depending on the service operator, a tenant may map to a customer,
                  account, organization, or project.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/xml" href="../samples/tenant.xml"/>
                     
          </xsdxt:sample>
                   
          <xsdxt:sample>
                       
            <xsdxt:code type="application/json" href="../samples/tenant.json"/>
                     
          </xsdxt:sample>
                 
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="tenants" type="identity:Tenants">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of tenants.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Tenants">
    <sequence>
      <element name="tenant" type="identity:Tenant" maxOccurs="100"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="Tenant">
    <sequence>
      <element name="description" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>An free text description of the tenant.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the tenant. This usually comes from the back-end store.
                        This value is guaranteed to be unique and immutable (it will never change).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The name of the tenant. This is guaranteed to be unique, but may change.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" use="optional" default="true">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An boolean signifying if a tenant is enabled or not. A disabled tenant
                        cannot be authenticated against.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="updated" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute type="xsd:dateTime" name="created" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the tenant.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\identity-api\openstack-identity-api\src\docbkx\common\xsd\fault.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Fault Elements-->
  <element name="identityFault" type="identity:IdentityFault"/>
  <element name="serviceUnavailable" type="identity:ServiceUnavailableFault"/>
  <element name="badRequest" type="identity:BadRequestFault"/>
  <element name="unauthorized" type="identity:UnauthorizedFault"/>
  <element name="overLimit" type="identity:OverLimitFault"/>
  <element name="userDisabled" type="identity:UserDisabledFault"/>
  <element name="forbidden" type="identity:ForbiddenFault"/>
  <element name="itemNotFound" type="identity:ItemNotFoundFault"/>
  <element name="tenantConflict" type="identity:TenantConflictFault"/>
  <!--Fault Types-->
  <complexType name="IdentityFault">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace).  This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceUnavailableFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="UserDisabledFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="TenantConflictFault">
    <complexContent>
      <extension base="identity:IdentityFault"></extension>
    </complexContent>
  </complexType>
  <complexType name="OverLimitFault">
    <complexContent>
      <extension base="identity:IdentityFault">
        <attribute name="retryAt" type="xsd:dateTime" use="optional">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
              <p>An optional dateTime denoting when an operation should
                                be retried.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\identity-api\openstack-identity-api\src\docbkx\common\xsd\endpoints.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <include schemaLocation="api.xsd"/>
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <element name="endpoint" type="identity:Endpoint">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>An Endpoint.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="endpoints" type="identity:EndpointList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of Endpoints.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Endpoint">
    <sequence>
      <element name="version" type="identity:VersionForService" maxOccurs="1" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
            <p>Version details.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An ID uniquely identifying the Endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The OpenStack-registered type (e.g. 'compute', 'object-store', etc).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The commercial service name (e.g. 'My Nova Cloud Servers').</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The region of Endpoint Template.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The public URL to access represented service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The internal version of the public URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>The admin URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="tenantId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>Tenant id to which the endpoints belong.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="EndpointList">
    <sequence>
      <element name="endpoint" type="identity:Endpoint" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\identity-api\openstack-identity-api\src\docbkx\common\xsd\user.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="users" type="identity:UserList">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A list of Users.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="user" type="identity:User">
    <annotation>
      <xsd:documentation xml:lang="EN">
        <p>A Keystone User.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="User">
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>An automatically generated, unique, immutable (it will never change) identifier
                        for the user. This is generated by the backend this user is stored in.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="username" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A unique, mutable (it can change) user name that may be used by the user
                        an identifier when presenting credentials.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="email" type="xsd:string" use="optional"/>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A true/false value that determines if the user may authenticate or not.
                        If enabled is false, the user will not be able to authenticate.
                        How this value is stored or generated is dependent on the backend in use.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="display-name" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A human-readable, friendly name for use in user interfaces.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A time-stamp identifying the modification time of the
                        user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
          <p>A creation time-stamp for the user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="UserList">
    <sequence>
      <element name="user" type="identity:User" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\identity-api\openstack-identity-api\src\docbkx\common\xsd\credentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/v2.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Elements-->
  <element name="auth" type="identity:AuthenticationRequest"/>
  <element name="credential" type="identity:CredentialType"/>
  <element name="credentials" type="identity:CredentialListType"/>
  <element name="passwordCredentials" type="identity:PasswordCredentialsRequiredUsername" substitutionGroup="identity:credential"/>
  <!--Complex Types-->
  <complexType name="CredentialType" abstract="true">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Base type for credential in Keystone.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="AuthenticationRequest">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Both the tenantId and tenantName are optional, but should not be specified together. If both attributes are specified, the server SHOULD respond with a 400 Bad Request.</p>
      </xsd:documentation>
    </annotation>
    <sequence>
      <choice>
        <element ref="identity:credential" minOccurs="1"/>
        <element name="token" type="identity:TokenForAuthenticationRequest"/>
      </choice>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="tenantId" type="xsd:string" use="optional"/>
    <attribute name="tenantName" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="TokenForAuthenticationRequest">
    <attribute name="id" type="xsd:string" use="required"/>
  </complexType>
  <complexType name="PasswordCredentialsBase">
    <complexContent>
      <extension base="identity:CredentialType">
        <attribute name="username" type="xsd:string" use="optional"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsWithoutUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="prohibited"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentialsRequiredUsername">
    <complexContent>
      <restriction base="identity:PasswordCredentialsBase">
        <attribute name="username" type="xsd:string" use="required"/>
        <attribute name="password" type="xsd:string" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="CredentialListType">
    <sequence>
      <element ref="identity:credential" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\identity-api\openstack-identity-api\src\docbkx\common\xsd\api-common.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="limits.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="extensions.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to extensions.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="version.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to API version details.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\identity-api\openstack-identity-api\src\docbkx\common\xsd\extensions.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:ext="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Import ATOM specific schema definitions-->
  <xsd:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <xsd:element name="extensions" type="ext:Extensions"/>
  <xsd:element name="extension" type="ext:Extension"/>
  <xsd:complexType name="Extensions">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="unbounded"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <!--<xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve asser issue
            <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
            <xsd:annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        There should be at least one atom link
                        with a describedby relation.
                    </p>
                </xsd:documentation>
            </xsd:annotation>
        </xsd:assert>-->
  </xsd:complexType>
  <xsd:simpleType name="Alias">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\identity-api\openstack-identity-api\src\docbkx\common\xsd\version.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:annotation>
    <xs:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Version Types</xsdxt:title>
      <xsdxt:link rel="index" href="api-common.xsd"/>
    </xs:appinfo>
    <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines all types related to versioning.</p>
    </xs:documentation>
  </xs:annotation>
  <!--Import ATOM specific schema definitions-->
  <xs:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <!--Multiple choices-->
  <xs:element name="choices" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element is returned when the version of the
                    resource cannot be determined. The element
                    provides a list of choices for the resource.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/choices.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/choices.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Versioning-->
  <xs:element name="versions" type="vers:VersionChoiceList">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Provides a list of supported versions.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/versions.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/versions.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/versions-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:element name="version" type="vers:VersionChoice" vc:minVersion="1.0" vc:maxVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API version.
                    This is the XSD 1.0 compatible element definition.</p>
      </xs:documentation>
    </xs:annotation>
  </xs:element>
  <xs:element name="version2" type="vers:VersionChoiceRoot" vc:minVersion="1.1">
    <xs:annotation>
      <xs:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This element provides detailed meta information
                    regarding the status of the current API
                    version. The description should include a pointer
                    to both a human readable and a machine processable
                    description of the API service.</p>
      </xs:documentation>
      <xs:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/version.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/version.json"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/atom+xml" href="../samples/version-atom.xml"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <!--Types-->
  <xs:simpleType name="VersionStatus">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="ALPHA">
        <xs:annotation>
          <xs:documentation>
            <html:p>This is a new service the API. Thi API
                            contract may be set, but the implementaiton
                            may not be 100% complient with it. Developers
                            are encouraged to begin testing aganst an
                            ALPHA version to provide feedback.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="BETA">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of BETA indicates that this
                            version is a candidate for the next major
                            release and may feature functionality not
                            available in the current
                            version. Developers are encouraged to test
                            and begin the migration processes to a
                            BETA version. Note that a BETA version is
                            undergoing testing, it has not been
                            officially released, and my not be stable.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="CURRENT">
        <xs:annotation>
          <xs:documentation>
            <html:p>The API version is stable and has been
                            tested. Developers are encouraged to
                            develop against this API version. The
                            current released version of the API will
                            always be marked as CURRENT.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
      <xs:enumeration value="DEPRECATED">
        <xs:annotation>
          <xs:documentation>
            <html:p>A status of DEPRECATED indicates that a
                            newer version of the API is
                            available. Application developers are
                            discouraged from using this version and
                            should instead develop against the latest
                            current version of the API.</html:p>
          </xs:documentation>
        </xs:annotation>
      </xs:enumeration>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="VersionChoiceList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of
                    resources at various versions.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <!--TODO(Ziad)resolve assert issue
            <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
            <xs:annotation>
                <xs:documentation>
                    <html:p>
                        In version lists, every single version must
                        contain at least one self link.
                    </html:p>
                </xs:documentation>
            </xs:annotation>
        </xs:assert>-->
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <!--TODO(Ziad)resolve asser issue
                    <xs:assert test="atom:link[@rel='describedby']">
                    <xs:annotation>
                        <xs:documentation>
                            <html:p>
                                When used as a root element, a version choice
                                must contain at least one describedby link.
                            </html:p>
                        </xs:documentation>
                    </xs:annotation>
                </xs:assert>-->
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information
                    about an available service that a user can then
                    use to target a specific version of the service.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <!--<xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded" />-->
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="unbounded"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the
                        simple MIME type that then a more complicated
                        media type can be derived from. These types
                        are basic and provide no namespace or version
                        specific data are are only provided as a
                        convenience.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The type attribute of a MediaType describes
                        the MIME specific identifier of the media type
                        in question.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\repoman\identity-api\openstack-identity-api\src\docbkx\common\xsd\OS-KSADM.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2011 OpenStack LLC., All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:identity="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <!--Import ATOM specific schema definitions-->
  <import vc:minVersion="1.1" namespace="http://www.w3.org/2005/Atom" schemaLocation="atom/atom.xsd"/>
  <import namespace="http://docs.openstack.org/identity/api/v2.0" schemaLocation="api.xsd"/>
  <!--Attribute-->
  <attribute name="password" type="xsd:string">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A password attribute used when creating users.</p>
      </xsd:documentation>
    </annotation>
  </attribute>
  <!--Elements-->
  <element name="services" type="OS-KSADM:ServiceList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A list of services.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="service" type="OS-KSADM:Service">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>A service.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <element name="extensibleCredentialsType" type="OS-KSADM:ExtensibleCredentialsType">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>An extensible credentials type.</p>
      </xsd:documentation>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Service">
    <attribute name="id" type="xsd:string" use="required"/>
    <attribute name="name" type="xsd:string" use="required"/>
    <attribute name="type" type="identity:ExtensibleServiceType" use="required"/>
    <attribute name="description" type="xsd:string" use="optional"/>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <complexType name="ServiceList">
    <sequence>
      <element name="service" type="OS-KSADM:Service" minOccurs="0" maxOccurs="unbounded"/>
      <element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="unbounded"/>
      <any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <anyAttribute namespace="##other" processContents="lax"/>
  </complexType>
  <simpleType name="PasswordCredentialsType">
    <restriction base="xsd:string">
      <enumeration value="password"/>
    </restriction>
  </simpleType>
  <simpleType name="ExtensionCredentialsType">
    <restriction base="xsd:string">
      <pattern value="(\w|-)+(-|:)\w+"/>
    </restriction>
  </simpleType>
  <simpleType name="ExtensibleCredentialsType">
    <union memberTypes="OS-KSADM:PasswordCredentialsType OS-KSADM:ExtensionCredentialsType"/>
  </simpleType>
  <!--Complex Types-->
  <complexType name="UserWithOnlyEnabled">
    <complexContent>
      <restriction base="identity:User">
        <attribute name="id" type="xsd:ID" use="prohibited"/>
        <attribute name="email" type="xsd:string" use="prohibited"/>
        <attribute name="username" type="xsd:ID" use="prohibited"/>
        <attribute name="enabled" type="xsd:boolean" use="required"/>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="UserForCreate">
    <complexContent>
      <extension base="identity:User">
        <attribute ref="OS-KSADM:password" use="optional"/>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#EndPoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path2}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add Global roles to a user. - addUserRole" method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Global Roles on User. - deleteUserRole" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="enabled" path="enabled"><con:settings/><con:parameters/><con:method name="Set user enabled. - setUserEnabled" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="credentials" path="credentials"><con:settings/><con:parameters/><con:resource name="{credential-type}" path="{credential-type}"><con:settings/><con:parameters><con:parameter required="true"><con:name>credentialType</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:extensibleCredentialsType</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Update user credential - updateUserCredential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Delete user credential - deleteUserCredential" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get user Credentials - getUserCredential" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="Add user Credential. - addUserCredential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List Credentials - listCredentials" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:resource><con:method name="Update user - updateUser" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete user - deleteUser" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="Cred" path="{userId}/OS-KSADM/credentials/passwordCredentials"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value/><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:method name="Method 1" method="POST"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="List users - listUsers" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:userss</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Add user - addUser" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:35357</con:endpoint><con:request>&lt;v2:user xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters/><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add roles to a user on a tenant. - addRolesToUserOnTenant" method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource><con:method name="List users for a Tenant. - listUsersForTenant" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Update Tenant - updateTenant" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a Tenant - deleteTenant" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add Tenant - addTenant" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Role - getRole" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Role - deleteRole" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Role By Name - getRoleByName" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List Roles - listRoles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Role - addRole" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="services" path="services"><con:settings/><con:parameters/><con:resource name="{serviceId}" path="{serviceId}"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Service - getService" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Service - deleteService" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Services - listServices" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:services</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Service - addService" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get Service - getServiceByName" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="GA - SoftDelete" type="rest" basePath="" definitionUrl="C:\Users\mant0623\Desktop\admin\GA-softDeleted.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints><con:endpoint>${#Project#endPoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path2}"><con:settings/><con:parameters/><con:resource name="softDeleted" path="softDeleted"><con:settings/><con:parameters/><con:resource name="users" path="users"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Delete from soft delete - softDeleted" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource><con:method name="Version Details - getVersionInfo" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX OS-KSADM" type="rest" basePath="" definitionUrl="C:\repoman\identity-api\openstack-identity-api\src\docbkx\admin\OS-KSADM-adminv2.0.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache/><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint></con:endpoints><con:resource name="v2.0" path="v2.0"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add Global roles to a user. - addUserRole" method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Global Roles on User. - deleteUserRole" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="enabled" path="enabled"><con:settings/><con:parameters/><con:method name="Set user enabled. - setUserEnabled" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="credentials" path="credentials"><con:settings/><con:parameters/><con:resource name="{credential-type}" path="{credential-type}"><con:settings/><con:parameters><con:parameter required="true"><con:name>credentialType</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:extensibleCredentialsType</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Update user credential - updateUserCredential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Delete user credential - deleteUserCredential" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get user Credentials - getUserCredential" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add user Credential. - addUserCredential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List Credentials - listCredentials" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:method name="Update user - updateUser" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:35357</con:endpoint><con:request>&lt;v2:user xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Delete user - deleteUser" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List users - listUsers" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:userss</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add user - addUser" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters/><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add roles to a user on a tenant. - addRolesToUserOnTenant" method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete roles from a user on tenant. - deleteRoleFromUserOnTenant" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource><con:method name="List users for a Tenant. - listUsersForTenant" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Update Tenant - updateTenant" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a Tenant - deleteTenant" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add Tenant - addTenant" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Role - getRole" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Role - deleteRole" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Role By Name - getRoleByName" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List Roles - listRoles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Role - addRole" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="services" path="services"><con:settings/><con:parameters/><con:resource name="{serviceId}" path="{serviceId}"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Service - getService" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Service - deleteService" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Services - listServices" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:services</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Service - addService" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get Service - getServiceByName" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="Auth1.1_Impl" type="rest" basePath="" definitionUrl="C:\Users\mant0623\Desktop\Auth1.1.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/mant0623/Desktop/Auth1.1.wadl"><con:part><con:url>file:/C:/Users/mant0623/Desktop/Auth1.1.wadl</con:url><con:content><![CDATA[<application xsi:schemaLocation="http://docs.rackspacecloud.com/auth/api/v1.1                                  admin-api.xsd" xmlns="http://wadl.dev.java.net/2009/02" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1">
  <grammars>
    <include href="admin-api.xsd"/>
    <include href="api-common.xsd"/>
  </grammars>
  <resources base="https://auth.api.rackspacecloud.com">
    <resource id="version" path="v1.1">
      <method href="#getVersionInfo"/>
      <resource id="extensions" path="extensions">
        <method href="#getExtensions"/>
        <resource id="alias" path="{alias}">
          <param name="alias" style="template" type="xsd:string"/>
          <method href="#getExtension"/>
        </resource>
      </resource>
      <resource id="auth" path="auth">
        <method href="#authenticate"/>
      </resource>
      <resource id="token" path="token">
        <resource id="tokenId" path="{tokenId}">
          <param name="tokenId" style="template" type="xsd:string"/>
          <method href="#validateToken"/>
          <method href="#revokeToken"/>
        </resource>
      </resource>
      <resource id="users" path="users">
        <method href="#createUser"/>
        <resource id="user" path="{userId}">
          <param name="userId" style="template" type="xsd:string"/>
          <method href="#getUser"/>
          <method href="#deleteUser"/>
          <method href="#updateUser"/>
          <resource id="enabled" path="enabled">
            <method href="#getUserEnabled"/>
            <method href="#setUserEnabled"/>
          </resource>
          <resource id="key" path="key">
            <method href="#getUserKey"/>
            <method href="#setUserKey"/>
          </resource>
          <resource id="serviceCatalog" path="serviceCatalog">
            <method href="#getServiceCatalog"/>
          </resource>
          <resource id="baseURLRefs" path="baseURLRefs">
            <method href="#getBaseURLRefs"/>
            <method href="#addBaseURLRef"/>
            <resource id="baseURLRef" path="{baseURLId}">
              <param name="baseURLId" style="template" type="xsd:int"/>
              <method href="#getBaseURLRef"/>
              <method href="#deleteBaseURLRef"/>
            </resource>
          </resource>
          <resource id="groups" path="groups">
            <method href="#getUserGroups"/>
          </resource>
        </resource>
      </resource>
      <resource id="nastUsers" path="nast/{nastId}">
        <param name="nastId" style="template" type="xsd:string"/>
        <method href="#userRedirect"/>
      </resource>
      <resource id="mossoUsers" path="mosso/{mossoId}">
        <param name="mossoId" style="template" type="xsd:int"/>
        <method href="#userRedirect"/>
      </resource>
      <resource id="baseURLs" path="baseURLs">
        <method href="#getBaseURLs"/>
        <resource id="baseURLId" path="{baseURLId}">
          <param name="baseURLId" style="template" type="xsd:int"/>
          <method href="#getBaseURL"/>
        </resource>
        <resource id="isBaseURLenabled" path="enabled">
          <method href="#getBaseURL"/>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--Repeated Methods from auth.wadl. Fixing as of now to resolve SOAP UI issue. (i.e.: could not verify referenced WADLs.)-->
  <!--Extensions-->
  <method name="GET" id="getExtensions">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:extensions"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getExtension">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:extension"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getVersionInfo">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:version"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Token Methods...-->
  <method name="POST" id="authenticate">
    <request>
      <representation mediaType="application/xml" element="auth:credentials"/>
      <representation mediaType="application/xml" element="auth:nastCredentials"/>
      <representation mediaType="application/xml" element="auth:mossoCredentials"/>
      <representation mediaType="application/xml" element="auth:passwordCredentials"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:auth"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:userDisabled"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="401 403 400 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="validateToken">
    <request>
      <param name="belongsTo" style="query" required="false" type="xsd:string"/>
      <!--SOAP UI fix:-->
      <!--<param name="type"      style="query"
                required="false" type="auth:UserType"
                default="CLOUD" />-->
      <!--Here's what I have to say:-->
      <param name="type" style="query" required="false" type="xsd:string" default="CLOUD">
        <option value="CLOUD"/>
        <option value="NAST"/>
        <option value="MOSSO"/>
      </param>
      <!--Achives the same thing, need to
                 keep this consistent with UserType-->
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:token"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
      <representation mediaType="application/xml" element="auth:userDisabled"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="revokeToken">
    <response status="204"/>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--User Methods...-->
  <method name="POST" id="createUser">
    <request>
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithId"/>
      </representation>
      <representation mediaType="application/json"/>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="auth:user">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="409">
      <representation mediaType="application/xml" element="auth:usernameConflict"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 409 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUser">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserEnabled">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyEnabled"/>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserEnabled">
    <request>
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyEnabled"/>
      </representation>
      <representation mediaType="application/json"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyEnabled"/>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserKey">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyKey"/>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserKey">
    <request>
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyKey"/>
      </representation>
      <representation mediaType="application/json"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user">
        <param name="user" style="plain" path="/" type="auth:UserWithOnlyKey"/>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserGroups">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:groups">
        <param name="user" style="plain" path="/" type="auth:GroupsList"/>
      </representation>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUser">
    <response status="204"/>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="updateUser">
    <request>
      <representation mediaType="application/xml" element="auth:user"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:user"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getBaseURLs">
    <request>
      <param name="serviceName" style="query" required="false" type="xsd:string"/>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:baseURLs"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getBaseURL">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:baseURL"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getBaseURLRefs">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:baseURLRefs"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addBaseURLRef">
    <request>
      <representation mediaType="application/xml" element="auth:baseURLRef"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="201">
      <representation mediaType="application/xml" element="auth:baseURLRef">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
      <representation mediaType="application/json">
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getBaseURLRef">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:baseURLRef"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteBaseURLRef">
    <response status="204"/>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getServiceCatalog">
    <response status="200 203">
      <representation mediaType="application/xml" element="auth:serviceCatalog"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="userRedirect">
    <response status="303">
      <representation>
        <param name="Location" type="xsd:anyURI" style="header"/>
      </representation>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="auth:badRequest"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="auth:unauthorized"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="auth:forbidden"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="auth:itemNotFound"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="auth:authFault"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="auth:serviceUnavailable"/>
    </response>
    <response status="400 401 403 404 500 503">
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part><con:part><con:url>file:\C:\Users\mant0623\Desktop\admin-api.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Auth Admin API Schema Types</xsdxt:title>
      <xsdxt:link rev="index" href="api.xsd"/>
      <xsdxt:link rev="index" href="adminAuthRequest.xsd"/>
      <xsdxt:link rev="index" href="user.xsd"/>
      <xsdxt:link rev="index" href="groups.xsd"/>
      <xsdxt:link rev="index" href="full-token.xsd"/>
      <xsdxt:link rev="index" href="baseURLs.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This is the main index XML Schema document for the Rackspace
                Cloud Authentication Admin API.</p>
    </xsd:documentation>
  </annotation>
  <!--Inlcude Public API-->
  <include schemaLocation="api.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>This is the main index XML Schema document for the Rackspace
                    Cloud Authentication Public API.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <!--Add Administration Stuff-->
  <include schemaLocation="adminCredentials.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Defines credentials used to obtain an auth token.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="user.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Contains entities related to a user.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="groups.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Contains entities related to groups.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="full-token.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Full token definition.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="baseURLs.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Entities related to baseURLs and baseURLRefrences, used to
                    build serviceCatalogs.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Users\mant0623\Desktop\api.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Auth API Schema Types</xsdxt:title>
      <xsdxt:link rev="index" href="auth.xsd"/>
      <xsdxt:link rev="index" href="authRequest.xsd"/>
      <xsdxt:link rev="index" href="fault.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This is the main index XML Schema document
                for the Rackspace Cloud Authentication API.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="auth.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Auth entities include: AuthData, Token, and ServiceCatalog.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="credentials.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Defines credentials used to obtain an auth token.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="fault.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>All fault types.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Users\mant0623\Desktop\auth.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Token and Service Catalog</xsdxt:title>
      <xsdxt:link rel="index" href="api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines the token and the service catalog
                entities.</p>
    </xsd:documentation>
  </annotation>
  <!--Root Elements-->
  <element name="auth" type="auth:AuthData">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A combination of the token and the service catalog. This
                    is returned when a user authenticates.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/auth.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/auth.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="serviceCatalog" type="auth:ServiceCatalog">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The service catalog contains a list of all regional and
                    global endpoints available to a user. The endpoints are
                    sorted by service type.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/serviceCatalog.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/serviceCatalog.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="AuthData">
    <sequence>
      <element name="token" type="auth:Token">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>An Auth Token.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element ref="auth:serviceCatalog">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The service catalog.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="Token">
    <attribute name="id" type="xsd:ID" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The Token Id, to be used in Authentication headers.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="expires" type="xsd:dateTime" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The token will be invalid after the expires time.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="ServiceCatalog">
    <sequence>
      <element name="service" type="auth:Service" minOccurs="1" maxOccurs="1000">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of services.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
  </complexType>
  <complexType name="Service">
    <sequence>
      <element name="endpoint" type="auth:Endpoint" minOccurs="1" maxOccurs="1000">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A list of endpoints.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="name" type="xsd:ID" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The service name.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="Endpoint">
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The airport code of the region where the endpoint
                        lives.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute default="false" name="v1Default" type="xsd:boolean" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>If true, then the endpoint will be selected
                        automatically in V1.0 of the Auth API.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The publically accessible service URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A service URL, accessible only within the
                        Rackspace Cloud.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A service URL used for administration. This may expose
                        additional functionality not found in the public and
                        internal URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Users\mant0623\Desktop\credentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Credentials</xsdxt:title>
      <xsdxt:link rel="index" href="api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines entities credentials used to obtained
                a token from the authentication service.</p>
    </xsd:documentation>
  </annotation>
  <element name="credentials" type="auth:UserCredentials">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Credentials used to obtain an auth token.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/credentials.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/credentials.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="Credentials" abstract="true"/>
  <complexType name="KeyCredentials">
    <complexContent>
      <extension base="auth:Credentials">
        <attribute name="key" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>The API key.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="UserCredentials">
    <complexContent>
      <extension base="auth:KeyCredentials">
        <attribute name="username" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>The name of the user authenticated.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Users\mant0623\Desktop\fault.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2009 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Faults</xsdxt:title>
      <xsdxt:link rel="index" href="api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>
        This schema file defines faults that may be raised by the Auth
                API. These faults are derived from the
        <a href="#type_AuthFault" title="See definition of         AuthFault">AuthFault</a>
        .
      </p>
      <p>
        Faults are associated with a default HTTP status code that
                corresponds to the particular fault type. For example an
        <a href="#element_itemNotFound" title="see definition of         itemNotFound">&lt;itemNotFound></a>
        element is associated
                with the HTTP status code 404. Some elements, the
        <a href="#element_authFault" title="see definition of         authFault">&lt;authFault></a>
        element for example, may be
                associated with multiple status codes. It is also possible
                for multiple fault elements to be associated with the same
                default code. The examples below showcase the default status
                codes for each element type. Note that these default codes are
                not part of the formal schema. In practice, however, an
                element type will likely be associated with its corresponding
                default status code.
      </p>
    </xsd:documentation>
  </annotation>
  <!--Elements-->
  <element name="authFault" type="auth:AuthFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A generic Auth API fault.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/authFault.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/authFault.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="userDisabled" type="auth:UserDisabledFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The user has been disabled and is not permitted to
                    authenticate.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/disabled.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/disabled.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="badRequest" type="auth:BadRequestFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The request is malformed.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/badRequest.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/badRequest.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="temporaryUnavailable" type="auth:TemporaryUnavailableFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The service request is temporary unavailable.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/temporaryUnavailable.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/temporaryUnavailable.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="unauthorized" type="auth:UnauthorizedFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Authorization failed. Bad API Key? Username?</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/unauthorized.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/unauthorized.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="itemNotFound" type="auth:ItemNotFoundFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The item or resource could not be found.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/notfound.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/notfound.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="forbidden" type="auth:ForbiddenFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Authentication succeeded but you lack sufficient privileges.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/forbidden.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/forbidden.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="usernameConflict" type="auth:UsernameConflictFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The username already exists.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/nameconflict.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/nameconflict.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="serviceUnavailable" type="auth:ServiceUnavailableFault">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The API is currently unavailable.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/unavailable.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/unavailable.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="AuthFault">
    <sequence>
      <element name="message" type="xsd:string">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A human readable message that is appropriate for display
                            to the end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
      <element name="details" type="xsd:string" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>The optional &lt;details> element may contain useful
                            information for tracking down errors (e.g a stack
                            trace). This information may or may not be appropriate
                            for display to an end user.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="code" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The HTTP status code associated with the current fault.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="UserDisabledFault">
    <complexContent>
      <extension base="auth:AuthFault"/>
    </complexContent>
  </complexType>
  <complexType name="BadRequestFault">
    <complexContent>
      <extension base="auth:AuthFault"/>
    </complexContent>
  </complexType>
  <complexType name="TemporaryUnavailableFault">
    <complexContent>
      <extension base="auth:AuthFault"/>
    </complexContent>
  </complexType>
  <complexType name="UnauthorizedFault">
    <complexContent>
      <extension base="auth:AuthFault"/>
    </complexContent>
  </complexType>
  <complexType name="ItemNotFoundFault">
    <complexContent>
      <extension base="auth:AuthFault"/>
    </complexContent>
  </complexType>
  <complexType name="ForbiddenFault">
    <complexContent>
      <extension base="auth:AuthFault"/>
    </complexContent>
  </complexType>
  <complexType name="UsernameConflictFault">
    <complexContent>
      <extension base="auth:AuthFault"/>
    </complexContent>
  </complexType>
  <complexType name="ServiceUnavailableFault">
    <complexContent>
      <extension base="auth:AuthFault"/>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Users\mant0623\Desktop\adminCredentials.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Alternate Credential Types</xsdxt:title>
      <xsdxt:link rel="index" href="api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema file defines alternate credentials used by admins
                to obtained a token from the authentication service.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="credentials.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Defines credentials used to obtain an auth token.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <element name="nastCredentials" type="auth:NastCredentials">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Nast Credentials.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/nast-credentials.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/nast-credentials.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="mossoCredentials" type="auth:MossoCredentials">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Mosso Credentials.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/mosso-credentials.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/mosso-credentials.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="passwordCredentials" type="auth:PasswordCredentials">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Password credentials.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/password-credentials.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/password-credentials.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <complexType name="NastCredentials">
    <complexContent>
      <extension base="auth:KeyCredentials">
        <attribute name="nastId" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>Nast Id used to identify the user.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="MossoCredentials">
    <complexContent>
      <extension base="auth:KeyCredentials">
        <attribute name="mossoId" type="xsd:int" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>Mosso account used to identify the user.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
  <complexType name="PasswordCredentials">
    <complexContent>
      <extension base="auth:Credentials">
        <attribute name="username" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>The name of the user authenticated.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
        <attribute name="password" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>Password used to verify the user.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Users\mant0623\Desktop\user.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Auth User</xsdxt:title>
      <xsdxt:link rel="index" href="admin-api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema defines entity contains entities related to a user.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="baseURLs.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Entities related to baseURLs and baseURLRefrences, used to
                    build serviceCatalogs.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <element name="user" type="auth:User">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An Auth User.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/user.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/user.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="User">
    <sequence>
      <element ref="auth:baseURLRefs" minOccurs="0">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>A reference to BaseURLs associated with the user.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="id" type="xsd:ID" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A  unique user id.  This is also known as the CLOUD username.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="mossoId" type="xsd:int" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The mosso account number associated with this user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="nastId" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The mosso account number associated with this user.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="key" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The user's API Key.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>True if the user is enabled.  A user cannot log in if
                        enabled is false.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <!--Migration-disabled-->
    <!--<attribute name="migrated" type="xsd:boolean" use="optional">
            <annotation>
                <xsd:documentation
                    xml:lang="EN"
                    xmlns="http://www.w3.org/1999/xhtml">
                    <p>
                        Whether this user has been migrated to IDM.
                    </p>
                </xsd:documentation>
            </annotation>
        </attribute>-->
    <attribute name="created" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A Timestamp of when the user was created.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="updated" type="xsd:dateTime" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A Timestamp of when the user was last updated.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="UserWithOnlyEnabled">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The only allowed attribute for this User type is the enabled
                    attribute.</p>
      </xsd:documentation>
    </annotation>
    <complexContent>
      <restriction base="auth:User">
        <attribute name="id" type="xsd:ID" use="prohibited"/>
        <attribute name="mossoId" type="xsd:int" use="prohibited"/>
        <attribute name="nastId" type="xsd:string" use="prohibited"/>
        <attribute name="key" type="xsd:string" use="prohibited"/>
        <attribute name="created" type="xsd:dateTime" use="prohibited"/>
        <attribute name="updated" type="xsd:dateTime" use="prohibited"/>
        <attribute name="enabled" type="xsd:boolean" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>True if the user is enabled.  A user cannot log in if
                                enabled is false.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="UserWithOnlyKey">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>The only allowed attribute for this User type is the key
                    attribute.</p>
      </xsd:documentation>
    </annotation>
    <complexContent>
      <restriction base="auth:User">
        <attribute name="id" type="xsd:ID" use="prohibited"/>
        <attribute name="mossoId" type="xsd:int" use="prohibited"/>
        <attribute name="nastId" type="xsd:string" use="prohibited"/>
        <attribute name="enabled" type="xsd:boolean" use="prohibited"/>
        <attribute name="created" type="xsd:dateTime" use="prohibited"/>
        <attribute name="updated" type="xsd:dateTime" use="prohibited"/>
        <attribute name="key" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>The user's API Key.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </restriction>
    </complexContent>
  </complexType>
  <complexType name="UserWithId">
    <complexContent>
      <restriction base="auth:User">
        <attribute name="id" type="xsd:ID" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>A  unique user id.  This is also known as the CLOUD username.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </restriction>
    </complexContent>
  </complexType>
  <!--Simple Types-->
  <simpleType name="UserType">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>An authRequest can be made with various user/account
                    names. The UserType signifies what kind of account is
                    being used to log in.</p>
      </xsd:documentation>
    </annotation>
    <restriction base="xsd:string">
      <enumeration value="CLOUD">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Cloud username.  This is the same as the unique user id
                            in the UserType.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="NAST">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Nast account number.  This is the same as a nastId in
                            the UserType.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
      <enumeration value="MOSSO">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Mosso account number. This is the same as mossoId in
                            the UserType.</p>
          </xsd:documentation>
        </annotation>
      </enumeration>
    </restriction>
  </simpleType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Users\mant0623\Desktop\baseURLs.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Base URLs</xsdxt:title>
      <xsdxt:link rel="index" href="admin-api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema defines base URLs and base URL references.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="user.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Contains entities related to a user.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <element name="baseURLs" type="auth:BaseURLList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of base URLs.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/baseURLs.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/baseURLs.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="baseURL" type="auth:BaseURL">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A base URLs.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/baseURL.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/baseURL.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="baseURLRef" type="auth:BaseURLRef">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A refrence to a base URL.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/baseURLRequest.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/baseURLRequest.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <element name="baseURLRefs" type="auth:BaseURLRefList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A list of base URL refrences.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/baseURLRefs.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/baseURLRefs.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="BaseURL">
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="userType" type="auth:UserType" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>What type of user informatins hould be appended to this
                        baseURL to form a complete endpoint.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="serviceName" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The base URL's service name.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="region" type="xsd:string" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The URL's region.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="publicURL" type="xsd:anyURI" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The public base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="internalURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The internal version of the public base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="adminURL" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>The admin base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="default" type="xsd:boolean" default="false" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>If true the baseURL is automatically added to
                        new accounts.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="enabled" type="xsd:boolean" default="true" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>True if the Base URL is enabled (active). 
                        A Base URL cannot be added if it's disabled or inactive (false).</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="BaseURLRef">
    <attribute name="id" type="xsd:int" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>An ID uniquely identifying the base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="href" type="xsd:anyURI" use="optional">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>A hyperlink refrence to the base URL.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
    <attribute name="v1Default" type="xsd:boolean" use="optional" default="false">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>If true, then the refred to base URL is used in version
                        1.0 of the Auth service.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
  <complexType name="BaseURLList">
    <sequence>
      <element name="baseURL" type="auth:BaseURL" minOccurs="0" maxOccurs="1000"/>
    </sequence>
  </complexType>
  <complexType name="BaseURLRefList">
    <sequence>
      <element name="baseURLRef" type="auth:BaseURLRef" minOccurs="0" maxOccurs="1000"/>
    </sequence>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Users\mant0623\Desktop\groups.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Auth User Groups</xsdxt:title>
      <xsdxt:link rel="index" href="admin-api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>This schema defines entity contains entities related to the groups of a user.</p>
    </xsd:documentation>
  </annotation>
  <element name="groups" type="auth:GroupsList">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Auth Groups.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/groups.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/groups.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="GroupsList">
    <sequence>
      <element name="group" type="auth:Group" minOccurs="0" maxOccurs="1000"/>
    </sequence>
  </complexType>
  <complexType name="Group">
    <sequence>
      <element name="description" type="string" minOccurs="0" maxOccurs="1">
        <annotation>
          <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
            <p>Description of the group.</p>
          </xsd:documentation>
        </annotation>
      </element>
    </sequence>
    <attribute name="id" type="xsd:string" use="required">
      <annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>ID of the group.</p>
        </xsd:documentation>
      </annotation>
    </attribute>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Users\mant0623\Desktop\full-token.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2010 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:auth="http://docs.rackspacecloud.com/auth/api/v1.1" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <xsdxt:title>Full Token</xsdxt:title>
      <xsdxt:link rel="index" href="admin-api.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
      <p>Defines a full token.</p>
    </xsd:documentation>
  </annotation>
  <!--Inlcude Auth Stuff-->
  <include schemaLocation="auth.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>Auth entities include: AuthData, Token, and ServiceCatalog.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <element name="token" type="auth:FullToken">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
        <p>A Token containing user information and a timestamp of when
                    it was created.</p>
      </xsd:documentation>
      <xsd:appinfo>
        <xsdxt:samples>
          <xsdxt:sample>
            <xsdxt:code type="application/xml" href="../samples/full-token.xml"/>
          </xsdxt:sample>
          <xsdxt:sample>
            <xsdxt:code type="application/json" href="../samples/full-token.json"/>
          </xsdxt:sample>
        </xsdxt:samples>
      </xsd:appinfo>
    </annotation>
  </element>
  <!--Complex Types-->
  <complexType name="FullToken">
    <complexContent>
      <extension base="auth:Token">
        <attribute name="created" type="xsd:dateTime" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>A timestamp of when the token was created.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
        <attribute name="userId" type="xsd:string" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>An Id of the user associated with this token.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
        <attribute name="userURL" type="xsd:anyURI" use="required">
          <annotation>
            <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
              <p>A URI of the user associated with this token.</p>
            </xsd:documentation>
          </annotation>
        </attribute>
      </extension>
    </complexContent>
  </complexType>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Users\mant0623\Desktop\api-common.xsd</con:url><con:content><![CDATA[<?xml-stylesheet type="text/xsl" href="../xslt/schema.xslt"?>
<!--(C) 2009-2011 Rackspace Hosting, All Rights Reserved-->
<schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns="http://www.w3.org/2001/XMLSchema" xmlns:capi="http://docs.openstack.org/common/api/v1.0" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <annotation>
    <xsd:appinfo xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xsdxt:title>Open Stack Common API Schema Types 1.0</xsdxt:title>
      <xsdxt:link rev="index" href="extensions.xsd"/>
      <xsdxt:link rev="index" href="version.xsd"/>
    </xsd:appinfo>
    <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <p>This is the main index XML Schema document
                for Common API Schema Types Version 1.0.</p>
    </xsd:documentation>
  </annotation>
  <include schemaLocation="extensions.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to extensions.</p>
      </xsd:documentation>
    </annotation>
  </include>
  <include schemaLocation="version.xsd">
    <annotation>
      <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml" xmlns:xs="http://www.w3.org/2001/XMLSchema">
        <p>Types related to API version details.</p>
      </xsd:documentation>
    </annotation>
  </include>
</schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Users\mant0623\Desktop\extensions.xsd</con:url><con:content><![CDATA[<xsd:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:ext="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <!--Import ATOM specific schema definitions-->
  <xsd:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom.xsd"/>
  <xsd:element name="extensions" type="ext:Extensions"/>
  <xsd:element name="extension" type="ext:Extension"/>
  <xsd:complexType name="Extensions">
    <xsd:sequence>
      <xsd:element name="extension" type="ext:Extension" minOccurs="0" maxOccurs="1000"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xsd:sequence>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
  </xsd:complexType>
  <xsd:complexType name="Extension">
    <xsd:sequence>
      <xsd:element name="description" type="xsd:string" minOccurs="1"/>
      <xsd:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="1000"/>
      <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xsd:sequence>
    <xsd:attribute name="name" type="xsd:string" use="required"/>
    <xsd:attribute name="namespace" type="xsd:anyURI" use="required"/>
    <xsd:attribute name="alias" type="ext:Alias" use="required"/>
    <xsd:attribute name="updated" type="xsd:dateTime" use="optional"/>
    <xsd:anyAttribute namespace="##other" processContents="lax"/>
    <xsd:assert vc:minVersion="1.1" test="atom:link[@rel='describedby']">
      <xsd:annotation>
        <xsd:documentation xml:lang="EN" xmlns="http://www.w3.org/1999/xhtml">
          <p>There should be at least one atom link
                        with a describedby relation.</p>
        </xsd:documentation>
      </xsd:annotation>
    </xsd:assert>
  </xsd:complexType>
  <xsd:simpleType name="Alias">
    <xsd:restriction base="xsd:string">
      <xsd:pattern value="\w+\-\w+"/>
    </xsd:restriction>
  </xsd:simpleType>
</xsd:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Users\mant0623\Desktop\atom.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://www.w3.org/2005/Atom" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <xs:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="xml.xsd"/>
  <xs:simpleType name="relation">
    <xs:restriction base="xs:string">
      <xs:enumeration value="alternate"/>
      <xs:enumeration value="appendix"/>
      <xs:enumeration value="archives"/>
      <xs:enumeration value="author"/>
      <xs:enumeration value="bookmark"/>
      <xs:enumeration value="chapter"/>
      <xs:enumeration value="contents"/>
      <xs:enumeration value="copyright"/>
      <xs:enumeration value="current"/>
      <xs:enumeration value="describedby"/>
      <xs:enumeration value="edit"/>
      <xs:enumeration value="edit-media"/>
      <xs:enumeration value="first"/>
      <xs:enumeration value="glossary"/>
      <xs:enumeration value="help"/>
      <xs:enumeration value="hub"/>
      <xs:enumeration value="icon"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="latest-version"/>
      <xs:enumeration value="license"/>
      <xs:enumeration value="monitor"/>
      <xs:enumeration value="monitor-group"/>
      <xs:enumeration value="next"/>
      <xs:enumeration value="next-arvhice"/>
      <xs:enumeration value="nofollow"/>
      <xs:enumeration value="payment"/>
      <xs:enumeration value="predecessor-version"/>
      <xs:enumeration value="prefetch"/>
      <xs:enumeration value="prev"/>
      <xs:enumeration value="previous"/>
      <xs:enumeration value="prev-archive"/>
      <xs:enumeration value="replies"/>
      <xs:enumeration value="search"/>
      <xs:enumeration value="section"/>
      <xs:enumeration value="self"/>
      <xs:enumeration value="service"/>
      <xs:enumeration value="start"/>
      <xs:enumeration value="stylesheet"/>
      <xs:enumeration value="subsection"/>
      <xs:enumeration value="successor-version"/>
      <xs:enumeration value="up"/>
      <xs:enumeration value="version-history"/>
      <xs:enumeration value="via"/>
      <xs:enumeration value="working-copy"/>
      <xs:enumeration value="working-copy-of"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:element name="link" type="atom:link"/>
  <xs:complexType name="link">
    <xs:annotation>
      <xs:documentation>
        <html:p>
          See section 3.4 of the ATOM RFC
          <html:a href="http://tools.ietf.org/html/rfc4287">RFC4287</html:a>
        </html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:attribute name="rel" use="required" type="atom:relation">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="href" use="required" type="xs:anyURI">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="hreflang" use="optional" type="xs:NMTOKEN">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="title" use="optional" type="xs:string">
      <xs:annotation>
        <xs:documentation>
          <html:p>TODO</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Users\mant0623\Desktop\xml.xsd</con:url><con:content><![CDATA[<?xml-stylesheet href="../2008/09/xsd.xsl" type="text/xsl"?>
<xs:schema targetNamespace="http://www.w3.org/XML/1998/namespace" xml:lang="en" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.w3.org/1999/xhtml">
  <xs:annotation>
    <xs:documentation>
      <div>
        <h1>About the XML namespace</h1>
        <div class="bodytext">
          <p>This schema document describes the XML namespace, in a form
      suitable for import by other schema documents.</p>
          <p>
            See
            <a href="http://www.w3.org/XML/1998/namespace.html">http://www.w3.org/XML/1998/namespace.html</a>
            and
            <a href="http://www.w3.org/TR/REC-xml">http://www.w3.org/TR/REC-xml</a>
            for information 
      about this namespace.
          </p>
          <p>Note that local names in this namespace are intended to be
      defined only by the World Wide Web Consortium or its subgroups.
      The names currently defined in this namespace are listed below.
      They should not be used with conflicting semantics by any Working
      Group, specification, or document instance.</p>
          <p>
            See further below in this document for more information about
            <a href="#usage">how to refer to this schema document from your own
      XSD schema documents</a>
            and about
            <a href="#nsversioning">the
      namespace-versioning policy governing this schema document</a>
            .
          </p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:attribute name="lang">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>lang (as an attribute name)</h3>
          <p>denotes an attribute whose value
       is a language code for the natural language of the content of
       any element; its value is inherited.  This name is reserved
       by virtue of its definition in the XML specification.</p>
        </div>
        <div>
          <h4>Notes</h4>
          <p>Attempting to install the relevant ISO 2- and 3-letter
      codes as the enumerated possible values is probably never
      going to be a realistic possibility.</p>
          <p>
            See BCP 47 at
            <a href="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">http://www.rfc-editor.org/rfc/bcp/bcp47.txt</a>
            and the IANA language subtag registry at
            <a href="http://www.iana.org/assignments/language-subtag-registry">http://www.iana.org/assignments/language-subtag-registry</a>
            for further information.
          </p>
          <p>The union allows for the 'un-declaration' of xml:lang with
      the empty string.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:union memberTypes="xs:language">
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:enumeration value=""/>
          </xs:restriction>
        </xs:simpleType>
      </xs:union>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="space">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>space (as an attribute name)</h3>
          <p>denotes an attribute whose
       value is a keyword indicating what whitespace processing
       discipline is intended for the content of the element; its
       value is inherited.  This name is reserved by virtue of its
       definition in the XML specification.</p>
        </div>
      </xs:documentation>
    </xs:annotation>
    <xs:simpleType>
      <xs:restriction base="xs:NCName">
        <xs:enumeration value="default"/>
        <xs:enumeration value="preserve"/>
      </xs:restriction>
    </xs:simpleType>
  </xs:attribute>
  <xs:attribute name="base" type="xs:anyURI">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>base (as an attribute name)</h3>
          <p>denotes an attribute whose value
       provides a URI to be used as the base for interpreting any
       relative URIs in the scope of the element on which it
       appears; its value is inherited.  This name is reserved
       by virtue of its definition in the XML Base specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xmlbase/">http://www.w3.org/TR/xmlbase/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attribute name="id" type="xs:ID">
    <xs:annotation>
      <xs:documentation>
        <div>
          <h3>id (as an attribute name)</h3>
          <p>denotes an attribute whose value
       should be interpreted as if declared to be of type ID.
       This name is reserved by virtue of its definition in the
       xml:id specification.</p>
          <p>
            See
            <a href="http://www.w3.org/TR/xml-id/">http://www.w3.org/TR/xml-id/</a>
            for information about this attribute.
          </p>
        </div>
      </xs:documentation>
    </xs:annotation>
  </xs:attribute>
  <xs:attributeGroup name="specialAttrs">
    <xs:attribute ref="xml:base"/>
    <xs:attribute ref="xml:lang"/>
    <xs:attribute ref="xml:space"/>
    <xs:attribute ref="xml:id"/>
  </xs:attributeGroup>
  <xs:annotation>
    <xs:documentation>
      <div>
        <h3>Father (in any context at all)</h3>
        <div class="bodytext">
          <p>denotes Jon Bosak, the chair of 
      the original XML Working Group.  This name is reserved by 
      the following decision of the W3C XML Plenary and 
      XML Coordination groups:</p>
          <blockquote>
            <p>In appreciation for his vision, leadership and
	dedication the W3C XML Plenary on this 10th day of
	February, 2000, reserves for Jon Bosak in perpetuity
	the XML name "xml:Father".</p>
          </blockquote>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div xml:id="usage" id="usage">
        <h2>
          <a name="usage">About this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            This schema defines attributes and an attribute group suitable
      for use by schemas wishing to allow
            <code>xml:base</code>
            ,
            <code>xml:lang</code>
            ,
            <code>xml:space</code>
            or
            <code>xml:id</code>
            attributes on elements they define.
          </p>
          <p>To enable this, such a schema must import this schema for
      the XML namespace, e.g. as follows:</p>
          <pre>&lt;schema . . .>
           . . .
           &lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2001/xml.xsd"/></pre>
          <p>or</p>
          <pre>&lt;import namespace="http://www.w3.org/XML/1998/namespace"
                      schemaLocation="http://www.w3.org/2009/01/xml.xsd"/></pre>
          <p>Subsequently, qualified reference to any of the attributes or the
      group defined below will have the desired effect, e.g.</p>
          <pre>&lt;type . . .>
           . . .
           &lt;attributeGroup ref="xml:specialAttrs"/></pre>
          <p>will define a type which will schema-validate an instance element
      with any of those attributes.</p>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
  <xs:annotation>
    <xs:documentation>
      <div id="nsversioning" xml:id="nsversioning">
        <h2>
          <a name="nsversioning">Versioning policy for this schema document</a>
        </h2>
        <div class="bodytext">
          <p>
            In keeping with the XML Schema WG's standard versioning
      policy, this schema document will persist at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            .
          </p>
          <p>
            At the date of issue it can also be found at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            .
          </p>
          <p>
            The schema document at that URI may however change in the future,
      in order to remain compatible with the latest version of XML
      Schema itself, or with the XML namespace itself.  In other words,
      if the XML Schema or XML namespaces change, the version of this
      document at
            <a href="http://www.w3.org/2001/xml.xsd">http://www.w3.org/2001/xml.xsd</a>
            will change accordingly; the version at
            <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            will not change.
          </p>
          <p>Previous dated (and unchanging) versions of this schema 
      document are at:</p>
          <ul>
            <li>
              <a href="http://www.w3.org/2009/01/xml.xsd">http://www.w3.org/2009/01/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2007/08/xml.xsd">http://www.w3.org/2007/08/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2004/10/xml.xsd">http://www.w3.org/2004/10/xml.xsd</a>
            </li>
            <li>
              <a href="http://www.w3.org/2001/03/xml.xsd">http://www.w3.org/2001/03/xml.xsd</a>
            </li>
          </ul>
        </div>
      </div>
    </xs:documentation>
  </xs:annotation>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part><con:part><con:url>file:\C:\Users\mant0623\Desktop\version.xsd</con:url><con:content><![CDATA[<xs:schema elementFormDefault="qualified" attributeFormDefault="unqualified" targetNamespace="http://docs.openstack.org/common/api/v1.0" xmlns:vers="http://docs.openstack.org/common/api/v1.0" xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:xs="http://www.w3.org/2001/XMLSchema">
  <!--Import ATOM specific schema definitions-->
  <xs:import namespace="http://www.w3.org/2005/Atom" schemaLocation="atom.xsd"/>
  <!--Multiple choices-->
  <xs:element name="choices" type="vers:VersionChoiceList"/>
  <!--Versioning-->
  <xs:element name="versions" type="vers:VersionChoiceList"/>
  <xs:element name="version" type="vers:VersionChoice" vc:minVersion="1.0" vc:maxVersion="1.1"/>
  <xs:element name="version" type="vers:VersionChoiceRoot" vc:minVersion="1.1"/>
  <!--Types-->
  <xs:simpleType name="VersionStatus">
    <xs:annotation>
      <xs:documentation>
        <html:p>The VersionStatus type describes a service's operational status.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:restriction base="xs:string">
      <xs:enumeration value="DEPRECATED"/>
      <xs:enumeration value="ALPHA"/>
      <xs:enumeration value="BETA"/>
      <xs:enumeration value="CURRENT"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="VersionChoiceList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice list outlines a collection of service version choices.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="version" type="vers:VersionChoice" minOccurs="1" maxOccurs="1000"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
    <xs:assert vc:minVersion="1.1" test="every $v in vers:version satisfies $v/atom:link[@rel='self']">
      <xs:annotation>
        <xs:documentation>
          <html:p>In version lists, every single version must
                        contain at least one self link.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:assert>
  </xs:complexType>
  <xs:complexType name="VersionChoiceRoot" vc:minVersion="1.1">
    <xs:complexContent>
      <xs:extension base="vers:VersionChoice">
        <xs:assert test="atom:link[@rel='describedby']">
          <xs:annotation>
            <xs:documentation>
              <html:p>When used as a root element, a version choice
                                must contain at least one describedby link.</html:p>
            </xs:documentation>
          </xs:annotation>
        </xs:assert>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="VersionChoice">
    <xs:annotation>
      <xs:documentation>
        <html:p>A version choice contains relevant information about an available service
                    that a user can then use to target a specific version of the service. Note
                    that both the descriptive media types and the atom link references are
                    not mandatory and are offered as message enrichment elements rather
                    than message requirements.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-types" type="vers:MediaTypeList" minOccurs="0" maxOccurs="1"/>
      <xs:element vc:minVersion="1.1" ref="atom:link" minOccurs="0" maxOccurs="1000"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>The ID of a version choice represents the service version's unique 
                        identifier. This ID is guaranteed to be unique only among the
                        service version choices outlined in the VersionChoiceList.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="status" type="vers:VersionStatus" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>A version choice's status describes the current operational state of
                        the given service version. The operational status is captured in a
                        simple type enumeration called VersionStatus.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="updated" type="xs:dateTime" use="optional">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            A version choice's updated attribute describes
                        the time when the version was updated. The
                        time should be updated anytime
            <html:strong>anything</html:strong>
            in the
                        version has changed: documentation,
                        extensions, bug fixes.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaTypeList">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaTypeList outlines a collection of valid media types for a given 
                    service version.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:element name="media-type" type="vers:MediaType" minOccurs="1" maxOccurs="1000"/>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xs:sequence>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
  <xs:complexType name="MediaType">
    <xs:annotation>
      <xs:documentation>
        <html:p>A MediaType describes what content types the service version understands.</html:p>
      </xs:documentation>
    </xs:annotation>
    <xs:sequence>
      <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="1000"/>
    </xs:sequence>
    <xs:attribute name="base" type="xs:string" use="optional" default="">
      <xs:annotation>
        <xs:documentation>
          <html:p>The base of a given media type describes the simple MIME type
                        that then a more complicated media type can be derived from. These
                        types are basic and provide no namespace or version specific
                        data are are only provided as a convenience. Because of this the
                        base attribute is declared as optional.</html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="xs:string" use="required">
      <xs:annotation>
        <xs:documentation>
          <html:p>
            The type attribute of a MediaType describes the MIME specific
                        identifier of the media type in question. This identifier should include 
                        a vendor namespace (
            <html:a href="http://tools.ietf.org/html/rfc2048">See RFC 2048</html:a>
            )
                        as well as a version suffix.
          </html:p>
        </xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:anyAttribute namespace="##other" processContents="lax"/>
  </xs:complexType>
</xs:schema>]]></con:content><con:type>http://www.w3.org/2001/XMLSchema</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#endPoint}</con:endpoint></con:endpoints><con:resource name="v1.1" path="${#Project#pathV1}"><con:settings/><con:parameters/><con:resource name="extensions" path="extensions"><con:settings/><con:parameters/><con:resource name="{alias}" path="{alias}"><con:settings/><con:parameters><con:parameter><con:name>alias</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - getExtension" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:extension</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getExtensions" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:extensions</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="auth" path="auth"><con:settings/><con:parameters/><con:method name="POST - authenticate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:nastCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:mossoCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401 403 400 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="token" path="token"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter><con:name>tokenId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - validateToken" method="GET"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>type</con:name><con:value>CLOUD</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>CLOUD</con:default><con:option>CLOUD</con:option><con:option>NAST</con:option><con:option>MOSSO</con:option></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:token</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE - revokeToken" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="enabled" path="enabled"><con:settings/><con:parameters/><con:method name="GET - getUserEnabled" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT - setUserEnabled" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="key" path="key"><con:settings/><con:parameters/><con:method name="GET - getUserKey" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT - setUserKey" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="serviceCatalog" path="serviceCatalog"><con:settings/><con:parameters/><con:method name="GET - getServiceCatalog" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceCatalog</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="baseURLRefs" path="baseURLRefs"><con:settings/><con:parameters/><con:resource name="{baseURLId}" path="{baseURLId}"><con:settings/><con:parameters><con:parameter><con:name>baseURLId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - getBaseURLRef" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRef</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE - deleteBaseURLRef" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getBaseURLRefs" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRefs</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="POST - addBaseURLRef" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRef</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLRef</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="groups" path="groups"><con:settings/><con:parameters/><con:method name="GET - getUserGroups" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:groups</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getUser" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="DELETE - deleteUser" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="PUT - updateUser" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="POST - createUser" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:usernameConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 409 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="nast/{nastId}" path="nast/{nastId}"><con:settings/><con:parameters><con:parameter><con:name>nastId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - userRedirect" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType xsi:nil="true"/><con:status>303</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="mosso/{mossoId}" path="mosso/{mossoId}"><con:settings/><con:parameters><con:parameter><con:name>mossoId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - userRedirect" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType xsi:nil="true"/><con:status>303</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="baseURLs" path="baseURLs"><con:settings/><con:parameters/><con:resource name="{baseURLId}" path="{baseURLId}"><con:settings/><con:parameters><con:parameter><con:name>baseURLId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="GET - getBaseURL" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURL</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="enabled" path="enabled"><con:settings/><con:parameters/><con:method name="GET - getBaseURL" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURL</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 404 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getBaseURLs" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceName</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:baseURLs</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400 401 403 500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="GET - getVersionInfo" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:authFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500 503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>https://auth.api.rackspacecloud.com</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-GRPADM" type="rest" basePath="" definitionUrl="C:\Users\mant0623\Desktop\RAX-GRPADM-v20.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints><con:endpoint>${#Project#endPoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path2}"><con:settings/><con:parameters/><con:resource name="RAX-GRPADM" path="RAX-GRPADM"><con:settings/><con:parameters/><con:resource name="groups" path="groups"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{groupId}" path="{groupId}"><con:settings/><con:parameters><con:parameter><con:name>groupId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add User to Group - addUserToGroup" method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove User From Group - removeUserFromGroup" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get users for Group" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Group - getGroup" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Update a Group - updateGroup" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Group - deleteGroup" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add a New Group - addGroup" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get groups" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-KSQA" type="rest" definitionUrl="C:\Users\mant0623\Desktop\Functional - RAX-KSQA-admin.xml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/mant0623/Desktop/Functional%20-%20RAX-KSQA-admin.xml"><con:part><con:url>file:/C:/Users/mant0623/Desktop/Functional%20-%20RAX-KSQA-admin.xml</con:url><con:content><![CDATA[<con:testSuite name="Functional - RAX-KSQA-admin" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:runType>SEQUENTIAL</con:runType>
  <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="users" searchProperties="true" id="37126197-91a7-4833-8111-e55e3c2fd990" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
    <con:settings/>
    <con:testStep type="restrequest" name="POST - token - xml">
      <con:settings/>
      <con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="groovy" name="store token info">
      <con:settings/>
      <con:config>
        <script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="POST - token - admin - xml">
      <con:settings/>
      <con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="POST - token - admin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password2}" username="${#TestSuite#username2}"/>
&lt;/auth></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="groovy" name="store token info 2">
      <con:settings/>
      <con:config>
        <script>def tokenId = context.expand( '${POST - token - admin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - admin - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/v2.0\'; //ns8:access[1]/ns8:user[1]/@id}' )

log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId2", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - updateUserSecretQA - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - updateUserSecretQA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains" disabled="true">
            <con:configuration>
              <token>answer="Yes"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains 1" disabled="true">
            <con:configuration>
              <token>question="Is this a test?"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId2}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - userSecretQA - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - userSecretQA - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>answer="Yes"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains 1">
            <con:configuration>
              <token>question="Is this a test?"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns11='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns11:secretQA[1]/@username</path>
              <content>jmunoz</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId2}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - updateUserSecretQA - json">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - updateUserSecretQA - json" mediaType="application/json" postQueryString="false" accept="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>{
    "RAX-KSQA:secretQA":{
        "question":"Is this a test too?",
        "answer":"Yes, it is."
    }
}</con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains" disabled="true">
            <con:configuration>
              <token>"answer":"Yes, it is."</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains 1" disabled="true">
            <con:configuration>
              <token>"question":"Is this a test too?"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId2}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - userSecretQA - json">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - userSecretQA - json" mediaType="application/xml" accept="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>"answer":"Yes, it is."</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains 1">
            <con:configuration>
              <token>"question":"Is this a test too?"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/users/3/RAX-KSQA/secretqa';
//ns1:Response[1]/ns1:secretQA[1]/ns1:username[1]</path>
              <content>jmunoz</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId2}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - updateUserSecretQA - badId 404 - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - updateUserSecretQA - badId 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 404</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>User not found</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="121212121"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - updateUserSecretQA - badId 404 - json">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - updateUserSecretQA - badId 404 - json" mediaType="application/xml" postQueryString="false" accept="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 404</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>User not found</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains 1">
            <con:configuration>
              <token>{"itemNotFound":{"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="121212121"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - updateUserSecretQA - badAuth401 - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - updateUserSecretQA - badAuth401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 401</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId2}"/>
            <con:entry key="X-Auth-Token" value="badAuth"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - updateUserSecretQA - badAuth401 - json">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - updateUserSecretQA - badAuth401 - json" mediaType="application/xml" postQueryString="false" accept="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 401</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId2}"/>
            <con:entry key="X-Auth-Token" value="badAuth"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - updateUserSecretQA - non Admin 403 - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - updateUserSecretQA - non Admin 403 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId2}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - updateUserSecretQA - non Admin 403 - json">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - updateUserSecretQA - non Admin 403 - json" mediaType="application/xml" postQueryString="false" accept="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId2}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - userSecretQA - badId 404 - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - userSecretQA - badId 404 - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 404</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>User not found</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="121212121"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - userSecretQA - badId 404 - json">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - userSecretQA - badId 404 - json" mediaType="application/xml" accept="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 404</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>User not found</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="121212121"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - userSecretQA - badAuth 401 - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - userSecretQA - badAuth 401 - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 401</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId2}"/>
            <con:entry key="X-Auth-Token" value="badAuth"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - userSecretQA - badAuth 401 - json">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - userSecretQA - badAuth 401 - json" mediaType="application/xml" accept="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 401</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId2}"/>
            <con:entry key="X-Auth-Token" value="badAuth"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - userSecretQA - non Admin 403 - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - userSecretQA - non Admin 403 - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId2}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - userSecretQA - non Admin 403 - json">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - userSecretQA - non Admin 403 - json" mediaType="application/xml" accept="application/json">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId2}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:properties/>
    <con:reportParameters/>
  </con:testCase>
  <con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="users_multipleUsers" searchProperties="true" id="9ed303f7-9b1a-421e-9986-173098592f95" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="">
    <con:settings/>
    <con:testStep type="restrequest" name="POST - token - xml">
      <con:settings/>
      <con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="groovy" name="store token info">
      <con:settings/>
      <con:config>
        <script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="POST -ServiceAdminUserId-CreateServiceAdminAsAdminUser- xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="Add User w/ password" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="POST -ServiceAdminUserId-CreateServiceAdminAsAdminUser- xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" display-name="${#TestCase#serviceAdmin}" enabled="true" email="serviceAdmin@rack.com" username="${#TestCase#serviceAdmin}" OS-KSADM:password="${#TestCase#serviceAdminPw}"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 201</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path>
              <content>serviceAdmin</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - AsAdminListRolesOfServiceAdminUser - xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - AsAdminListRolesOfServiceAdminUser - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:roles[1]/ns1:role/@name</path>
              <content>identity:service-admin</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match 1">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:roles[1]/ns1:role[1]/@id</path>
              <content>4</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
            <con:entry key="userId" value="${POST -ServiceAdminUserId-CreateServiceAdminAsAdminUser- xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="POST -ServiceAdminToken - LoginAsReenabledServiceAdmin- xml">
      <con:settings/>
      <con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="POST -ServiceAdminToken - LoginAsReenabledServiceAdmin- xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#serviceAdminPw}" username="${#TestCase#serviceAdmin}"/>
&lt;/auth></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name</path>
              <content>identity:service-admin</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="groovy" name="store SA">
      <con:settings/>
      <con:config>
        <script>def SAtokenId = context.expand( '${POST -ServiceAdminToken - LoginAsReenabledServiceAdmin- xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get SAtokenId: " + SAtokenId

def SAuserId = context.expand( '${POST -ServiceAdminToken - LoginAsReenabledServiceAdmin- xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@id}' )
log.info "get SAuserId: " + SAuserId

if (SAtokenId == "" | SAuserId == "")
{
	assert false;
}

testRunner.testCase.setPropertyValue("SAtokenId" , SAtokenId)
testRunner.testCase.setPropertyValue("SAuserId" , SAuserId)</script>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="POST -ServiceAdminUserId2-CreateServiceAdmin2AsAdminUser- xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="Add User w/ password" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="POST -ServiceAdminUserId2-CreateServiceAdmin2AsAdminUser- xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" display-name="${#TestCase#serviceAdmin2}" enabled="true" email="serviceAdmin2@rack.com" username="${#TestCase#serviceAdmin2}" OS-KSADM:password="${#TestCase#serviceAdmin2Pw}"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 201</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path>
              <content>serviceAdmin2</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - AsAdminListRolesOfServiceAdminUser2 - xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - AsAdminListRolesOfServiceAdminUser2 - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:roles[1]/ns1:role/@name</path>
              <content>identity:service-admin</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match 1">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:roles[1]/ns1:role/@id</path>
              <content>4</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
            <con:entry key="userId" value="${POST -ServiceAdminUserId2-CreateServiceAdmin2AsAdminUser- xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="POST -ServiceAdmin2Token - LoginAsServiceAdmin2- xml">
      <con:settings/>
      <con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="POST -ServiceAdmin2Token - LoginAsServiceAdmin2- xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#serviceAdmin2Pw}" username="${#TestCase#serviceAdmin2}"/>
&lt;/auth></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name</path>
              <content>identity:service-admin</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="groovy" name="store SA2">
      <con:settings/>
      <con:config>
        <script>def SA2tokenId = context.expand( '${POST -ServiceAdmin2Token - LoginAsServiceAdmin2- xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get SA2tokenId: " + SA2tokenId

def SA2userId = context.expand( '${POST -ServiceAdmin2Token - LoginAsServiceAdmin2- xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@id}' )
log.info "get SA2userId: " + SA2userId

if (SA2tokenId == "" | SA2userId == "")
{
	assert false;	
}

testRunner.testCase.setPropertyValue("SA2tokenId", SA2tokenId)
testRunner.testCase.setPropertyValue("SA2userId", SA2userId)</script>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="POST -UserAdminId-CreateUserAdminAsServiceAdmin - xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="Add User w/ password" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="POST -UserAdminId-CreateUserAdminAsServiceAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" display-name="${#TestCase#userAdmin}" enabled="true" email="userAdmin@rack.com" username="${#TestCase#userAdmin}" OS-KSADM:password="${#TestCase#userAdminPw}"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 201</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path>
              <content>userAdmin</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="X-Auth-Token" value="${POST -ServiceAdminToken - LoginAsReenabledServiceAdmin- xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - listUserRoles - userAdmin  - xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - listUserRoles - userAdmin  - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:roles[1]/ns1:role/@name</path>
              <content>identity:user-admin</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match 1">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:roles[1]/ns1:role[1]/@id</path>
              <content>3</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
            <con:entry key="userId" value="${POST -UserAdminId-CreateUserAdminAsServiceAdmin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
            <con:entry key="X-Auth-Token" value="${POST -ServiceAdminToken - LoginAsReenabledServiceAdmin- xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="POST - UserAdminToken-LoginAsReenabledUserAdmin xml">
      <con:settings/>
      <con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="POST - UserAdminToken-LoginAsReenabledUserAdmin xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#userAdminPw}" username="${#TestCase#userAdmin}"/>
&lt;/auth></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name</path>
              <content>identity:user-admin</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="groovy" name="store UA">
      <con:settings/>
      <con:config>
        <script>def UAtokenId = context.expand( '${POST - UserAdminToken-LoginAsReenabledUserAdmin xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get UAtokenId: " + UAtokenId

def UAuserId = context.expand( '${POST - UserAdminToken-LoginAsReenabledUserAdmin xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@id}' )
log.info "get  UAuserId: " + UAuserId

if (UAtokenId == "" | UAuserId == "")
{
	assert false;
}

testRunner.testCase.setPropertyValue("UAtokenId" , UAtokenId)
testRunner.testCase.setPropertyValue("UAuserId" , UAuserId)</script>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="POST -UserAdminId2-CreateUserAdmin2AsServiceAdmin2 - xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="Add User w/ password" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="POST -UserAdminId2-CreateUserAdmin2AsServiceAdmin2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;user xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0" display-name="${#TestCase#userAdmin2}" enabled="true" email="userAdmin2@rack.com" username="${#TestCase#userAdmin2}" OS-KSADM:password="${#TestCase#userAdmin2Pw}"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 201</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path>
              <content>userAdmin2</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="X-Auth-Token" value="${POST -ServiceAdmin2Token - LoginAsServiceAdmin2- xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - listUserRoles - userAdmin2  - xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - listUserRoles - userAdmin2  - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:roles[1]/ns1:role/@name</path>
              <content>identity:user-admin</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match 1">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:roles[1]/ns1:role[1]/@id</path>
              <content>3</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
            <con:entry key="userId" value="${POST -UserAdminId-CreateUserAdminAsServiceAdmin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
            <con:entry key="X-Auth-Token" value="${POST -ServiceAdminToken - LoginAsReenabledServiceAdmin- xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="POST - UserAdmin2Token-LoginAsUserAdmin2 xml">
      <con:settings/>
      <con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="POST - UserAdmin2Token-LoginAsUserAdmin2 xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#userAdmin2Pw}" username="${#TestCase#userAdmin2}"/>
&lt;/auth></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role/@name</path>
              <content>identity:user-admin</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="groovy" name="store UA2">
      <con:settings/>
      <con:config>
        <script>def UA2tokenId = context.expand( '${POST - UserAdmin2Token-LoginAsUserAdmin2 xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get UA2tokenId: " + UA2tokenId

def UA2userId = context.expand( '${POST - UserAdmin2Token-LoginAsUserAdmin2 xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@id}' )
log.info "get UA2userId: " + UA2userId


if (UA2tokenId == "" | UA2userId == "")
{
	assert false;	
}

testRunner.testCase.setPropertyValue("UA2tokenId", UA2tokenId)
testRunner.testCase.setPropertyValue("UA2userId", UA2userId)</script>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="POST-DefaultUserId- CreateDefaultUserAsUserAdmin- xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="Add User w/ password" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="POST-DefaultUserId- CreateDefaultUserAsUserAdmin- xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;user display-name="${#TestCase#defaultUser}" enabled="true" email="defaultUser@rack.com" username="${#TestCase#defaultUser}" OS-KSADM:password="${#TestCase#defaultUserPw}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 201</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path>
              <content>defaultUser</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="X-Auth-Token" value="${POST - UserAdminToken-LoginAsReenabledUserAdmin xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - listDefaultUserRoles - defaultUser  - xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="List Global Roles for a User - listUserRoles" resourcePath="/${#Project#path}/users/{userId}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - listDefaultUserRoles - defaultUser  - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:roles[1]/ns7:role[1]/@name</path>
              <content>identity:default</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="serviceId" value="bde1268ebabeeabb70a0e702a4626977c331d5c4"/>
            <con:entry key="userId" value="${POST-DefaultUserId- CreateDefaultUserAsUserAdmin- xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#SAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="POST -DefaultUserToken-LoginAsReenabledDefaultUser - xml">
      <con:settings/>
      <con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="POST -DefaultUserToken-LoginAsReenabledDefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#defaultUserPw}" username="${#TestCase#defaultUser}"/>
&lt;/auth></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role/@name</path>
              <content>identity:default</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="groovy" name="store DU">
      <con:settings/>
      <con:config>
        <script>def DUtokenId = context.expand( '${POST -DefaultUserToken-LoginAsReenabledDefaultUser - xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "get DUtokenId: " + DUtokenId

def DUuserId = context.expand( '${POST -DefaultUserToken-LoginAsReenabledDefaultUser - xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@id}' )
log.info "get DUuserId: " + DUuserId

if (DUtokenId == "" | DUuserId == "")
{
	assert false;
}

testRunner.testCase.setPropertyValue("DUtokenId" , DUtokenId)
testRunner.testCase.setPropertyValue("DUuserId" , DUuserId)</script>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="POST-DefaultUserId2- CreateDefaultUser2AsUserAdmin2- xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="Add User w/ password" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="POST-DefaultUserId2- CreateDefaultUser2AsUserAdmin2- xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;user display-name="${#TestCase#defaultUser2}" enabled="true" email="defaultUser2@rack.com" username="${#TestCase#defaultUser2}" OS-KSADM:password="${#TestCase#defaultUser2Pw}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 201</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path>
              <content>defaultUser2</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <entry key="X-Auth-Token" value="${#TestCase#UA2tokenId}" xmlns="http://eviware.com/soapui/config"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="POST -DefaultUser2Token-LoginAsDefaultUser2 - xml">
      <con:settings/>
      <con:config service="identity-admin" methodName="Authenticate for Service API - authenticate" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="POST -DefaultUser2Token-LoginAsDefaultUser2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#defaultUser2Pw}" username="${#TestCase#defaultUser2}"/>
&lt;/auth></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role/@name</path>
              <content>identity:default</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match 1">
            <con:configuration>
              <path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role/@id</path>
              <content>2</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters/>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="groovy" name="store DU2">
      <con:settings/>
      <con:config>
        <script>def DU2tokenId = context.expand( '${POST -DefaultUser2Token-LoginAsDefaultUser2 - xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "DU2tokenId: " + DU2tokenId

def DU2userId = context.expand( '${POST -DefaultUser2Token-LoginAsDefaultUser2 - xml#Response#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@id}' )
log.info "DU2UserId: " + DU2userId


if (DU2tokenId == "" | DU2userId == "")
{
	assert false;	
}

testRunner.testCase.setPropertyValue("DU2tokenId", DU2tokenId)
testRunner.testCase.setPropertyValue("DU2userId", DU2userId)</script>
      </con:config>
    </con:testStep>
    <con:testStep type="groovy" name="AS SERVICE ADMIN">
      <con:settings/>
      <con:config>
        <script/>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - Update User Secret - AsServiceAdminToIdentityAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - Update User Secret - AsServiceAdminToIdentityAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains" disabled="true">
            <con:configuration>
              <token>answer="Yes"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains 1" disabled="true">
            <con:configuration>
              <token>question="Is this a test?"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#SAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - Update User Secret - AsServiceAdminToServiceAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - Update User Secret - AsServiceAdminToServiceAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains" disabled="true">
            <con:configuration>
              <token>answer="Yes"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains 1" disabled="true">
            <con:configuration>
              <token>question="Is this a test?"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#SAuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#SAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - Update User Secret - AsServiceAdminToServiceAdmin2 - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - Update User Secret - AsServiceAdminToServiceAdmin2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains" disabled="true">
            <con:configuration>
              <token>answer="Yes"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains 1" disabled="true">
            <con:configuration>
              <token>question="Is this a test?"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#SA2userId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#SAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - Update User Secret - AsServiceAdminToUserAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - Update User Secret - AsServiceAdminToUserAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains" disabled="true">
            <con:configuration>
              <token>answer="Yes"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains 1" disabled="true">
            <con:configuration>
              <token>question="Is this a test?"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#UAuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#SAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - Update User Secret - AsServiceAdminToDefaultUser - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - Update User Secret - AsServiceAdminToDefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains" disabled="true">
            <con:configuration>
              <token>answer="Yes"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains 1" disabled="true">
            <con:configuration>
              <token>question="Is this a test?"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#DUuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#SAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - Get User Secret - AsServiceAdminFromIdentityAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - Get User Secret - AsServiceAdminFromIdentityAdmin - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>answer="Yes"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains 1">
            <con:configuration>
              <token>question="Is this a test?"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns13='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns13:secretQA[1]/@question</path>
              <content>Is this a test?</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match 1">
            <con:configuration>
              <path>declare namespace ns13='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns13:secretQA[1]/@answer</path>
              <content>Yes</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#SAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - Get User Secret - AsServiceAdminFromServiceAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - Get User Secret - AsServiceAdminFromServiceAdmin - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>answer="Yes"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains 1">
            <con:configuration>
              <token>question="Is this a test?"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns13='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns13:secretQA[1]/@answer</path>
              <content>Yes</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match 1">
            <con:configuration>
              <path>declare namespace ns13='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns13:secretQA[1]/@question</path>
              <content>Is this a test?</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#SAuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#SAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - Get User Secret - AsServiceAdminFromServiceAdmin2 - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - Get User Secret - AsServiceAdminFromServiceAdmin2 - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>answer="Yes"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains 1">
            <con:configuration>
              <token>question="Is this a test?"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns13='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns13:secretQA[1]/@answer</path>
              <content>Yes</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match 1">
            <con:configuration>
              <path>declare namespace ns13='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns13:secretQA[1]/@question</path>
              <content>Is this a test?</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#SA2userId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#SAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - Get User Secret - AsServiceAdminFromUserAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - Get User Secret - AsServiceAdminFromUserAdmin - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>answer="Yes"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains 1">
            <con:configuration>
              <token>question="Is this a test?"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns13='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns13:secretQA[1]/@answer</path>
              <content>Yes</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match 1">
            <con:configuration>
              <path>declare namespace ns13='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns13:secretQA[1]/@question</path>
              <content>Is this a test?</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#UAuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#SAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - Get User Secret - AsServiceAdminFromDefaultUser - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - Get User Secret - AsServiceAdminFromDefaultUser - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 200</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>answer="Yes"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains 1">
            <con:configuration>
              <token>question="Is this a test?"</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match">
            <con:configuration>
              <path>declare namespace ns13='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns13:secretQA[1]/@answer</path>
              <content>Yes</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:assertion type="XPath Match" name="XPath Match 1">
            <con:configuration>
              <path>declare namespace ns13='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns13:secretQA[1]/@question</path>
              <content>Is this a test?</content>
              <allowWildcards>false</allowWildcards>
              <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#DUuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#SAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="groovy" name="AS USER ADMIN">
      <con:settings/>
      <con:config>
        <script/>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - Update User Secret - AsUserAdminToIdentityAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - Update User Secret - AsUserAdminToIdentityAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - Update User Secret - AsUserAdminToServiceAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - Update User Secret - AsUserAdminToServiceAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#SAuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - Update User Secret - AsUserAdminToUserAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - Update User Secret - AsUserAdminToUserAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#UAuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - Update User Secret - AsUserAdminToUserAdmin2 - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - Update User Secret - AsUserAdminToUserAdmin2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#UA2userId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - Update User Secret - AsUserAdminToDefaultUser - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - Update User Secret - AsUserAdminToDefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#DUuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - Get User Secret - AsUserAdminFromIdentityAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - Get User Secret - AsUserAdminFromIdentityAdmin - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - Get User Secret - AsUserAdminFromServiceAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - Get User Secret - AsUserAdminFromServiceAdmin - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#SAuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - Get User Secret - AsUserAdminFromUserAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - Get User Secret - AsUserAdminFromUserAdmin - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#UAuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - Get User Secret - AsUserAdminFromUserAdmin2 - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - Get User Secret - AsUserAdminFromUserAdmin2 - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#UA2userId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - Get User Secret - AsUserAdminFromDefaultUser - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - Get User Secret - AsUserAdminFromDefaultUser - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#DUuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#UAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="groovy" name="AS DEFAULT USER">
      <con:settings/>
      <con:config>
        <script/>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - Update User Secret - AsDefaultUserToIdentityAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - Update User Secret - AsDefaultUserToIdentityAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - Update User Secret - AsDefaultUserToServiceAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - Update User Secret - AsDefaultUserToServiceAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#SAuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - Update User Secret - AsDefaultUserToUserAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - Update User Secret - AsDefaultUserToUserAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#UAuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - Update User Secret - AsDefaultUserToDefaultUser - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - Update User Secret - AsDefaultUserToDefaultUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#DUuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="PUT - Update User Secret - AsDefaultUserToDefaultUser2 - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Update User SecretQA - updateUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="PUT - Update User Secret - AsDefaultUserToDefaultUser2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#DU2userId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - Get User Secret - AsDefaultUserFromIdentityAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - Get User Secret - AsDefaultUserFromIdentityAdmin - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestSuite#userId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - Get User Secret - AsDefaultUserFromServiceAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - Get User Secret - AsDefaultUserFromServiceAdmin - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#SAuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - Get User Secret - AsDefaultUserFromUserAdmin - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - Get User Secret - AsDefaultUserFromUserAdmin - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#UAuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - Get User Secret - AsDefaultUserFromDefaultUser - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - Get User Secret - AsDefaultUserFromDefaultUser - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#DUuserId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="GET - Get User Secret - AsDefaultUserFromDefaultUser2 - xml">
      <con:settings/>
      <con:config service="RAX-KSQA-admin" methodName="Get User SecretQA - getUserSecretQA" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="GET - Get User Secret - AsDefaultUserFromDefaultUser2 - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 403</scriptText>
            </con:configuration>
          </con:assertion>
          <con:assertion type="Simple Contains" name="Contains">
            <con:configuration>
              <token>Not authorized.</token>
              <ignoreCase>false</ignoreCase>
              <useRegEx>false</useRegEx>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#DU2userId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="DELETE -AsUserAdmin2DeleteDefaultUser2- xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="DELETE -AsUserAdmin2DeleteDefaultUser2- xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 204</scriptText>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#DU2userId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#UA2tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="HARD Delete - user - defaultUser2 - xml">
      <con:settings/>
      <con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="HARD Delete - user - defaultUser2 - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 204</scriptText>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="user_id" value="${#TestCase#DU2userId}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="DELETE -AsUserAdminDeleteDefaultUser- xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="DELETE -AsUserAdminDeleteDefaultUser- xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 204</scriptText>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${POST-DefaultUserId- CreateDefaultUserAsUserAdmin- xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
            <con:entry key="X-Auth-Token" value="${POST - UserAdminToken-LoginAsReenabledUserAdmin xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="HARD Delete - user - defaultUser - xml">
      <con:settings/>
      <con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="HARD Delete - user - defaultUser - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 204</scriptText>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="user_id" value="${POST-DefaultUserId- CreateDefaultUserAsUserAdmin- xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="DELETE -AsServiceAdminDelete UserAdmin - xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="DELETE -AsServiceAdminDelete UserAdmin - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 204</scriptText>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${POST -UserAdminId-CreateUserAdminAsServiceAdmin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
            <con:entry key="X-Auth-Token" value="${POST -ServiceAdminToken - LoginAsReenabledServiceAdmin- xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="HARD Delete - user - userAdmin - xml">
      <con:settings/>
      <con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="HARD Delete - user - userAdmin - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 204</scriptText>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="user_id" value="${POST -UserAdminId-CreateUserAdminAsServiceAdmin - xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="DELETE -AsServiceAdminDelete UserAdmin2 - xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="DELETE -AsServiceAdminDelete UserAdmin2 - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 204</scriptText>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${#TestCase#UA2userId}"/>
            <con:entry key="X-Auth-Token" value="${#TestCase#SAtokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="HARD Delete - user - userAdmin2 - xml">
      <con:settings/>
      <con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="HARD Delete - user - userAdmin2 - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 204</scriptText>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="user_id" value="${#TestCase#UA2userId}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="DELETE - AsAdminDeleteServiceAdmin2- xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="DELETE - AsAdminDeleteServiceAdmin2- xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 204</scriptText>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${POST -ServiceAdminUserId2-CreateServiceAdmin2AsAdminUser- xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="HARD Delete  serviceAdmin2 - xml">
      <con:settings/>
      <con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="HARD Delete  serviceAdmin2 - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 204</scriptText>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="user_id" value="${POST -ServiceAdminUserId2-CreateServiceAdmin2AsAdminUser- xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="DELETE - AsAdminDeleteServiceAdmin- xml">
      <con:settings/>
      <con:config service="OS-KSADM-admin" methodName="Delete user - deleteUser" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="DELETE - AsAdminDeleteServiceAdmin- xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 204</scriptText>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="userId" value="${POST -ServiceAdminUserId-CreateServiceAdminAsAdminUser- xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:testStep type="restrequest" name="HARD Delete  serviceAdmin - xml">
      <con:settings/>
      <con:config service="GA-softDeleted" methodName="Delete from soft delete - softDeleted" resourcePath="/${#Project#path}/softDeleted/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <con:restRequest name="HARD Delete  serviceAdmin - xml" mediaType="application/xml" accept="application/xml">
          <con:settings>
            <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
          </con:settings>
          <con:encoding>UTF-8</con:encoding>
          <con:endpoint>${#Project#Endpoint}</con:endpoint>
          <con:request/>
          <con:assertion type="GroovyScriptAssertion" name="Script Assertion">
            <con:configuration>
              <scriptText>assert messageExchange.responseStatusCode == 204</scriptText>
            </con:configuration>
          </con:assertion>
          <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
          <con:jmsPropertyConfig/>
          <con:parameters>
            <con:entry key="user_id" value="${POST -ServiceAdminUserId-CreateServiceAdminAsAdminUser- xml#Response#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:user[1]/@id}"/>
            <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
          </con:parameters>
        </con:restRequest>
      </con:config>
    </con:testStep>
    <con:properties>
      <con:property>
        <con:name>serviceAdmin</con:name>
        <con:value>serviceAdmin</con:value>
      </con:property>
      <con:property>
        <con:name>serviceAdminPw</con:name>
        <con:value>Password1</con:value>
      </con:property>
      <con:property>
        <con:name>serviceAdmin2</con:name>
        <con:value>serviceAdmin2</con:value>
      </con:property>
      <con:property>
        <con:name>serviceAdmin2Pw</con:name>
        <con:value>Password1</con:value>
      </con:property>
      <con:property>
        <con:name>userAdmin</con:name>
        <con:value>userAdmin</con:value>
      </con:property>
      <con:property>
        <con:name>userAdminPw</con:name>
        <con:value>Password1</con:value>
      </con:property>
      <con:property>
        <con:name>userAdmin2</con:name>
        <con:value>userAdmin2</con:value>
      </con:property>
      <con:property>
        <con:name>userAdmin2Pw</con:name>
        <con:value>Password1</con:value>
      </con:property>
      <con:property>
        <con:name>defaultUser</con:name>
        <con:value>defaultUser</con:value>
      </con:property>
      <con:property>
        <con:name>defaultUserPw</con:name>
        <con:value>Password1</con:value>
      </con:property>
      <con:property>
        <con:name>defaultUser2</con:name>
        <con:value>defaultUser2</con:value>
      </con:property>
      <con:property>
        <con:name>defaultUser2Pw</con:name>
        <con:value>Password1</con:value>
      </con:property>
      <con:property>
        <con:name>SAtokenId</con:name>
        <con:value>8cd7d4c7a3b94015abbabb1f8d89f4a3</con:value>
      </con:property>
      <con:property>
        <con:name>SAuserId</con:name>
        <con:value>10015693</con:value>
      </con:property>
      <con:property>
        <con:name>SA2tokenId</con:name>
        <con:value>ef209796f1f248969db9969164d0e24d</con:value>
      </con:property>
      <con:property>
        <con:name>SA2userId</con:name>
        <con:value>10015694</con:value>
      </con:property>
      <con:property>
        <con:name>UAtokenId</con:name>
        <con:value>4e3e6e98ec8940418c4a63fa03d7079d</con:value>
      </con:property>
      <con:property>
        <con:name>UAuserId</con:name>
        <con:value>10015695</con:value>
      </con:property>
      <con:property>
        <con:name>UA2tokenId</con:name>
        <con:value>35a4d22719004ad8b8b3c82865eb935e</con:value>
      </con:property>
      <con:property>
        <con:name>UA2userId</con:name>
        <con:value>10015696</con:value>
      </con:property>
      <con:property>
        <con:name>DUtokenId</con:name>
        <con:value>eb3d8c6b12c246d9a468965081ce813e</con:value>
      </con:property>
      <con:property>
        <con:name>DUuserId</con:name>
        <con:value>10015697</con:value>
      </con:property>
      <con:property>
        <con:name>DU2tokenId</con:name>
        <con:value>ebd877eb69d144539d76cce0a65d0ec2</con:value>
      </con:property>
      <con:property>
        <con:name>DU2userId</con:name>
        <con:value>10015698</con:value>
      </con:property>
    </con:properties>
    <con:reportParameters/>
  </con:testCase>
  <con:properties>
    <con:property>
      <con:name>username</con:name>
      <con:value>auth</con:value>
    </con:property>
    <con:property>
      <con:name>password</con:name>
      <con:value>Auth1234</con:value>
    </con:property>
    <con:property>
      <con:name>tokenId</con:name>
      <con:value>c9951641-ab27-45fc-9584-bd8b184e835a</con:value>
    </con:property>
    <con:property>
      <con:name>userId</con:name>
      <con:value>173189</con:value>
    </con:property>
    <con:property>
      <con:name>username2</con:name>
      <con:value>jmunoz</con:value>
    </con:property>
    <con:property>
      <con:name>password2</con:name>
      <con:value>Password1</con:value>
    </con:property>
    <con:property>
      <con:name>tokenId2</con:name>
      <con:value>de831b2044864272992427d736d5f6a4</con:value>
    </con:property>
    <con:property>
      <con:name>userId2</con:name>
      <con:value>3</con:value>
    </con:property>
  </con:properties>
  <con:reportParameters/>
</con:testSuite>]]></con:content><con:type>http://eviware.com/soapui/config</con:type></con:part></con:definitionCache><con:endpoints/><con:resource name="v2.0" path="${#Project#path2}"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:style>HEADER</con:style></con:parameter></con:parameters><con:resource name="userId" path="users/{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value/><con:style>TEMPLATE</con:style></con:parameter></con:parameters><con:resource name="RAX-KSQA" path="RAX-KSQA"><con:settings/><con:parameters/><con:resource name="secretqa" path="secretqa"><con:settings/><con:parameters/><con:method name="get secretQA" method="GET"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:style>HEADER</con:style></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="update secretQA" method="PUT"><con:settings/><con:parameters><con:parameter><con:name>X-Auth-Token</con:name><con:style>HEADER</con:style></con:parameter></con:parameters><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="FoundationAPI" type="rest" basePath="" definitionUrl="C:\Users\mant0623\Desktop\Foundation-04-11-soapui-project_1.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="file:/C:/Users/mant0623/Desktop/Foundation-04-11-soapui-project_1.wadl"><con:part><con:url>file:/C:/Users/mant0623/Desktop/Foundation-04-11-soapui-project_1.wadl</con:url><con:content><![CDATA[<!--*******************************************************-->
<!--Import Common XML Entities-->
<!---->
<!--You can resolve the entites with xmllint-->
<!---->
<!--xmllint -noent identity-admin.wadl-->
<!--*******************************************************-->
<application xmlns="http://wadl.dev.java.net/2009/02" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:sp="http://service-registry.api.rackspace.com/service-profile" xmlns:idm="http://idm.api.rackspace.com/v1.0" xmlns:fault="http://fault.common.api.rackspace.com/v1.0" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsdxt="http://docs.rackspacecloud.com/xsd-ext/v1.0">
  <wadl:grammars xmlns:wadl="http://wadl.dev.java.net/2009/02"/>
  <!--*******************************************************-->
  <!--All Resources-->
  <!--*******************************************************-->
  <resources base="http://localhost:9998">
    <resource id="serviceProfile" path="/">
      <method name="GET" rax:id="getServiceProfile" xmlns:rax="http://docs.rackspace.com/api">
        <doc xml:lang="EN" title="Version Details">
          <p xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about this service</p>
        </doc>
        <response status="200 203">
          <representation mediaType="application/json"/>
          <representation mediaType="application/xml" element="sp:service-profile"/>
        </response>
      </method>
      <resource id="version" path="v1">
        <method name="GET" rax:id="getVersionInfo" xmlns:rax="http://docs.rackspace.com/api">
          <doc xml:lang="EN" title="Version Details">
            <p xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about this version of the api</p>
          </doc>
          <response status="200 203">
            <representation mediaType="application/json"/>
            <representation mediaType="application/xml" element="sp:contract"/>
          </response>
        </method>
        <resource id="tokens" path="tokens">
          <method name="POST" rax:id="authenticate" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Authenticate">
              <xhtml:p class="shortdesc">Authenticate a client and generate an access token.</xhtml:p>
              <xhtml:p>There are various ways to authenticate in the global auth system. You can authenticate as a Racker, an application on behalf of a 
                customer, or an application directly. Examples below show the different authentication mechanisms.</xhtml:p>
            </doc>
            <request>
              <representation mediaType="application/xml" element="idm:authCredentials">
                <doc xml:lang="EN" title="Auth as Application Request: XML">
                  <xsdxt:code href="../formattedsamples/application_auth_credentials.xml"/>
                </doc>
                <doc xml:lang="EN" title="Auth as Customer Request: XML">
                  <xsdxt:code href="../formattedsamples/auth_credentials.xml"/>
                </doc>
                <doc xml:lang="EN" title="Auth as Racker Request: XML">
                  <xsdxt:code href="../formattedsamples/racker_auth_credentials.xml"/>
                </doc>
                <doc xml:lang="EN" title="Auth as Racker with RSA Token Request: XML">
                  <xsdxt:code href="../formattedsamples/racker_rsa_credentials.xml"/>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN" title="Auth as Application Request: JSON">
                  <xsdxt:code href="../formattedsamples/application_auth_credentials.json"/>
                </doc>
                <doc xml:lang="EN" title="Auth as Customer Request: JSON">
                  <xsdxt:code href="../formattedsamples/auth_credentials.json"/>
                </doc>
                <doc xml:lang="EN" title="Auth as Racker Request: JSON">
                  <xsdxt:code href="../formattedsamples/racker_auth_credentials.json"/>
                </doc>
                <doc xml:lang="EN" title="Auth as Racker with RSA Token Request: JSON">
                  <xsdxt:code href="../formattedsamples/racker_rsa_credentials.json"/>
                </doc>
              </representation>
            </request>
            <response status="200 203">
              <representation mediaType="application/xml" element="idm:auth">
                <doc xml:lang="EN" title="Auth as Application Response: XML">
                  <xsdxt:code href="../formattedsamples/application_auth.xml"/>
                </doc>
                <doc xml:lang="EN" title="Auth as Customer Response: XML">
                  <xsdxt:code href="../formattedsamples/auth.xml"/>
                </doc>
                <doc xml:lang="EN" title="Auth as Racker Response: XML">
                  <xsdxt:code href="../formattedsamples/racker_auth.xml"/>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN" title="Auth as Application Response: JSON">
                  <xsdxt:code href="../formattedsamples/application_auth.json"/>
                </doc>
                <doc xml:lang="EN" title="Auth as Customer Response: JSON">
                  <xsdxt:code href="../formattedsamples/auth.json"/>
                </doc>
                <doc xml:lang="EN" title="Auth as Racker Response: JSON">
                  <xsdxt:code href="../formattedsamples/racker_auth.json"/>
                </doc>
              </representation>
            </response>
            <response status="403 ">
              <representation mediaType="application/xml" element="idm:userDisabled"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="500">
              <representation mediaType="application/xml" element="fault:serviceFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="fault:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="fault:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="fault:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="fault:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <resource id="token" path="{tokenId}">
            <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
              <doc>You need a valid token for access.</doc>
            </param>
            <param name="tokenId" style="template" type="xsd:string" required="true"/>
            <method name="GET" rax:id="validateToken" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Validate Token">
                <xhtml:p class="shortdesc">Check that a token is valid and return the token details.</xhtml:p>
              </doc>
              <response status="200 203">
                <representation mediaType="application/xml" element="idm:auth">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/validatetoken.xml"/>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/validatetoken.json"/>
                  </doc>
                </representation>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="idm:userDisabled"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="fault:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <method name="DELETE" rax:id="revokeToken" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Revoke Token">
                <xhtml:p class="shortdesc">Revoke Token.</xhtml:p>
              </doc>
              <response status="204"/>
              <response status="403">
                <representation mediaType="application/xml" element="idm:userDisabled"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="fault:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <resource id="tokenApplication" path="applications/{applicationId}">
              <param name="applicationId" style="template" type="xsd:string" required="true"/>
              <method name="GET" rax:id="verifyTokenApplication" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Check if Token has access to an Application">
                  <xhtml:p class="shortdesc">Check if token has access to an application.</xhtml:p>
                </doc>
                <response status="204 404"/>
                <response status="500">
                  <representation mediaType="application/xml" element="fault:serviceFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="fault:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="fault:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="fault:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="fault:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <resource id="tokenApplicationRole" path="roles/{roleId}">
                <param name="roleId" style="template" type="xsd:string" required="true"/>
                <method name="GET" rax:id="verifyTokenApplicationRole" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Check if Token has Role on an Application">
                    <xhtml:p class="shortdesc">Check if token has role on an application.</xhtml:p>
                  </doc>
                  <response status="204 404"/>
                  <response status="500">
                    <representation mediaType="application/xml" element="fault:serviceFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="fault:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="fault:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="fault:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="fault:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
              </resource>
            </resource>
          </resource>
        </resource>
        <!--users resource-->
        <resource id="users" path="users">
          <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
            <doc>You need a valid token for access.</doc>
          </param>
          <method name="GET" rax:id="getUsers" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Get Users">
              <xhtml:p class="shortdesc">Gets a list of users.</xhtml:p>
            </doc>
            <request>
              <param name="username" style="query" type="xsd:string">
                <doc>Allows you search for a user by username</doc>
              </param>
              <param name="offset" style="query" type="xsd:int">
                <doc>0 based index to start list</doc>
              </param>
              <param name="limit" style="query" type="xsd:int">
                <doc>Number of records to be returned</doc>
              </param>
            </request>
            <response status="200">
              <representation mediaType="application/xml" element="idm:users">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/users.xml"/>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/users.json"/>
                </doc>
              </representation>
            </response>
            <response status="500">
              <representation mediaType="application/xml" element="fault:serviceFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="fault:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="fault:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="fault:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="fault:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <method name="POST" rax:id="addUser" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Add a User">
              <xhtml:p class="shortdesc">Adds a new user.</xhtml:p>
              <xhtml:p>The Username attribute is required in this request.If a blank password is passed in the Password element, 
                the API will generate a random password for the user. The prefLanguage attribute defaults 
                to "US_en" and the timeZone attribute defaults to "America/Chicago".</xhtml:p>
            </doc>
            <request>
              <representation mediaType="application/xml" element="idm:user">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/adduser.xml"/>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/adduser.xml"/>
                </doc>
              </representation>
            </request>
            <response status="200">
              <param name="Location" style="header" type="xsd:string" required="true">
                <doc>Location to the uri of the newly created resource</doc>
              </param>
              <representation mediaType="application/xml" element="idm:user">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/addeduser.xml"/>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/addeduser.json"/>
                </doc>
              </representation>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="idm:passwordValidationFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="409">
              <representation mediaType="application/xml" element="idm:usernameConflict"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="500">
              <representation mediaType="application/xml" element="fault:serviceFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="fault:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="fault:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="fault:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <resource id="user" path="{userId}">
            <param name="userId" style="template" type="xsd:string" required="true"/>
            <method name="GET" rax:id="getUser" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Get a User">
                <xhtml:p class="shortdesc">Get a user.</xhtml:p>
              </doc>
              <response status="200">
                <representation mediaType="application/xml" element="idm:user">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/getuser.xml"/>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/getuser.json"/>
                  </doc>
                </representation>
              </response>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="fault:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <method name="PUT" rax:id="updateUser" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Update a User">
                <xhtml:p class="shortdesc">Update a user.</xhtml:p>
              </doc>
              <request>
                <representation mediaType="application/xml" element="idm:user">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/updateuser.xml"/>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/updateuser.json"/>
                  </doc>
                </representation>
              </request>
              <response status="200">
                <representation mediaType="application/xml" element="idm:user">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/updateduser.xml"/>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/updateduser.json"/>
                  </doc>
                </representation>
              </response>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="fault:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <method name="DELETE" rax:id="deleteUser" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Delete a User">
                <xhtml:p class="shortdesc">Delete a user.</xhtml:p>
              </doc>
              <response status="204"/>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="fault:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <resource id="userSecret" path="secret">
              <method name="GET" rax:id="getUserSecret" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Get User Secret Q/A">
                  <xhtml:p class="shortdesc">Get a user's secret question and answer.</xhtml:p>
                </doc>
                <response status="200">
                  <representation mediaType="application/xml" element="idm:userSecret">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/user_secret.xml"/>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/user_secret.json"/>
                    </doc>
                  </representation>
                </response>
                <response status="500">
                  <representation mediaType="application/xml" element="fault:serviceFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="fault:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="fault:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="fault:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="fault:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <method name="PUT" rax:id="setUserSecret" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Set User Secret Q/A">
                  <xhtml:p class="shortdesc">Sets a user's secret question and answer.</xhtml:p>
                </doc>
                <request>
                  <representation mediaType="application/xml" element="idm:userSecret">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/user_secret.xml"/>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/user_secret.json"/>
                    </doc>
                  </representation>
                </request>
                <response status="204"/>
                <response status="500">
                  <representation mediaType="application/xml" element="fault:serviceFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="fault:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="fault:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="fault:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="fault:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
            </resource>
            <resource id="userPasswordCredentials" path="passwordcredentials">
              <method name="GET" rax:id="getUserPasswordCredentials" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Get User's Password">
                  <xhtml:p class="shortdesc">Get a user's password credentials.</xhtml:p>
                </doc>
                <response status="200">
                  <representation mediaType="application/xml" element="idm:passwordCredentials">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/user_credentials.xml"/>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/user_credentials.json"/>
                    </doc>
                  </representation>
                </response>
                <response status="500">
                  <representation mediaType="application/xml" element="fault:serviceFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="fault:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="fault:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="fault:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="fault:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <method name="PUT" rax:id="setUserPasswordCredentials" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Set User's Password">
                  <xhtml:p class="shortdesc">Sets a user's password credentials.</xhtml:p>
                </doc>
                <request>
                  <representation mediaType="application/xml" element="idm:passwordCredentials">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/set_user_credentials.xml"/>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/set_user_credentials.json"/>
                    </doc>
                  </representation>
                </request>
                <response status="204"/>
                <response status="500">
                  <representation mediaType="application/xml" element="fault:serviceFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="fault:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="fault:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="fault:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="fault:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <method name="POST" rax:id="resetUserPasswordCredentials" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Reset User's Password">
                  <xhtml:p class="shortdesc">Reset a user's password credentials.</xhtml:p>
                </doc>
                <response status="200">
                  <representation mediaType="application/xml" element="idm:passwordCredentials">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/user_credentials.xml"/>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/user_credentials.json"/>
                    </doc>
                  </representation>
                </response>
                <response status="500">
                  <representation mediaType="application/xml" element="fault:serviceFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="fault:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="fault:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="fault:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="fault:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <resource id="userPasswordRecoveryToken" path="recoverytoken">
                <method name="GET" rax:id="getPasswordRecoveryToken" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Get Password Recovery Token">
                    <xhtml:p class="shortdesc">Get a token that can be used to reset a user's password credentials.</xhtml:p>
                  </doc>
                  <response status="200">
                    <representation mediaType="application/xml" element="idm:token">
                      <doc xml:lang="EN">
                        <xsdxt:code href="../formattedsamples/token.xml"/>
                      </doc>
                    </representation>
                    <representation mediaType="application/json">
                      <doc xml:lang="EN">
                        <xsdxt:code href="../formattedsamples/token.json"/>
                      </doc>
                    </representation>
                  </response>
                  <response status="500">
                    <representation mediaType="application/xml" element="fault:serviceFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="fault:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="fault:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="fault:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="fault:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
              </resource>
            </resource>
            <resource id="userApplications" path="applications">
              <method name="GET" rax:id="getUserApplications" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Get the Applications that a User has Provisioned">
                  <xhtml:p class="shortdesc">Get the applications that have been provisioned for a user.</xhtml:p>
                </doc>
                <response status="200">
                  <representation mediaType="application/xml" element="idm:applications">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/applications.xml"/>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/applications.json"/>
                    </doc>
                  </representation>
                </response>
                <response status="500">
                  <representation mediaType="application/xml" element="fault:serviceFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="fault:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="fault:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="fault:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="fault:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <resource id="userApplication" path="{applicationId}">
                <param name="applicationId" style="template" type="xsd:string" required="true"/>
                <method name="PUT" rax:id="addUserApplication" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Provision an Application for a User">
                    <xhtml:p class="shortdesc">Provision an application for a user.</xhtml:p>
                  </doc>
                  <response status="204"/>
                  <response status="500">
                    <representation mediaType="application/xml" element="fault:serviceFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="fault:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="fault:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="fault:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="fault:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
                <method name="DELETE" rax:id="deleteUserApplication" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Remove Provisioned Application from a User">
                    <xhtml:p class="shortdesc">Removed a provisioned application from a user.</xhtml:p>
                  </doc>
                  <response status="204"/>
                  <response status="500">
                    <representation mediaType="application/xml" element="fault:serviceFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="fault:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="fault:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="fault:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
              </resource>
            </resource>
            <resource id="userRoles" path="roles">
              <method name="GET" rax:id="getUserGlobalRoles" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Get User Global Roles">
                  <xhtml:p class="shortdesc">Get a list of user's global roles.</xhtml:p>
                </doc>
                <request>
                  <param name="applicationId" style="query" type="xsd:string" required="false">
                    <doc>Filter list of user roles by applicationId</doc>
                  </param>
                </request>
                <response status="200">
                  <representation mediaType="application/xml" element="idm:roles">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/roles.xml"/>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/roles.json"/>
                    </doc>
                  </representation>
                </response>
                <response status="500">
                  <representation mediaType="application/xml" element="fault:serviceFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="fault:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="fault:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="fault:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="fault:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <resource id="userRole" path="{roleId}">
                <param name="roleId" style="template" type="xsd:string" required="true"/>
                <method name="PUT" rax:id="addUserGlobalRole" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Grant User a Global Role">
                    <xhtml:p class="shortdesc">Grant user a global role.</xhtml:p>
                    <xhtml:p>A global role is one that is not restricted just to a tenant. A global role could be application specific.
                A user could have the global admin role for the nova application, or a global admin role for all applications.</xhtml:p>
                  </doc>
                  <response status="204"/>
                  <response status="500">
                    <representation mediaType="application/xml" element="fault:serviceFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="fault:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="fault:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="fault:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
                <method name="DELETE" rax:id="deleteUserGlobalRole" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Remove User's Global Role">
                    <xhtml:p class="shortdesc">Remove global role from user.</xhtml:p>
                  </doc>
                  <response status="204"/>
                  <response status="500">
                    <representation mediaType="application/xml" element="fault:serviceFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="fault:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="fault:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="fault:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
                <resource id="userTenantRole" path="tenants/{tenantId}">
                  <param name="tenantId" style="template" type="xsd:string" required="true"/>
                  <param name="roleId" style="template" type="xsd:string" required="true"/>
                  <method name="PUT" rax:id="addUserTenantRole" xmlns:rax="http://docs.rackspace.com/api">
                    <doc xml:lang="EN" title="Grant User Role on Tenant">
                      <xhtml:p class="shortdesc">Grant user a role on the tenant</xhtml:p>
                    </doc>
                    <response status="204"/>
                    <response status="500">
                      <representation mediaType="application/xml" element="fault:serviceFault"/>
                      <representation mediaType="application/json"/>
                    </response>
                    <response status="400">
                      <representation mediaType="application/xml" element="fault:badRequest"/>
                      <representation mediaType="application/json"/>
                    </response>
                    <response status="401">
                      <representation mediaType="application/xml" element="fault:unauthorized"/>
                      <representation mediaType="application/json"/>
                    </response>
                    <response status="403">
                      <representation mediaType="application/xml" element="fault:forbidden"/>
                      <representation mediaType="application/json"/>
                    </response>
                    <response status="503">
                      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                      <representation mediaType="application/json"/>
                    </response>
                  </method>
                  <method name="DELETE" rax:id="deleteUserTenantRole" xmlns:rax="http://docs.rackspace.com/api">
                    <doc xml:lang="EN" title="Remove User's Tenant Role">
                      <xhtml:p class="shortdesc">Remove User's Tenant Role.</xhtml:p>
                    </doc>
                    <response status="204"/>
                    <response status="500">
                      <representation mediaType="application/xml" element="fault:serviceFault"/>
                      <representation mediaType="application/json"/>
                    </response>
                    <response status="400">
                      <representation mediaType="application/xml" element="fault:badRequest"/>
                      <representation mediaType="application/json"/>
                    </response>
                    <response status="401">
                      <representation mediaType="application/xml" element="fault:unauthorized"/>
                      <representation mediaType="application/json"/>
                    </response>
                    <response status="403">
                      <representation mediaType="application/xml" element="fault:forbidden"/>
                      <representation mediaType="application/json"/>
                    </response>
                    <response status="503">
                      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                      <representation mediaType="application/json"/>
                    </response>
                  </method>
                </resource>
              </resource>
            </resource>
            <resource id="userTenants" path="tenants">
              <resource id="userTenantsRoles" path="roles">
                <method name="GET" rax:id="getUserTenantsRoles" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Get User Tenants Roles">
                    <xhtml:p class="shortdesc">Get a list of user's roles on all tenants.</xhtml:p>
                  </doc>
                  <request>
                    <param name="applicationId" style="query" type="xsd:string" required="false">
                      <doc>Filter list of user tenant roles by applicationId</doc>
                    </param>
                    <param name="tenantId" style="query" type="xsd:string" required="false">
                      <doc>Filter list of user tenant roles by tenantId</doc>
                    </param>
                  </request>
                  <response status="200">
                    <representation mediaType="application/xml" element="idm:roles">
                      <doc xml:lang="EN">
                        <xsdxt:code href="../formattedsamples/tenantroles.xml"/>
                      </doc>
                    </representation>
                    <representation mediaType="application/json">
                      <doc xml:lang="EN">
                        <xsdxt:code href="../formattedsamples/tenantroles.json"/>
                      </doc>
                    </representation>
                  </response>
                  <response status="500">
                    <representation mediaType="application/xml" element="fault:serviceFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="fault:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="fault:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="fault:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="fault:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
              </resource>
            </resource>
          </resource>
        </resource>
        <!--applications resource-->
        <resource id="applications" path="applications">
          <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
            <doc>You need a valid token for access.</doc>
          </param>
          <method name="GET" rax:id="getApplications" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Get Applications">
              <xhtml:p class="shortdesc">Gets a list of applications.</xhtml:p>
            </doc>
            <request>
              <param name="name" style="query" type="xsd:string">
                <doc>Allows you search for an application by name</doc>
              </param>
              <param name="offset" style="query" type="xsd:int">
                <doc>0 based index to start list</doc>
              </param>
              <param name="limit" style="query" type="xsd:int">
                <doc>Number of records to be returned</doc>
              </param>
            </request>
            <response status="200">
              <representation mediaType="application/xml" element="idm:applications">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/applications.xml"/>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/applications.json"/>
                </doc>
              </representation>
            </response>
            <response status="500">
              <representation mediaType="application/xml" element="fault:serviceFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="fault:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="fault:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="fault:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="fault:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <method name="POST" rax:id="addApplication" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Add an Application">
              <xhtml:p class="shortdesc">Add an application.</xhtml:p>
            </doc>
            <request>
              <representation mediaType="application/xml" element="idm:application">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/addapplication.xml"/>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/addapplication.json"/>
                </doc>
              </representation>
            </request>
            <response status="200">
              <param name="Location" style="header" type="xsd:string" required="true">
                <doc>Location to the uri of the newly created resource</doc>
              </param>
              <representation mediaType="application/xml" element="idm:application">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/addedapplication.xml"/>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/addedapplication.json"/>
                </doc>
              </representation>
            </response>
            <response status="409">
              <representation mediaType="application/xml" element="idm:applicationNameConflict"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="500">
              <representation mediaType="application/xml" element="fault:serviceFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="fault:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="fault:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="fault:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <resource id="application" path="{applicationId}">
            <param name="applicationId" style="template" type="xsd:string" required="true"/>
            <method name="GET" rax:id="getApplication" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Get an Application">
                <xhtml:p class="shortdesc">Get an application.</xhtml:p>
              </doc>
              <response status="200">
                <representation mediaType="application/xml" element="idm:application">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/application.xml"/>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/application.json"/>
                  </doc>
                </representation>
              </response>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="fault:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <method name="PUT" rax:id="updateApplication" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Update an Application">
                <xhtml:p class="shortdesc">Update an application.</xhtml:p>
              </doc>
              <request>
                <representation mediaType="application/xml" element="idm:application">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/updateapplication.xml"/>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/updateapplication.json"/>
                  </doc>
                </representation>
              </request>
              <response status="200">
                <representation mediaType="application/xml" element="idm:application">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/updatedapplication.xml"/>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/updatedapplication.json"/>
                  </doc>
                </representation>
              </response>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="fault:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <method name="DELETE" rax:id="deleteApplication" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Delete an Application">
                <xhtml:p class="shortdesc">Delete as application.</xhtml:p>
              </doc>
              <response status="204"/>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="fault:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <resource id="applicationSecretCredentials" path="secretcredentials">
              <method name="POST" rax:id="resetApplicationSecretCredentials" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Reset Application's Secret">
                  <xhtml:p class="shortdesc">Reset application secret.</xhtml:p>
                </doc>
                <response status="200">
                  <representation mediaType="application/xml" element="idm:secretCredentials">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/application_credentials.xml"/>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/application_credentials.json"/>
                    </doc>
                  </representation>
                </response>
                <response status="500">
                  <representation mediaType="application/xml" element="fault:serviceFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="fault:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="fault:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="fault:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="fault:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
            </resource>
            <resource id="applicationApplications" path="applications">
              <method name="GET" rax:id="getApplicationApplications" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Get the Applications that an Application has Provisioned">
                  <xhtml:p class="shortdesc">Get all applications that have been provisioned for this application..</xhtml:p>
                </doc>
                <response status="200">
                  <representation mediaType="application/xml" element="idm:applications">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/applications.xml"/>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/applications.json"/>
                    </doc>
                  </representation>
                </response>
                <response status="500">
                  <representation mediaType="application/xml" element="fault:serviceFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="fault:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="fault:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="fault:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="fault:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <resource id="applicationApplication" path="{provisionedApplicationId}">
                <param name="provisionedApplicationId" style="template" type="xsd:string" required="true"/>
                <method name="PUT" rax:id="addApplicationApplication" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Provision an Application for an Application">
                    <xhtml:p class="shortdesc">Provision an application for this application.</xhtml:p>
                  </doc>
                  <response status="204"/>
                  <response status="500">
                    <representation mediaType="application/xml" element="fault:serviceFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="fault:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="fault:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="fault:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="fault:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
                <method name="DELETE" rax:id="deleteApplicationApplication" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Remove Provisioned Application from an Application">
                    <xhtml:p class="shortdesc">Removes a provisioned application from this application.</xhtml:p>
                  </doc>
                  <response status="204"/>
                  <response status="500">
                    <representation mediaType="application/xml" element="fault:serviceFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="fault:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="fault:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="fault:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="fault:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
                <resource id="applicationApplicationRole" path="roles/{roleId}">
                  <param name="roleId" style="template" type="xsd:string" required="true"/>
                </resource>
              </resource>
            </resource>
            <resource id="applicationRoles" path="roles">
              <method name="GET" rax:id="getApplicationGlobalRoles" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Get Application Global Roles">
                  <xhtml:p class="shortdesc">Get a list of aplications's global roles.</xhtml:p>
                </doc>
                <request>
                  <param name="roleApplicationId" style="query" type="xsd:string" required="false">
                    <doc>Allows you filter application specific roles</doc>
                  </param>
                </request>
                <response status="200">
                  <representation mediaType="application/xml" element="idm:roles">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/roles.xml"/>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/roles.json"/>
                    </doc>
                  </representation>
                </response>
                <response status="500">
                  <representation mediaType="application/xml" element="fault:serviceFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="fault:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="fault:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="fault:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="fault:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <resource id="applicationRole" path="{roleId}">
                <param name="roleId" style="template" type="xsd:string" required="true"/>
                <method name="PUT" rax:id="addApplicationGlobalRole" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Grant Application a Global Role">
                    <xhtml:p class="shortdesc">Grant application a global role.</xhtml:p>
                    <xhtml:p>A global role is one that is not restricted just to a tenant. A global role could be application specific.
                An application could have the global admin role for the nova application, or a global admin role for all applications.</xhtml:p>
                  </doc>
                  <response status="204"/>
                  <response status="500">
                    <representation mediaType="application/xml" element="fault:serviceFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="fault:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="fault:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="fault:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
                <method name="DELETE" rax:id="deleteApplicationGlobalRole" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Remove Application's Global Role">
                    <xhtml:p class="shortdesc">Remove global role from application.</xhtml:p>
                  </doc>
                  <response status="204"/>
                  <response status="500">
                    <representation mediaType="application/xml" element="fault:serviceFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="fault:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="fault:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="fault:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
                <resource id="applicationTenantRole" path="tenants/{tenantId}">
                  <param name="tenantId" style="template" type="xsd:string" required="true"/>
                  <param name="roleId" style="template" type="xsd:string" required="true"/>
                  <method name="PUT" rax:id="addApplicationTenantRole" xmlns:rax="http://docs.rackspace.com/api">
                    <doc xml:lang="EN" title="Grant Application Role on Tenant">
                      <xhtml:p class="shortdesc">Grant application a role on the tenant</xhtml:p>
                    </doc>
                    <response status="204"/>
                    <response status="500">
                      <representation mediaType="application/xml" element="fault:serviceFault"/>
                      <representation mediaType="application/json"/>
                    </response>
                    <response status="400">
                      <representation mediaType="application/xml" element="fault:badRequest"/>
                      <representation mediaType="application/json"/>
                    </response>
                    <response status="401">
                      <representation mediaType="application/xml" element="fault:unauthorized"/>
                      <representation mediaType="application/json"/>
                    </response>
                    <response status="403">
                      <representation mediaType="application/xml" element="fault:forbidden"/>
                      <representation mediaType="application/json"/>
                    </response>
                    <response status="503">
                      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                      <representation mediaType="application/json"/>
                    </response>
                  </method>
                  <method name="DELETE" rax:id="deleteApplicationTenantRole" xmlns:rax="http://docs.rackspace.com/api">
                    <doc xml:lang="EN" title="Remove Application's Tenant Role">
                      <xhtml:p class="shortdesc">Remove an application's role on a tenant.</xhtml:p>
                    </doc>
                    <response status="204"/>
                    <response status="500">
                      <representation mediaType="application/xml" element="fault:serviceFault"/>
                      <representation mediaType="application/json"/>
                    </response>
                    <response status="400">
                      <representation mediaType="application/xml" element="fault:badRequest"/>
                      <representation mediaType="application/json"/>
                    </response>
                    <response status="401">
                      <representation mediaType="application/xml" element="fault:unauthorized"/>
                      <representation mediaType="application/json"/>
                    </response>
                    <response status="403">
                      <representation mediaType="application/xml" element="fault:forbidden"/>
                      <representation mediaType="application/json"/>
                    </response>
                    <response status="503">
                      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                      <representation mediaType="application/json"/>
                    </response>
                  </method>
                </resource>
              </resource>
            </resource>
            <resource id="applicationTenants" path="tenants">
              <resource id="applicationTenantsRoles" path="roles">
                <method name="GET" rax:id="getApplicationTenantsRoles" xmlns:rax="http://docs.rackspace.com/api">
                  <doc xml:lang="EN" title="Get Application Tenants Roles">
                    <xhtml:p class="shortdesc">Get a list of applications's roles on all tenants.</xhtml:p>
                  </doc>
                  <request>
                    <param name="applicationId" style="query" type="xsd:string" required="false">
                      <doc>Filter list of application tenant roles by applicationId</doc>
                    </param>
                    <param name="tenantId" style="query" type="xsd:string" required="false">
                      <doc>Filter list of application tenant roles by tenantId</doc>
                    </param>
                  </request>
                  <response status="200">
                    <representation mediaType="application/xml" element="idm:roles">
                      <doc xml:lang="EN">
                        <xsdxt:code href="../formattedsamples/tenantroles.xml"/>
                      </doc>
                    </representation>
                    <representation mediaType="application/json">
                      <doc xml:lang="EN">
                        <xsdxt:code href="../formattedsamples/tenantroles.json"/>
                      </doc>
                    </representation>
                  </response>
                  <response status="500">
                    <representation mediaType="application/xml" element="fault:serviceFault"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="400">
                    <representation mediaType="application/xml" element="fault:badRequest"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="401">
                    <representation mediaType="application/xml" element="fault:unauthorized"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="403">
                    <representation mediaType="application/xml" element="fault:forbidden"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="503">
                    <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                    <representation mediaType="application/json"/>
                  </response>
                  <response status="404">
                    <representation mediaType="application/xml" element="fault:itemNotFound"/>
                    <representation mediaType="application/json"/>
                  </response>
                </method>
              </resource>
            </resource>
          </resource>
        </resource>
        <!--roles resource-->
        <resource id="roles" path="roles">
          <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
            <doc>You need a valid token for access.</doc>
          </param>
          <method name="GET" rax:id="getRoles" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Get All Roles">
              <xhtml:p class="shortdesc">Get all roles.</xhtml:p>
            </doc>
            <request>
              <param name="name" style="query" type="xsd:string" required="false">
                <doc>Name of the role</doc>
              </param>
              <param name="applicationId" style="query" type="xsd:string" required="false">
                <doc>Application that role is tied to.</doc>
              </param>
            </request>
            <response status="200">
              <representation mediaType="application/xml" element="idm:roles">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/roles.xml"/>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/roles.json"/>
                </doc>
              </representation>
            </response>
            <response status="500">
              <representation mediaType="application/xml" element="fault:serviceFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="fault:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="fault:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="fault:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="fault:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <method name="POST" rax:id="addRole" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Add a Role">
              <xhtml:p class="shortdesc">Add a new role.</xhtml:p>
            </doc>
            <request>
              <representation mediaType="application/xml" element="idm:role">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/addrole.xml"/>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/addrole.json"/>
                </doc>
              </representation>
            </request>
            <response status="201">
              <param name="Location" style="header" type="xsd:string" required="true">
                <doc>Location to the uri of the newly created role</doc>
              </param>
            </response>
            <response status="500">
              <representation mediaType="application/xml" element="fault:serviceFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="fault:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="fault:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="fault:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <resource id="role" path="{roleId}">
            <param name="roleId" style="template" type="xsd:string" required="true"/>
            <method name="GET" rax:id="getRole" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Get Role">
                <xhtml:p class="shortdesc">Get a Role</xhtml:p>
              </doc>
              <response status="200">
                <representation mediaType="application/xml" element="idm:role">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/role.xml"/>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/role.json"/>
                  </doc>
                </representation>
              </response>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="fault:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <method name="PUT" rax:id="updateRole" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Modify a Role">
                <xhtml:p class="shortdesc">Modify an existing role.</xhtml:p>
              </doc>
              <request>
                <representation mediaType="application/xml" element="idm:role">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/addrole.xml"/>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/addrole.json"/>
                  </doc>
                </representation>
              </request>
              <response status="204"/>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <method name="DELETE" rax:id="deleteRole" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Delete a Role">
                <xhtml:p class="shortdesc">Delete an existing role.</xhtml:p>
              </doc>
              <response status="204"/>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
          </resource>
        </resource>
        <!--identity profiles resource-->
        <resource id="identityProfiles" path="customeridentityprofiles">
          <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
            <doc>You need a valid token for access.</doc>
          </param>
          <method name="POST" rax:id="addIdentityProfile" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Adds a Customer's Identity Profile">
              <xhtml:p class="shortdesc">Adds a customer's identity profile.</xhtml:p>
            </doc>
            <request>
              <representation mediaType="application/xml" element="idm:customerIdentityProfile">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/addidentityprofile.xml"/>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/addidentityprofile.json"/>
                </doc>
              </representation>
            </request>
            <response status="201">
              <param name="Location" style="header" type="xsd:string" required="true">
                <doc>Location to the uri of the newly created customer identity profile</doc>
              </param>
            </response>
            <response status="409">
              <representation mediaType="application/xml" element="idm:customerIdConflict"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="500">
              <representation mediaType="application/xml" element="fault:serviceFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="fault:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="fault:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="fault:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <resource id="identityProfile" path="{customerId}">
            <param name="customerId" style="template" type="xsd:string" required="true">
              <doc>This is the customer's RCN.</doc>
            </param>
            <method name="GET" rax:id="getIdentityProfile" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Get a Customer's Identity Profile">
                <xhtml:p class="shortdesc">Gets a customer's identity profile.</xhtml:p>
              </doc>
              <response status="200">
                <representation mediaType="application/xml" element="idm:customerIdentityProfile">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/identityprofile.xml"/>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/identityprofile.json"/>
                  </doc>
                </representation>
              </response>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="fault:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <method name="DELETE" rax:id="deleteIdentityProfile" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Delete a Customer's Identity Profile">
                <xhtml:p class="shortdesc">Delete a customer's identity profile.</xhtml:p>
              </doc>
              <response status="204"/>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="fault:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <method name="PUT" rax:id="updateIdentityProfile" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Updates a Customer's Identity Profile">
                <xhtml:p class="shortdesc">Updates a customer's identity profile.</xhtml:p>
              </doc>
              <request>
                <representation mediaType="application/xml" element="idm:customerIdentityProfile">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/identityprofile.xml"/>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/identityprofile.json"/>
                  </doc>
                </representation>
              </request>
              <response status="204"/>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="fault:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <resource id="passwordRotationPolicy" path="passwordrotationpolicy">
              <method name="GET" rax:id="getPasswordRotationPolicy" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Get Password Rotation Policy">
                  <xhtml:p class="shortdesc">Gets the password rotation policy for a customer.</xhtml:p>
                </doc>
                <response status="200">
                  <representation mediaType="application/xml" element="idm:passwordRotationPolicy">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/passwordrotation.xml"/>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/passwordrotation.json"/>
                    </doc>
                  </representation>
                </response>
                <response status="500">
                  <representation mediaType="application/xml" element="fault:serviceFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="fault:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="fault:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="fault:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="fault:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
              <method name="PUT" rax:id="setPasswordRotationPolicy" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Set Password Rotation Policy">
                  <xhtml:p class="shortdesc">Sets the password rotation policy for a customer.</xhtml:p>
                  <examples title="Password Rotation Policy Request" xmlns="http://docs.rackspace.com/api">
                    <example href="../formattedsamples/passwordrotation.xml" language="xml"/>
                    <example href="../formattedsamples/passwordrotation.json" language="javascript"/>
                  </examples>
                </doc>
                <request>
                  <representation mediaType="application/xml" element="idm:passwordRotationPolicy"/>
                  <representation mediaType="application/json"/>
                </request>
                <response status="204"/>
                <response status="500">
                  <representation mediaType="application/xml" element="fault:serviceFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="fault:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="fault:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="fault:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="fault:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
            </resource>
            <resource id="identityProfileUsers" path="users">
              <method name="GET" rax:id="getIdentityProfileUsers" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Get Users">
                  <xhtml:p class="shortdesc">Gets a list of users that this customer owns.</xhtml:p>
                </doc>
                <request>
                  <param name="offset" style="query" type="xsd:int">
                    <doc>0 based index to start list</doc>
                  </param>
                  <param name="limit" style="query" type="xsd:int">
                    <doc>Number of records to be returned</doc>
                  </param>
                </request>
                <response status="200">
                  <representation mediaType="application/xml" element="idm:users">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/users.xml"/>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/users.json"/>
                    </doc>
                  </representation>
                </response>
                <response status="500">
                  <representation mediaType="application/xml" element="fault:serviceFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="fault:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="fault:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="fault:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="fault:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
            </resource>
            <resource id="identityProfileApplications" path="applications">
              <method name="GET" rax:id="getIdentityProfileApplications" xmlns:rax="http://docs.rackspace.com/api">
                <doc xml:lang="EN" title="Get Applications">
                  <xhtml:p class="shortdesc">Gets a list of applications that this customer owns.</xhtml:p>
                </doc>
                <request>
                  <param name="offset" style="query" type="xsd:int">
                    <doc>0 based index to start list</doc>
                  </param>
                  <param name="limit" style="query" type="xsd:int">
                    <doc>Number of records to be returned</doc>
                  </param>
                </request>
                <response status="200">
                  <representation mediaType="application/xml" element="idm:applications">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/applications.xml"/>
                    </doc>
                  </representation>
                  <representation mediaType="application/json">
                    <doc xml:lang="EN">
                      <xsdxt:code href="../formattedsamples/applications.json"/>
                    </doc>
                  </representation>
                </response>
                <response status="500">
                  <representation mediaType="application/xml" element="fault:serviceFault"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="400">
                  <representation mediaType="application/xml" element="fault:badRequest"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="401">
                  <representation mediaType="application/xml" element="fault:unauthorized"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="403">
                  <representation mediaType="application/xml" element="fault:forbidden"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="503">
                  <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                  <representation mediaType="application/json"/>
                </response>
                <response status="404">
                  <representation mediaType="application/xml" element="fault:itemNotFound"/>
                  <representation mediaType="application/json"/>
                </response>
              </method>
            </resource>
          </resource>
        </resource>
        <!--password resources-->
        <resource id="passwordRules" path="passwordrules">
          <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
            <doc>You need a valid token for access.</doc>
          </param>
          <method name="GET" rax:id="getPasswordRules" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Get Password Rules">
              <xhtml:p class="shortdesc">Get password rules.</xhtml:p>
            </doc>
            <response status="200">
              <representation mediaType="application/xml" element="idm:passwordRuleResults">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/password_rule_results.xml"/>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/password_rule_results.json"/>
                </doc>
              </representation>
            </response>
            <response status="500">
              <representation mediaType="application/xml" element="fault:serviceFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="fault:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="fault:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="fault:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="404">
              <representation mediaType="application/xml" element="fault:itemNotFound"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <resource id="passwordValidation" path="validation">
            <method name="POST" rax:id="validatePassword" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Password Validation Check">
                <xhtml:p class="shortdesc">Validate password to ensure it conforms to password rules.</xhtml:p>
              </doc>
              <request>
                <representation mediaType="application/xml" element="idm:userPassword">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/user_password.xml"/>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/user_password.json"/>
                  </doc>
                </representation>
              </request>
              <response status="200">
                <representation mediaType="application/xml" element="idm:passwordValidation">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/password_validation.xml"/>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/password_validation.json"/>
                  </doc>
                </representation>
              </response>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="fault:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
          </resource>
        </resource>
        <!--tenant resources-->
        <resource id="tenants" path="tenants">
          <param name="X-Auth-Token" style="header" type="xsd:string" required="true">
            <doc>You need a valid token for access.</doc>
          </param>
          <method name="POST" rax:id="createTenant" xmlns:rax="http://docs.rackspace.com/api">
            <doc xml:lang="EN" title="Add a Tenant">
              <xhtml:p class="shortdesc">Add a new Tenant.</xhtml:p>
            </doc>
            <request>
              <representation mediaType="application/xml" element="idm:tenant">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/Tenant.xml"/>
                </doc>
              </representation>
              <representation mediaType="application/json">
                <doc xml:lang="EN">
                  <xsdxt:code href="../formattedsamples/Tenant.json"/>
                </doc>
              </representation>
            </request>
            <response status="201">
              <param name="Location" style="header" type="xsd:string" required="true">
                <doc>Location to the uri of the newly created Tenant</doc>
              </param>
            </response>
            <response status="500">
              <representation mediaType="application/xml" element="fault:serviceFault"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="400">
              <representation mediaType="application/xml" element="fault:badRequest"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="401">
              <representation mediaType="application/xml" element="fault:unauthorized"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="403">
              <representation mediaType="application/xml" element="fault:forbidden"/>
              <representation mediaType="application/json"/>
            </response>
            <response status="503">
              <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
              <representation mediaType="application/json"/>
            </response>
          </method>
          <resource id="tenant" path="{tenantId}">
            <method name="GET" rax:id="getTenant" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Get Tenant">
                <xhtml:p class="shortdesc">Get a Tenant</xhtml:p>
              </doc>
              <response status="200">
                <representation mediaType="application/xml" element="idm:tenant">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/Tenant.xml"/>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/Tenant.json"/>
                  </doc>
                </representation>
              </response>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="404">
                <representation mediaType="application/xml" element="fault:itemNotFound"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <method name="PUT" rax:id="updateTenant" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Modify a Tenant">
                <xhtml:p class="shortdesc">Modify an existing Tenant.</xhtml:p>
              </doc>
              <request>
                <representation mediaType="application/xml" element="idm:tenant">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/Tenant.xml"/>
                  </doc>
                </representation>
                <representation mediaType="application/json">
                  <doc xml:lang="EN">
                    <xsdxt:code href="../formattedsamples/Tenant.json"/>
                  </doc>
                </representation>
              </request>
              <response status="204"/>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
            <method name="DELETE" rax:id="deleteTenant" xmlns:rax="http://docs.rackspace.com/api">
              <doc xml:lang="EN" title="Delete a Tenant">
                <xhtml:p class="shortdesc">Delete an existing Tenant.</xhtml:p>
              </doc>
              <response status="204"/>
              <response status="500">
                <representation mediaType="application/xml" element="fault:serviceFault"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="400">
                <representation mediaType="application/xml" element="fault:badRequest"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="401">
                <representation mediaType="application/xml" element="fault:unauthorized"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="403">
                <representation mediaType="application/xml" element="fault:forbidden"/>
                <representation mediaType="application/json"/>
              </response>
              <response status="503">
                <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
                <representation mediaType="application/json"/>
              </response>
            </method>
          </resource>
        </resource>
      </resource>
    </resource>
  </resources>
  <!--*******************************************************-->
  <!--All Methods-->
  <!--*******************************************************-->
  <method name="GET" id="getServiceProfile">
    <doc xml:lang="EN" title="Version Details">
      <p xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about this service</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/json"/>
      <representation mediaType="application/xml" element="sp:service-profile"/>
    </response>
  </method>
  <method name="GET" id="getVersionInfo">
    <doc xml:lang="EN" title="Version Details">
      <p xmlns="http://www.w3.org/1999/xhtml">Returns detailed information about this version of the api</p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/json"/>
      <representation mediaType="application/xml" element="sp:contract"/>
    </response>
  </method>
  <!--Token methods-->
  <method name="POST" id="authenticate">
    <doc xml:lang="EN" title="Authenticate">
      <xhtml:p class="shortdesc">Authenticate a client and generate an access token.</xhtml:p>
      <xhtml:p>There are various ways to authenticate in the global auth system. You can authenticate as a Racker, an application on behalf of a 
                customer, or an application directly. Examples below show the different authentication mechanisms.</xhtml:p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="idm:authCredentials">
        <doc xml:lang="EN" title="Auth as Application Request: XML">
          <xsdxt:code href="../formattedsamples/application_auth_credentials.xml"/>
        </doc>
        <doc xml:lang="EN" title="Auth as Customer Request: XML">
          <xsdxt:code href="../formattedsamples/auth_credentials.xml"/>
        </doc>
        <doc xml:lang="EN" title="Auth as Racker Request: XML">
          <xsdxt:code href="../formattedsamples/racker_auth_credentials.xml"/>
        </doc>
        <doc xml:lang="EN" title="Auth as Racker with RSA Token Request: XML">
          <xsdxt:code href="../formattedsamples/racker_rsa_credentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN" title="Auth as Application Request: JSON">
          <xsdxt:code href="../formattedsamples/application_auth_credentials.json"/>
        </doc>
        <doc xml:lang="EN" title="Auth as Customer Request: JSON">
          <xsdxt:code href="../formattedsamples/auth_credentials.json"/>
        </doc>
        <doc xml:lang="EN" title="Auth as Racker Request: JSON">
          <xsdxt:code href="../formattedsamples/racker_auth_credentials.json"/>
        </doc>
        <doc xml:lang="EN" title="Auth as Racker with RSA Token Request: JSON">
          <xsdxt:code href="../formattedsamples/racker_rsa_credentials.json"/>
        </doc>
      </representation>
    </request>
    <response status="200 203">
      <representation mediaType="application/xml" element="idm:auth">
        <doc xml:lang="EN" title="Auth as Application Response: XML">
          <xsdxt:code href="../formattedsamples/application_auth.xml"/>
        </doc>
        <doc xml:lang="EN" title="Auth as Customer Response: XML">
          <xsdxt:code href="../formattedsamples/auth.xml"/>
        </doc>
        <doc xml:lang="EN" title="Auth as Racker Response: XML">
          <xsdxt:code href="../formattedsamples/racker_auth.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN" title="Auth as Application Response: JSON">
          <xsdxt:code href="../formattedsamples/application_auth.json"/>
        </doc>
        <doc xml:lang="EN" title="Auth as Customer Response: JSON">
          <xsdxt:code href="../formattedsamples/auth.json"/>
        </doc>
        <doc xml:lang="EN" title="Auth as Racker Response: JSON">
          <xsdxt:code href="../formattedsamples/racker_auth.json"/>
        </doc>
      </representation>
    </response>
    <response status="403 ">
      <representation mediaType="application/xml" element="idm:userDisabled"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="validateToken">
    <doc xml:lang="EN" title="Validate Token">
      <xhtml:p class="shortdesc">Check that a token is valid and return the token details.</xhtml:p>
    </doc>
    <response status="200 203">
      <representation mediaType="application/xml" element="idm:auth">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/validatetoken.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/validatetoken.json"/>
        </doc>
      </representation>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="idm:userDisabled"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="revokeToken">
    <doc xml:lang="EN" title="Revoke Token">
      <xhtml:p class="shortdesc">Revoke Token.</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="403">
      <representation mediaType="application/xml" element="idm:userDisabled"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="verifyTokenApplication">
    <doc xml:lang="EN" title="Check if Token has access to an Application">
      <xhtml:p class="shortdesc">Check if token has access to an application.</xhtml:p>
    </doc>
    <response status="204 404"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="verifyTokenApplicationRole">
    <doc xml:lang="EN" title="Check if Token has Role on an Application">
      <xhtml:p class="shortdesc">Check if token has role on an application.</xhtml:p>
    </doc>
    <response status="204 404"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--User methods-->
  <method name="GET" id="getUsers">
    <doc xml:lang="EN" title="Get Users">
      <xhtml:p class="shortdesc">Gets a list of users.</xhtml:p>
    </doc>
    <request>
      <param name="username" style="query" type="xsd:string">
        <doc>Allows you search for a user by username</doc>
      </param>
      <param name="offset" style="query" type="xsd:int">
        <doc>0 based index to start list</doc>
      </param>
      <param name="limit" style="query" type="xsd:int">
        <doc>Number of records to be returned</doc>
      </param>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:users">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/users.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/users.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addUser">
    <doc xml:lang="EN" title="Add a User">
      <xhtml:p class="shortdesc">Adds a new user.</xhtml:p>
      <xhtml:p>The Username attribute is required in this request.If a blank password is passed in the Password element, 
                the API will generate a random password for the user. The prefLanguage attribute defaults 
                to "US_en" and the timeZone attribute defaults to "America/Chicago".</xhtml:p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="idm:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/adduser.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/adduser.xml"/>
        </doc>
      </representation>
    </request>
    <response status="200">
      <param name="Location" style="header" type="xsd:string" required="true">
        <doc>Location to the uri of the newly created resource</doc>
      </param>
      <representation mediaType="application/xml" element="idm:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/addeduser.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/addeduser.json"/>
        </doc>
      </representation>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="idm:passwordValidationFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="409">
      <representation mediaType="application/xml" element="idm:usernameConflict"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUser">
    <doc xml:lang="EN" title="Get a User">
      <xhtml:p class="shortdesc">Get a user.</xhtml:p>
    </doc>
    <response status="200">
      <representation mediaType="application/xml" element="idm:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/getuser.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/getuser.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="updateUser">
    <doc xml:lang="EN" title="Update a User">
      <xhtml:p class="shortdesc">Update a user.</xhtml:p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="idm:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/updateuser.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/updateuser.json"/>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:user">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/updateduser.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/updateduser.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUser">
    <doc xml:lang="EN" title="Delete a User">
      <xhtml:p class="shortdesc">Delete a user.</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserSecret">
    <doc xml:lang="EN" title="Get User Secret Q/A">
      <xhtml:p class="shortdesc">Get a user's secret question and answer.</xhtml:p>
    </doc>
    <response status="200">
      <representation mediaType="application/xml" element="idm:userSecret">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/user_secret.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/user_secret.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserSecret">
    <doc xml:lang="EN" title="Set User Secret Q/A">
      <xhtml:p class="shortdesc">Sets a user's secret question and answer.</xhtml:p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="idm:userSecret">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/user_secret.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/user_secret.json"/>
        </doc>
      </representation>
    </request>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserPasswordCredentials">
    <doc xml:lang="EN" title="Get User's Password">
      <xhtml:p class="shortdesc">Get a user's password credentials.</xhtml:p>
    </doc>
    <response status="200">
      <representation mediaType="application/xml" element="idm:passwordCredentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/user_credentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/user_credentials.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setUserPasswordCredentials">
    <doc xml:lang="EN" title="Set User's Password">
      <xhtml:p class="shortdesc">Sets a user's password credentials.</xhtml:p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="idm:passwordCredentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/set_user_credentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/set_user_credentials.json"/>
        </doc>
      </representation>
    </request>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="resetUserPasswordCredentials">
    <doc xml:lang="EN" title="Reset User's Password">
      <xhtml:p class="shortdesc">Reset a user's password credentials.</xhtml:p>
    </doc>
    <response status="200">
      <representation mediaType="application/xml" element="idm:passwordCredentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/user_credentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/user_credentials.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getPasswordRecoveryToken">
    <doc xml:lang="EN" title="Get Password Recovery Token">
      <xhtml:p class="shortdesc">Get a token that can be used to reset a user's password credentials.</xhtml:p>
    </doc>
    <response status="200">
      <representation mediaType="application/xml" element="idm:token">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/token.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/token.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserApplications">
    <doc xml:lang="EN" title="Get the Applications that a User has Provisioned">
      <xhtml:p class="shortdesc">Get the applications that have been provisioned for a user.</xhtml:p>
    </doc>
    <response status="200">
      <representation mediaType="application/xml" element="idm:applications">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/applications.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/applications.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="addUserApplication">
    <doc xml:lang="EN" title="Provision an Application for a User">
      <xhtml:p class="shortdesc">Provision an application for a user.</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUserApplication">
    <doc xml:lang="EN" title="Remove Provisioned Application from a User">
      <xhtml:p class="shortdesc">Removed a provisioned application from a user.</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserTenantsRoles">
    <doc xml:lang="EN" title="Get User Tenants Roles">
      <xhtml:p class="shortdesc">Get a list of user's roles on all tenants.</xhtml:p>
    </doc>
    <request>
      <param name="applicationId" style="query" type="xsd:string" required="false">
        <doc>Filter list of user tenant roles by applicationId</doc>
      </param>
      <param name="tenantId" style="query" type="xsd:string" required="false">
        <doc>Filter list of user tenant roles by tenantId</doc>
      </param>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:roles">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/tenantroles.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/tenantroles.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="addUserTenantRole">
    <doc xml:lang="EN" title="Grant User Role on Tenant">
      <xhtml:p class="shortdesc">Grant user a role on the tenant</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUserTenantRole">
    <doc xml:lang="EN" title="Remove User's Tenant Role">
      <xhtml:p class="shortdesc">Remove User's Tenant Role.</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getUserGlobalRoles">
    <doc xml:lang="EN" title="Get User Global Roles">
      <xhtml:p class="shortdesc">Get a list of user's global roles.</xhtml:p>
    </doc>
    <request>
      <param name="applicationId" style="query" type="xsd:string" required="false">
        <doc>Filter list of user roles by applicationId</doc>
      </param>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:roles">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/roles.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/roles.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="addUserGlobalRole">
    <doc xml:lang="EN" title="Grant User a Global Role">
      <xhtml:p class="shortdesc">Grant user a global role.</xhtml:p>
      <xhtml:p>A global role is one that is not restricted just to a tenant. A global role could be application specific.
                A user could have the global admin role for the nova application, or a global admin role for all applications.</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteUserGlobalRole">
    <doc xml:lang="EN" title="Remove User's Global Role">
      <xhtml:p class="shortdesc">Remove global role from user.</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Application Methods-->
  <method name="GET" id="getApplications">
    <doc xml:lang="EN" title="Get Applications">
      <xhtml:p class="shortdesc">Gets a list of applications.</xhtml:p>
    </doc>
    <request>
      <param name="name" style="query" type="xsd:string">
        <doc>Allows you search for an application by name</doc>
      </param>
      <param name="offset" style="query" type="xsd:int">
        <doc>0 based index to start list</doc>
      </param>
      <param name="limit" style="query" type="xsd:int">
        <doc>Number of records to be returned</doc>
      </param>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:applications">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/applications.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/applications.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="addApplication">
    <doc xml:lang="EN" title="Add an Application">
      <xhtml:p class="shortdesc">Add an application.</xhtml:p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="idm:application">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/addapplication.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/addapplication.json"/>
        </doc>
      </representation>
    </request>
    <response status="200">
      <param name="Location" style="header" type="xsd:string" required="true">
        <doc>Location to the uri of the newly created resource</doc>
      </param>
      <representation mediaType="application/xml" element="idm:application">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/addedapplication.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/addedapplication.json"/>
        </doc>
      </representation>
    </response>
    <response status="409">
      <representation mediaType="application/xml" element="idm:applicationNameConflict"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getApplication">
    <doc xml:lang="EN" title="Get an Application">
      <xhtml:p class="shortdesc">Get an application.</xhtml:p>
    </doc>
    <response status="200">
      <representation mediaType="application/xml" element="idm:application">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/application.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/application.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="updateApplication">
    <doc xml:lang="EN" title="Update an Application">
      <xhtml:p class="shortdesc">Update an application.</xhtml:p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="idm:application">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/updateapplication.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/updateapplication.json"/>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:application">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/updatedapplication.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/updatedapplication.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteApplication">
    <doc xml:lang="EN" title="Delete an Application">
      <xhtml:p class="shortdesc">Delete as application.</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="resetApplicationSecretCredentials">
    <doc xml:lang="EN" title="Reset Application's Secret">
      <xhtml:p class="shortdesc">Reset application secret.</xhtml:p>
    </doc>
    <response status="200">
      <representation mediaType="application/xml" element="idm:secretCredentials">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/application_credentials.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/application_credentials.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getApplicationApplications">
    <doc xml:lang="EN" title="Get the Applications that an Application has Provisioned">
      <xhtml:p class="shortdesc">Get all applications that have been provisioned for this application..</xhtml:p>
    </doc>
    <response status="200">
      <representation mediaType="application/xml" element="idm:applications">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/applications.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/applications.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="addApplicationApplication">
    <doc xml:lang="EN" title="Provision an Application for an Application">
      <xhtml:p class="shortdesc">Provision an application for this application.</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteApplicationApplication">
    <doc xml:lang="EN" title="Remove Provisioned Application from an Application">
      <xhtml:p class="shortdesc">Removes a provisioned application from this application.</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getApplicationTenantsRoles">
    <doc xml:lang="EN" title="Get Application Tenants Roles">
      <xhtml:p class="shortdesc">Get a list of applications's roles on all tenants.</xhtml:p>
    </doc>
    <request>
      <param name="applicationId" style="query" type="xsd:string" required="false">
        <doc>Filter list of application tenant roles by applicationId</doc>
      </param>
      <param name="tenantId" style="query" type="xsd:string" required="false">
        <doc>Filter list of application tenant roles by tenantId</doc>
      </param>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:roles">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/tenantroles.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/tenantroles.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="addApplicationTenantRole">
    <doc xml:lang="EN" title="Grant Application Role on Tenant">
      <xhtml:p class="shortdesc">Grant application a role on the tenant</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteApplicationTenantRole">
    <doc xml:lang="EN" title="Remove Application's Tenant Role">
      <xhtml:p class="shortdesc">Remove an application's role on a tenant.</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getApplicationGlobalRoles">
    <doc xml:lang="EN" title="Get Application Global Roles">
      <xhtml:p class="shortdesc">Get a list of aplications's global roles.</xhtml:p>
    </doc>
    <request>
      <param name="roleApplicationId" style="query" type="xsd:string" required="false">
        <doc>Allows you filter application specific roles</doc>
      </param>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:roles">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/roles.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/roles.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="addApplicationGlobalRole">
    <doc xml:lang="EN" title="Grant Application a Global Role">
      <xhtml:p class="shortdesc">Grant application a global role.</xhtml:p>
      <xhtml:p>A global role is one that is not restricted just to a tenant. A global role could be application specific.
                An application could have the global admin role for the nova application, or a global admin role for all applications.</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteApplicationGlobalRole">
    <doc xml:lang="EN" title="Remove Application's Global Role">
      <xhtml:p class="shortdesc">Remove global role from application.</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Role Methods-->
  <method name="POST" id="addRole">
    <doc xml:lang="EN" title="Add a Role">
      <xhtml:p class="shortdesc">Add a new role.</xhtml:p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="idm:role">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/addrole.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/addrole.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <param name="Location" style="header" type="xsd:string" required="true">
        <doc>Location to the uri of the newly created role</doc>
      </param>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getRoles">
    <doc xml:lang="EN" title="Get All Roles">
      <xhtml:p class="shortdesc">Get all roles.</xhtml:p>
    </doc>
    <request>
      <param name="name" style="query" type="xsd:string" required="false">
        <doc>Name of the role</doc>
      </param>
      <param name="applicationId" style="query" type="xsd:string" required="false">
        <doc>Application that role is tied to.</doc>
      </param>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:roles">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/roles.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/roles.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getRole">
    <doc xml:lang="EN" title="Get Role">
      <xhtml:p class="shortdesc">Get a Role</xhtml:p>
    </doc>
    <response status="200">
      <representation mediaType="application/xml" element="idm:role">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/role.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/role.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="updateRole">
    <doc xml:lang="EN" title="Modify a Role">
      <xhtml:p class="shortdesc">Modify an existing role.</xhtml:p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="idm:role">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/addrole.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/addrole.json"/>
        </doc>
      </representation>
    </request>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteRole">
    <doc xml:lang="EN" title="Delete a Role">
      <xhtml:p class="shortdesc">Delete an existing role.</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Identity Profile Methods-->
  <method name="POST" id="addIdentityProfile">
    <doc xml:lang="EN" title="Adds a Customer's Identity Profile">
      <xhtml:p class="shortdesc">Adds a customer's identity profile.</xhtml:p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="idm:customerIdentityProfile">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/addidentityprofile.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/addidentityprofile.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <param name="Location" style="header" type="xsd:string" required="true">
        <doc>Location to the uri of the newly created customer identity profile</doc>
      </param>
    </response>
    <response status="409">
      <representation mediaType="application/xml" element="idm:customerIdConflict"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getIdentityProfile">
    <doc xml:lang="EN" title="Get a Customer's Identity Profile">
      <xhtml:p class="shortdesc">Gets a customer's identity profile.</xhtml:p>
    </doc>
    <response status="200">
      <representation mediaType="application/xml" element="idm:customerIdentityProfile">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/identityprofile.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/identityprofile.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteIdentityProfile">
    <doc xml:lang="EN" title="Delete a Customer's Identity Profile">
      <xhtml:p class="shortdesc">Delete a customer's identity profile.</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="updateIdentityProfile">
    <doc xml:lang="EN" title="Updates a Customer's Identity Profile">
      <xhtml:p class="shortdesc">Updates a customer's identity profile.</xhtml:p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="idm:customerIdentityProfile">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/identityprofile.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/identityprofile.json"/>
        </doc>
      </representation>
    </request>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="setPasswordRotationPolicy">
    <doc xml:lang="EN" title="Set Password Rotation Policy">
      <xhtml:p class="shortdesc">Sets the password rotation policy for a customer.</xhtml:p>
      <examples title="Password Rotation Policy Request" xmlns="http://docs.rackspace.com/api">
        <example href="../formattedsamples/passwordrotation.xml" language="xml"/>
        <example href="../formattedsamples/passwordrotation.json" language="javascript"/>
      </examples>
    </doc>
    <request>
      <representation mediaType="application/xml" element="idm:passwordRotationPolicy"/>
      <representation mediaType="application/json"/>
    </request>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getPasswordRotationPolicy">
    <doc xml:lang="EN" title="Get Password Rotation Policy">
      <xhtml:p class="shortdesc">Gets the password rotation policy for a customer.</xhtml:p>
    </doc>
    <response status="200">
      <representation mediaType="application/xml" element="idm:passwordRotationPolicy">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/passwordrotation.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/passwordrotation.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getIdentityProfileUsers">
    <doc xml:lang="EN" title="Get Users">
      <xhtml:p class="shortdesc">Gets a list of users that this customer owns.</xhtml:p>
    </doc>
    <request>
      <param name="offset" style="query" type="xsd:int">
        <doc>0 based index to start list</doc>
      </param>
      <param name="limit" style="query" type="xsd:int">
        <doc>Number of records to be returned</doc>
      </param>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:users">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/users.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/users.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getIdentityProfileApplications">
    <doc xml:lang="EN" title="Get Applications">
      <xhtml:p class="shortdesc">Gets a list of applications that this customer owns.</xhtml:p>
    </doc>
    <request>
      <param name="offset" style="query" type="xsd:int">
        <doc>0 based index to start list</doc>
      </param>
      <param name="limit" style="query" type="xsd:int">
        <doc>Number of records to be returned</doc>
      </param>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:applications">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/applications.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/applications.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Password rules methods-->
  <method name="GET" id="getPasswordRules">
    <doc xml:lang="EN" title="Get Password Rules">
      <xhtml:p class="shortdesc">Get password rules.</xhtml:p>
    </doc>
    <response status="200">
      <representation mediaType="application/xml" element="idm:passwordRuleResults">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/password_rule_results.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/password_rule_results.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="POST" id="validatePassword">
    <doc xml:lang="EN" title="Password Validation Check">
      <xhtml:p class="shortdesc">Validate password to ensure it conforms to password rules.</xhtml:p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="idm:userPassword">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/user_password.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/user_password.json"/>
        </doc>
      </representation>
    </request>
    <response status="200">
      <representation mediaType="application/xml" element="idm:passwordValidation">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/password_validation.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/password_validation.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <!--Tenant Methods-->
  <method name="POST" id="createTenant">
    <doc xml:lang="EN" title="Add a Tenant">
      <xhtml:p class="shortdesc">Add a new Tenant.</xhtml:p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="idm:tenant">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/Tenant.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/Tenant.json"/>
        </doc>
      </representation>
    </request>
    <response status="201">
      <param name="Location" style="header" type="xsd:string" required="true">
        <doc>Location to the uri of the newly created Tenant</doc>
      </param>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="GET" id="getTenant">
    <doc xml:lang="EN" title="Get Tenant">
      <xhtml:p class="shortdesc">Get a Tenant</xhtml:p>
    </doc>
    <response status="200">
      <representation mediaType="application/xml" element="idm:tenant">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/Tenant.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/Tenant.json"/>
        </doc>
      </representation>
    </response>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="404">
      <representation mediaType="application/xml" element="fault:itemNotFound"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="PUT" id="updateTenant">
    <doc xml:lang="EN" title="Modify a Tenant">
      <xhtml:p class="shortdesc">Modify an existing Tenant.</xhtml:p>
    </doc>
    <request>
      <representation mediaType="application/xml" element="idm:tenant">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/Tenant.xml"/>
        </doc>
      </representation>
      <representation mediaType="application/json">
        <doc xml:lang="EN">
          <xsdxt:code href="../formattedsamples/Tenant.json"/>
        </doc>
      </representation>
    </request>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
  <method name="DELETE" id="deleteTenant">
    <doc xml:lang="EN" title="Delete a Tenant">
      <xhtml:p class="shortdesc">Delete an existing Tenant.</xhtml:p>
    </doc>
    <response status="204"/>
    <response status="500">
      <representation mediaType="application/xml" element="fault:serviceFault"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="400">
      <representation mediaType="application/xml" element="fault:badRequest"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="401">
      <representation mediaType="application/xml" element="fault:unauthorized"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="403">
      <representation mediaType="application/xml" element="fault:forbidden"/>
      <representation mediaType="application/json"/>
    </response>
    <response status="503">
      <representation mediaType="application/xml" element="fault:serviceUnavailable"/>
      <representation mediaType="application/json"/>
    </response>
  </method>
</application>]]></con:content><con:type>http://wadl.dev.java.net/2009/02</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>${#Project#FoundEndPoint}</con:endpoint></con:endpoints><con:resource name="/" path="${#Project#foundationPath}"><con:settings/><con:parameters/><con:resource name="v1" path=""><con:settings/><con:parameters/><con:resource name="tokens" path="tokens"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>tokenId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="applications/{applicationId}" path="applications/{applicationId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>applicationId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles/{roleId}" path="roles/{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Check if Token has Role on an Application" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Check if Token has access to an Application" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Validate Token" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Revoke Token" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Authenticate" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:authCredentials</con:element><con:description>Auth as Application Request: XML</con:description></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description>Auth as Application Request: JSON</con:description></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:auth</con:element><con:description>Auth as Application Response: XML</con:description></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description>Auth as Application Response: JSON</con:description></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="secret" path="secret"><con:settings/><con:parameters/><con:method name="Get User Secret Q/A" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userSecret</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Set User Secret Q/A" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userSecret</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="passwordcredentials" path="passwordcredentials"><con:settings/><con:parameters/><con:resource name="recoverytoken" path="recoverytoken"><con:settings/><con:parameters/><con:method name="Get Password Recovery Token" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:token</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get User's Password" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Set User's Password" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Reset User's Password" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="applications" path="applications"><con:settings/><con:parameters/><con:resource name="{applicationId}" path="{applicationId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>applicationId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Provision an Application for a User" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove Provisioned Application from a User" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get the Applications that a User has Provisioned" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:applications</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="tenants/{tenantId}" path="tenants/{tenantId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Grant User Role on Tenant" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove User's Tenant Role" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Grant User a Global Role" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove User's Global Role" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get User Global Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>applicationId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters/><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="Get User Tenants Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>applicationId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:method name="Get a User" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Update a User" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a User" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Users" method="GET"><con:settings/><con:parameters><con:parameter><con:name>username</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>offset</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add a User" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordValidationFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:usernameConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>409</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="applications" path="applications"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{applicationId}" path="{applicationId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>applicationId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="secretcredentials" path="secretcredentials"><con:settings/><con:parameters/><con:method name="Reset Application's Secret" method="POST"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:secretCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="applications" path="applications"><con:settings/><con:parameters/><con:resource name="{provisionedApplicationId}" path="{provisionedApplicationId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>provisionedApplicationId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles/{roleId}" path="roles/{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters></con:resource><con:method name="Provision an Application for an Application" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove Provisioned Application from an Application" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get the Applications that an Application has Provisioned" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:applications</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="tenants/{tenantId}" path="tenants/{tenantId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Grant Application Role on Tenant" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove Application's Tenant Role" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Grant Application a Global Role" method="PUT"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove Application's Global Role" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Application Global Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>roleApplicationId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters/><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="Get Application Tenants Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>applicationId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:method name="Get an Application" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Update an Application" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete an Application" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Applications" method="GET"><con:settings/><con:parameters><con:parameter><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>offset</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:applications</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add an Application" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:application</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:applicationNameConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>409</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="roles" path="roles"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Role" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Modify a Role" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a Role" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get All Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>applicationId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add a Role" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="customeridentityprofiles" path="customeridentityprofiles"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{customerId}" path="{customerId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>customerId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="passwordrotationpolicy" path="passwordrotationpolicy"><con:settings/><con:parameters/><con:method name="Get Password Rotation Policy" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordRotationPolicy</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Set Password Rotation Policy" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordRotationPolicy</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters/><con:method name="Get Users" method="GET"><con:settings/><con:parameters><con:parameter><con:name>offset</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="applications" path="applications"><con:settings/><con:parameters/><con:method name="Get Applications" method="GET"><con:settings/><con:parameters><con:parameter><con:name>offset</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:applications</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a Customer's Identity Profile" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:customerIdentityProfile</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a Customer's Identity Profile" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Updates a Customer's Identity Profile" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:customerIdentityProfile</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Adds a Customer's Identity Profile" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:customerIdentityProfile</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>409</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:customerIdConflict</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>409</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="passwordrules" path="passwordrules"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="validation" path="validation"><con:settings/><con:parameters/><con:method name="Password Validation Check" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:userPassword</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordValidation</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Password Rules" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:passwordRuleResults</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters/><con:method name="Get Tenant" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Modify a Tenant" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a Tenant" method="DELETE"><con:settings/><con:parameters/><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add a Tenant" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://idm.api.rackspace.com/v1.0">v1:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>500</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>500</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v1="http://fault.common.api.rackspace.com/v1.0">v1:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Version Details" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:ser="http://service-registry.api.rackspace.com/service-profile">ser:contract</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Version Details" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:ser="http://service-registry.api.rackspace.com/service-profile">ser:service-profile</con:element><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:9998</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-KSGRP-admin" type="rest" definitionUrl="C:\Users\mant0623\Desktop\admin\RAX-KSGRP-admin.wadl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints/><con:resource name="v2.0" path="${#Project#path2}/users/{userID}/RAX-KSGRP"><con:settings/><con:parameters><con:parameter><con:name>userID</con:name><con:value/><con:style>TEMPLATE</con:style></con:parameter><con:parameter><con:name>X-Auth-Token</con:name><con:value/><con:style>HEADER</con:style></con:parameter></con:parameters><con:method name="users" method="GET"><con:settings/><con:parameters/><con:request name="Request 1" mediaType="application/xml"><con:settings/><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite name="Functional - Migration"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Migration - Positive" searchProperties="true" id="246a0b71-b7a8-471b-908d-88def473ea29" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST Authenticate auth CA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth CA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#authpass}" username="${#TestSuite#authuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[@id=1]/@id</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate auth GA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth GA" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAadminpass}" username="${#TestSuite#GAadminuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#path2}/tokens';
//ns1:Response[1]/ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:e[1]/ns1:name[1]</path><content>identity:admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST AuthenticateApplication - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST AuthenticateApplication - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth token"><con:settings/><con:config><script>def authtoken = context.expand( '${POST Authenticate auth CA#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )

log.info authtoken
testRunner.testCase.testSuite.setPropertyValue("authtokenCA", authtoken)

def tokenIdGA = context.expand( '${POST Authenticate auth GA#ResponseAsXml#declare namespace ns1=\'${#Project#EndPointJson}/${#Project#path2}/tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )

log.info tokenIdGA
testRunner.testCase.testSuite.setPropertyValue("authtokenGA", tokenIdGA)

def tokenIdApp = context.expand( '${POST AuthenticateApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info tokenIdApp;
testRunner.testCase.testSuite.setPropertyValue("tokenIdApp",tokenIdApp);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createApplication - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/applications" methodName="Add an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createApplication - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request>&lt;application customerId="RCN-987-654-321" description="Foundation Test App" name="${#TestCase#migTestApp}" xmlns="http://idm.api.rackspace.com/v1.0">&lt;roles/>&lt;/application></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@name</path><content>${#TestCase#migTestApp}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@customerId</path><content>RCN-987-654-321</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 3"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@description</path><content>Foundation Test App</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenIdApp}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store new App"><con:settings/><con:config><script>def clientId = context.expand( '${POST createApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/@clientId}' )
log.info clientId;
testRunner.testCase.setPropertyValue("clientId",clientId);

def clientSecret = context.expand( '${POST createApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/ns3:secretCredentials[1]/@clientSecret}' )
log.info clientSecret;
testRunner.testCase.setPropertyValue("clientSecret",clientSecret);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate Racker"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate Racker" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request>&lt;rackerCredentials password="${#Project#rackerPwd}" username="${#Project#rackerUser}" client_secret="${#TestCase#clientSecret}" client_id="${#TestCase#clientId}" grant_type="PASSWORD" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:auth[1]/ns3:racker[1]/@username</path><content>${#Project#rackerUser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store Racker Token"><con:settings/><con:config><script>//def rackerToken = context.expand( '${POST authenticate Racker#ResponseAsXml#declare namespace ns1=\'${#Project#FoundEndPoint}/${#Project#foundationPath}/tokens\'; //ns1:Response[1]/ns1:auth[1]/ns1:access_token[1]/ns1:id[1]}' )
def rackerToken = context.expand( '${POST authenticate Racker#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )

log.info rackerToken;
testRunner.testCase.testSuite.setPropertyValue("rackerToken",rackerToken);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET validateTokenById - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens/{tokenId}" methodName="Validate Token - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET validateTokenById - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Create username"><con:settings/><con:config><script>Random r = new Random();
//log.info r.nextInt(10000);
testRunner.testCase.setPropertyValue("username", "migTestUA"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("username");</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#username}" key="${#TestCase#key}" mossoId="${#TestCase#MossoId}" nastId="${#TestCase#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser CA V1.1 - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser CA V1.1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestCase#authuser}</con:username><con:password>${#TestCase#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserByName CA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserByName CA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#username}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#userName}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store userId"><con:settings/><con:config><script>
def userId = context.expand( '${GET getUserByName CA V2.0 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )

log.info "get nast ID - " + userId
testRunner.testCase.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdminById CA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users/{user_id}" methodName="Get a User by ID - getUserById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdminById CA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#username}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate userAdmin V1.1 CA"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/auth" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate userAdmin V1.1 CA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:credentials key="${#TestCase#key}" username="${#TestCase#username}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUserAdmin V2.0 CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUserAdmin V2.0 CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UA token"><con:settings/><con:config><script>def CAtokenId = context.expand( '${POST authenticate userAdmin V1.1 CA#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:token[1]/@id}' )
log.info "CAtokenId - " + CAtokenId
testRunner.testCase.setPropertyValue("CAtokenId", CAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET validateUserAdminToken v1.1 CA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET validateUserAdminToken v1.1 CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:token[1]/@userId</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tokenId" value="${#TestCase#CAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET validateUserAdminToken v2.0 CA - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens/{tokenId}" methodName="Validate Token - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET validateUserAdminToken v2.0 CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#CAtokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET listUserAdminCredential - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials - listCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET listUserAdminCredential - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:credentials[1]/ns3:apiKeyCredentials[1]/@apiKey</path><content>${#TestCase#key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:credentials[1]/ns3:apiKeyCredentials[1]/@username</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUser"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUser" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#migrationEndpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>//migrateUserResponseType[1]/users[1]/id[1]</path><content>${#TestCase#userId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>//migrateUserResponseType[1]/users[1]/username[1]</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>//migrateUserResponseType[1]/users[1]/groups[1]/name[1]</path><content>Default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 3"><con:configuration><path>//migrateUserResponseType[1]/users[1]/groups[1]/id[1]</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 4"><con:configuration><path>//migrateUserResponseType[1]/users[1]/@comment</path><content>password:*****</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUser - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:user[1]/@username</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUser - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser GA V1.1 - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser GA V1.1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAadminuser}</con:username><con:password>${#TestSuite#GAadminpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserByName GA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserByName GA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#username}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserById GA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users/{user_id}" methodName="Get a User by ID - getUserById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserById GA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#userId}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate v2.0 GA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate v2.0 GA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate userAdmin V1.1 GA"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/auth" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate userAdmin V1.1 GA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:credentials key="${#TestCase#key}" username="${#TestCase#username}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UA token GA"><con:settings/><con:config><script>def GAtokenId = context.expand( '${POST authenticate userAdmin V1.1 GA#ResponseAsXml#declare namespace ns4=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns4:auth[1]/ns4:token[1]/@id}' )
log.info "GAtokenId - " + GAtokenId
testRunner.testCase.setPropertyValue("GAtokenId", GAtokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET validateUserAdminToken v1.1 GA - Xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET validateUserAdminToken v1.1 GA - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:token[1]/@userId</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAadminuser}</con:username><con:password>${#TestSuite#GAadminpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tokenId" value="${#TestCase#GAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET validateUserAdminToken v2.0 GA - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens/{tokenId}" methodName="Validate Token - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET validateUserAdminToken v2.0 GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#GAtokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET validateUserAdminToken v1.1 CA - Json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET validateUserAdminToken v1.1 CA - Json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:token[1]/@userId</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tokenId" value="${#TestCase#CAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET validateUserAdminToken v2.0 CA - Json"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens/{tokenId}" methodName="Validate Token - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET validateUserAdminToken v2.0 CA - Json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#CAtokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Compare User Responses V1.1" disabled="true"><con:settings/><con:config><script>def CAuserId = context.expand( '${POST authenticateUserAdmin V2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
def CAuserName=context.expand( '${POST authenticateUserAdmin V2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@name}' )
def CAuserRole = context.expand( '${POST authenticateUserAdmin V2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name}' )
def CAtenanatID = context.expand( '${POST authenticateUserAdmin V2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/ns1:tenant[1]/@id}' )
def CAmossoId = context.expand( '${GET getUser CA V1.1 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@mossoId}' )
def CAnastID = context.expand( '${GET getUser CA V1.1 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
def CAkey = context.expand( '${GET getUser CA V1.1 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@key}' )
def CAenabled = context.expand( '${GET getUser CA V1.1 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@enabled}' )

def responseAsXml = context.expand( '${POST authenticateUserAdmin V2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:serviceCatalog[1]}' )
def CArec = new XmlSlurper().parseText(responseAsXml)
def CAsize=CArec.service.size();
def type=[]
def name=[]
def tenanatId=[]
def publicUrl=[]
log.info CAsize;
for(i in 0..CAsize-1)
{
	type.add(CArec.service[i].'@type');	
	name.add(CArec.service[i].'@name');
	publicUrl.add(CArec.service[i].endpoint[0].'@publicURL')
	log.info CArec.service[i].endpoint[0].'@publicURL'
	tenanatId.add(CArec.service[i].endpoint[0].'@tenantId')
}

def GAuserId = context.expand( '${POST authenticate v2.0 GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@id}' )
def GAuserName = context.expand( '${POST authenticate v2.0 GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@name}' )
def GAtenatId = context.expand( '${POST authenticate v2.0 GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/ns7:tenant[1]/@id}' )
def RrolesGA = context.expand( '${POST authenticate v2.0 GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/ns7:roles[1]}' )
def GAkey = context.expand( '${GET getUser GA V1.1 - xml#ResponseAsXml#declare namespace ns4=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns4:user[1]/@key}' )
def GAenabled = context.expand( '${GET getUser GA V1.1 - xml#ResponseAsXml#declare namespace ns4=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns4:user[1]/@enabled}' )

assert(GAkey==CAkey);
assert(CAenabled==GAenabled);

def rolesGA=new XmlSlurper().parseText(RrolesGA);
def GAuserRoles=999;
def roleSize=rolesGA.role.size();
for(i in 0..roleSize-1)
{
	if(rolesGA.role[i].'@name'=='identity:user-admin')
	GAuserRoles=rolesGA.role[i].'@name';
}

assert (!(GAuserRoles==999));
def GAResAsXml = context.expand( '${POST authenticate v2.0 GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:serviceCatalog[1]}' )
def GArec = new XmlSlurper().parseText(GAResAsXml)
def GAsize=GArec.service.size();
log.info GAsize

assert CAuserId==GAuserId;
assert CAuserName==GAuserName;
assert CAtenanatID==GAtenatId;

assert CAuserRole=='identity:user-admin';
assert GAuserRoles=='identity:user-admin';

for(i in 0..GAsize-1)
{
	assert type.contains(GArec.service[i].'@type');	
	assert name.contains(GArec.service[i].'@name');
	assert publicUrl.contains(GArec.service[i].endpoint[0].'@publicURL')
	assert tenanatId.contains(GArec.service[i].endpoint[0].'@tenantId')
	
}

</script></con:config></con:testStep><con:testStep type="groovy" name="Compare getUser V1.1"><con:settings/><con:config><script>def getUser = context.expand( '${GET getUser CA V1.1 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]}' )
getUser = new XmlSlurper().parseText(getUser);
def CAuserId=getUser.'@id';
def CAmossoID=getUser.'@mossoId';
def CAnastID=getUser.'@nastId';
def CAkey=getUser.'@key';
def CAcreated=getUser.'@created';
def id=[]
def href=[]
def v1Default=[]
for(i in 0..getUser.baseURLRefs.baseURLRef.size()-1)
{
	id.add(getUser.baseURLRefs.baseURLRef[i].'@id');	
	href.add(getUser.baseURLRefs.baseURLRef[i].'@href');
	v1Default.add(getUser.baseURLRefs.baseURLRef[i].'@v1Default');
		
}

def GAuser = context.expand( '${GET getUser GA V1.1 - xml#ResponseAsXml#declare namespace ns4=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns4:user[1]}' )
GAuser = new XmlSlurper().parseText(GAuser);
def GAuserId=GAuser.'@id';
def GAmossoID=GAuser.'@mossoId';
def GAnastID=GAuser.'@nastId';
def GAkey=GAuser.'@key';
def GAcreated=GAuser.'@created';
for(i in 0..GAuser.baseURLRefs.baseURLRef.size()-1)
{
	assert id.contains(GAuser.baseURLRefs.baseURLRef[i].'@id');
	assert href.contains(GAuser.baseURLRefs.baseURLRef[i].'@href');
	assert v1Default.contains(GAuser.baseURLRefs.baseURLRef[i].'@v1Default');
}


</script></con:config></con:testStep><con:testStep type="groovy" name="Compare getUserByName V2.0"><con:settings/><con:config><script>def CAuser = context.expand( '${GET getUserByName CA V2.0 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]}' )
def GAuser = context.expand( '${GET getUserByName GA V2.0 - xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:user[1]}' )
CAuser = new XmlSlurper().parseText(CAuser);
GAuser = new XmlSlurper().parseText(GAuser);

assert (CAuser.'@username'==GAuser.'@username');
assert (CAuser.'@id'==GAuser.'@id');
assert (CAuser.'@enabled'==GAuser.'@enabled');
assert (CAuser.'@email'==GAuser.'@email');
assert (CAuser.'@ns3:defaultRegion	'==GAuser.'@@ns3:defaultRegion');
//assert (CAuser.'@created'==GAuser.'@created');
//assert (CAuser.'@updated'==GAuser.'@updated');
</script></con:config></con:testStep><con:testStep type="groovy" name="Compare getUserById V2.0"><con:settings/><con:config><script>def CAuser = context.expand( '${GET getUserAdminById CA V2.0 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]}' )
def GAuser = context.expand( '${GET getUserById GA V2.0 - xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:user[1]}' )

CAuser = new XmlSlurper().parseText(CAuser);
GAuser = new XmlSlurper().parseText(GAuser);

assert (CAuser.'@username'==GAuser.'@username');
assert (CAuser.'@id'==GAuser.'@id');
assert (CAuser.'@enabled'==GAuser.'@enabled');
assert (CAuser.'@email'==GAuser.'@email');
assert (CAuser.'@ns3:defaultRegion	'==GAuser.'@@ns3:defaultRegion');
//assert (CAuser.'@created'==GAuser.'@created');
//assert (CAuser.'@updated'==GAuser.'@updated');</script></con:config></con:testStep><con:testStep type="groovy" name="Compare Auth V1.1"><con:settings/><con:config><script>def CAuser = context.expand( '${POST authenticate userAdmin V1.1 CA#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]}' )
def GAuser = context.expand( '${POST authenticate userAdmin V1.1 GA#ResponseAsXml#declare namespace ns4=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns4:auth[1]/ns4:serviceCatalog[1]}' )

CAuser = new XmlSlurper().parseText(CAuser);
GAuser = new XmlSlurper().parseText(GAuser);

def name=[];
def publicUrl=[];
def v1Default=[];
for(i in 0..CAuser.service.size()-1)
{
	name.add(CAuser.service[i].'@name');
	publicUrl.add(CAuser.service[i].endpoint[0].'@publicURL');
	v1Default.add(CAuser.service[i].endpoint[0].'@v1Default');
}

for(i in 0..GAuser.service.size()-1)
{
	assert name.contains(GAuser.service[i].'@name');
	assert publicUrl.contains(GAuser.service[i].endpoint[0].'@publicURL');
	assert v1Default.contains(GAuser.service[i].endpoint[0].'@v1Default');
}</script></con:config></con:testStep><con:testStep type="groovy" name="Compare Auth V2.0"><con:settings/><con:config><script>def CAuser = context.expand( '${POST authenticateUserAdmin V2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]}' )
CAuser = new XmlSlurper().parseText(CAuser);

def tenId=CAuser.token.tenant.'@id';
def tenantName= CAuser.token.tenant.'@name';
def username= CAuser.user.'@name';
def rolesId=[];
def rolesName=[];
def rolesDesc=[];

def type=[];
def name=[];
def region=[];
def tenantId=[];
def publicUrl=[];
def internalUrl=[];
for(i in 0..CAuser.serviceCatalog.service.size()-1)
{
	type.add(CAuser.serviceCatalog.service[i].'@type');
	name.add(CAuser.serviceCatalog.service[i].'@name');
	region.add(CAuser.serviceCatalog.service[i].endpoint[0].'@region');
	tenantId.add(CAuser.serviceCatalog.service[i].endpoint[0].'@tenantId');
	publicUrl.add(CAuser.serviceCatalog.service[i].endpoint[0].'@publicURL');
	internalUrl.add(CAuser.serviceCatalog.service[i].endpoint[0].'@internalURL');
}

def GAuser = context.expand( '${POST authenticate v2.0 GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]}' )

GAuser = new XmlSlurper().parseText(GAuser);

def GAtenId=GAuser.token.tenant.'@id';
def GAtenantName= GAuser.token.tenant.'@name';
def GAusername= GAuser.user.'@name';
def GArolesId=[];
def GArolesName=[];
def GArolesDesc=[];
for(i in 0..GAuser.user.roles.role.size()-1)
{
	GArolesId.add(GAuser.user.roles.role[i].'@id');
	GArolesName.add(GAuser.user.roles.role[i].'@name');
	GArolesDesc.add(GAuser.user.roles.role[i].'@description');
}
for(i in 0..CAuser.user.roles.role.size()-1)
{
	assert GArolesId.contains(CAuser.user.roles.role[i].'@id');
	assert GArolesName.contains(CAuser.user.roles.role[i].'@name');
	//assert GArolesDesc.contains(CAuser.user.roles.role[i].'@description');
}
for(i in 0..GAuser.serviceCatalog.service.size()-1)
{
	assert type.contains(GAuser.serviceCatalog.service[i].'@type');
	assert name.contains(GAuser.serviceCatalog.service[i].'@name');
	assert region.contains(GAuser.serviceCatalog.service[i].endpoint[0].'@region');
	assert tenantId.contains(GAuser.serviceCatalog.service[i].endpoint[0].'@tenantId');
	assert publicUrl.contains(GAuser.serviceCatalog.service[i].endpoint[0].'@publicURL');
	assert internalUrl.contains(GAuser.serviceCatalog.service[i].endpoint[0].'@internalURL');
}

assert (GAtenId==tenId);
assert (GAtenantName==tenantName);
assert (GAusername==GAusername);


</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT disableUser - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/disable" methodName="disable" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT disableUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT enableDisabledUser - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/enable" methodName="enable" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT enableDisabledUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser GA - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Delete user - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser GA - xml" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE softDeleteUser"><con:settings/><con:config service="GA - SoftDelete" resourcePath="/${#Project#path2}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE softDeleteUser" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUserAdmin CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUserAdmin CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser CA- xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser CA- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteApplication"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/applications/{applicationId}" methodName="Delete an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteApplication" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="applicationId" value="${#TestCase#clientId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenIdApp}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>userName</con:name><con:value>migTestUA7106</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5802546</con:value></con:property><con:property><con:name>nastId</con:name><con:value>StagingUS_dd3b308b-94f9-43df-ba78-72c4ef77fad3</con:value></con:property><con:property><con:name>authuser</con:name><con:value>auth</con:value></con:property><con:property><con:name>authpass</con:name><con:value>auth123</con:value></con:property><con:property><con:name>userId</con:name><con:value>195075</con:value></con:property><con:property><con:name>migTestApp</con:name><con:value>migTestApp7</con:value></con:property><con:property><con:name>clientId</con:name><con:value>8b00e9c864014b0e60dfed6e45fbfd819ca7c932</con:value></con:property><con:property><con:name>clientSecret</con:name><con:value>449024acade67985e5393f9161e40c6a5debcfb9</con:value></con:property><con:property><con:name>rackerToken</con:name><con:value>8bb5eb0119e244b9b377d117c9fe95e7</con:value></con:property><con:property><con:name>CAtokenId</con:name><con:value>8acd9d40-8c52-491b-97dc-8a45cdf9cdc9</con:value></con:property><con:property><con:name>GAtokenId</con:name><con:value>471e90c43c104716b99e9d8309100ef0</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Migration - Negative" searchProperties="true" id="daa1d45a-fb6c-4442-b5f9-8c20a6f69cee" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST Authenticate auth CA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth CA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#authpass}" username="${#TestSuite#authuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[@id=1]/@id</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate auth GA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth GA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAadminpass}" username="${#TestSuite#GAadminuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@name</path><content>identity:admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST AuthenticateApplication - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST AuthenticateApplication - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth token"><con:settings/><con:config><script>def authtoken = context.expand( '${POST Authenticate auth CA#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )

log.info authtoken
testRunner.testCase.testSuite.setPropertyValue("authtokenCA", authtoken)


def tokenIdGA = context.expand( '${POST Authenticate auth GA#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )

log.info tokenIdGA
testRunner.testCase.testSuite.setPropertyValue("authtokenGA", tokenIdGA)

def tokenIdApp = context.expand( '${POST AuthenticateApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info tokenIdApp
testRunner.testCase.testSuite.setPropertyValue("tokenIdApp", tokenIdApp)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createApplication - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/applications" methodName="Add an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createApplication - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request>&lt;application customerId="RCN-987-654-321" description="Foundation Test App" name="${#TestCase#migTestApp}" xmlns="http://idm.api.rackspace.com/v1.0">&lt;roles/>&lt;/application></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@name</path><content>${#TestCase#migTestApp}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@customerId</path><content>RCN-987-654-321</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 3"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@description</path><content>Foundation Test App</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenIdApp}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store new App"><con:settings/><con:config><script>def clientId = context.expand( '${POST createApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/@clientId}' )
log.info clientId;
testRunner.testCase.setPropertyValue("clientId",clientId);

def clientSecret = context.expand( '${POST createApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/ns3:secretCredentials[1]/@clientSecret}' )
log.info clientSecret;
testRunner.testCase.setPropertyValue("clientSecret",clientSecret);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate Racker"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate Racker" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request>&lt;rackerCredentials password="${#Project#rackerPwd}" username="${#Project#rackerUser}" client_secret="${#TestCase#clientSecret}" client_id="${#TestCase#clientId}" grant_type="PASSWORD" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:auth[1]/ns3:racker[1]/@username</path><content>${#Project#rackerUser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store Racker TOken"><con:settings/><con:config><script>def rackerToken = context.expand( '${POST authenticate Racker#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )

log.info rackerToken;
testRunner.testCase.testSuite.setPropertyValue("rackerToken",rackerToken);</script></con:config></con:testStep><con:testStep type="groovy" name="Create Username"><con:settings/><con:config><script>Random r = new Random();
//log.info r.nextInt(10000);
testRunner.testCase.setPropertyValue("username", "migTestUA"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("username");</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#username}" key="${#TestCase#key}" mossoId="${#TestCase#MossoId}" nastId="${#TestCase#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser CA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser CA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#userName}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser CA V1.1 - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser CA V1.1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store userId"><con:settings/><con:config><script>
def userId = context.expand( '${GET getUser CA V2.0 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
def nastId = context.expand( '${POST - createUser - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
def timeCreated = context.expand( '${GET getUser CA V2.0 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@created}' )

log.info "get nast ID - " + nastId
testRunner.testCase.setPropertyValue("nastId", nastId)
log.info "get user ID - " + userId
testRunner.testCase.setPropertyValue("userId", userId)
log.info "get time Created - " + timeCreated
testRunner.testCase.setPropertyValue("timeCreated", timeCreated)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUser v2.0 CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUser v2.0 CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUser 404 - xml GA"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUser 404 - xml GA" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==404
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUser /w badUserName 404 - xml GA"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUser /w badUserName 404 - xml GA" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==404
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="wrongUsername"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateBadUser 404"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateBadUser 404" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==404
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns15='http://fault.common.api.rackspace.com/v1.0';
//ns15:itemNotFound[1]/message[1]</path><content>User with username ${#TestCase#username}wrong could not be found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}wrong"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT disableUser - xml" disabled="true"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}/OS-KSADM/enabled" methodName="Set user enabled. - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT disableUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>&lt;v2:user enabled="false" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@enabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT disableUser - Xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT disableUser - Xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="false" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="delay"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUser /w own Token 401"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUser /w own Token 401" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns15='http://fault.common.api.rackspace.com/v1.0';
//ns15:unauthorized[1]/message[1]</path><content>Authentication Failed.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${POST authenticateUser v2.0 CA -xml#ResponseAsXml#declare namespace ns1='http://docs.openstack.org/identity/api/v2.0'; //ns1:access[1]/ns1:token[1]/@id}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUser /w badAuthToken 401"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUser /w badAuthToken 401" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns15='http://fault.common.api.rackspace.com/v1.0';
//ns15:unauthorized[1]/message[1]</path><content>Authentication Failed.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}bad"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUser /w auth Token 401"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUser /w auth Token 401" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns15='http://fault.common.api.rackspace.com/v1.0';
//ns15:unauthorized[1]/message[1]</path><content>Authentication Failed.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUser /w RackerToken 200"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUser /w RackerToken 200" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>//migrateUserResponseType[1]/users[1]/@comment</path><content>password:*****</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay" disabled="true"><con:settings/><con:config><delay>5000</delay></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate GA 403 -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate GA 403 -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==403
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User '${#TestCase#username}' is disabled.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT enableUser - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Update user - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT enableUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>&lt;v2:user created="${#TestCase#timeCreated}" display-name="${#TestCase#username}" email="test@test.com" enabled="true" id="${#TestCase#userId}" updated="" username="${#TestCase#username}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateMigratedUser 409"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateMigratedUser 409" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==409
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>A user with username ${#TestCase#username} already exists.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay 1" disabled="true"><con:settings/><con:config><delay>15000</delay></con:config></con:testStep><con:testStep type="restrequest" name="PUT disableMigratedUser - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/disable" methodName="disable" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT disableMigratedUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT disableDisabledUser - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/disable" methodName="disable" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT disableDisabledUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT enableMigratedUser - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/enable" methodName="enable" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT enableMigratedUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT enableEnabledUser - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/enable" methodName="enable" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT enableEnabledUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUser /w badToken 401 - xml GA"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUser /w badToken 401 - xml GA" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}bad"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUser /w badUserName 401 - xml GA"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUser /w badUserName 401 - xml GA" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==404
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}bad"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUser - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:user[1]/@username</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:user[1]/@id</path><content>${#TestCase#userId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser GA V1.1 - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser GA V1.1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAadminuser}</con:username><con:password>${#TestSuite#GAadminpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser GA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser GA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#userName}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate GA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate GA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Compare User Responses"><con:settings/><con:config><script>def CAuserId = context.expand( '${POST authenticateUser v2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
def CAuserName = context.expand( '${POST authenticateUser v2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@name}' )
def CAuserRole = context.expand( '${POST authenticateUser v2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name}' )
def CAtenanatID = context.expand( '${POST authenticateUser v2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/ns1:tenant[1]/@id}' )

def responseAsXml = context.expand( '${POST authenticateUser v2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:serviceCatalog[1]}' )
def CArec = new XmlSlurper().parseText(responseAsXml)
def CAsize=CArec.service.size();
def type=[]
def name=[]
def tenanatId=[]
def publicUrl=[]
log.info CAsize;
for(i in 0..CAsize-1)
{
	type.add(CArec.service[i].'@type');	
	name.add(CArec.service[i].'@name');
	publicUrl.add(CArec.service[i].endpoint[0].'@publicURL')
	tenanatId.add(CArec.service[i].endpoint[0].'@tenantId')
}

def GAuserId = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@id}' )
def GAuserName = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@name}' )
def GAtenatId = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/ns7:tenant[1]/@id}' )
def GAuserRoles = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[3]/@name}' )
def GAResAsXml = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:serviceCatalog[1]}' )
def GArec = new XmlSlurper().parseText(GAResAsXml)
def GAsize=GArec.service.size();

assert CAuserId==GAuserId;
assert CAuserName==GAuserName;
assert CAtenanatID==GAtenatId;
//assert CAuserRole==GAuserRoles;

assert GAsize==CAsize;

for(i in 0..GAsize-1)
{
	//log.info  i + "CA:"+ GArec.service[i].'@type'   + " GA:"+ type.get(i);
	assert type.contains(GArec.service[i].'@type');	
	assert name.contains(GArec.service[i].'@name');
	assert publicUrl.contains(GArec.service[i].endpoint[0].'@publicURL')
	assert tenanatId.contains(GArec.service[i].endpoint[0].'@tenantId')
	
}

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateUse -xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateUse -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser 405 - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser 405 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 405

def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE softDeleteUser 404"><con:settings/><con:config service="GA - SoftDelete" resourcePath="/${#Project#path2}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE softDeleteUser 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser CA- xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser CA- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteApplication"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/applications/{applicationId}" methodName="Delete an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteApplication" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="applicationId" value="${#TestCase#clientId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenIdApp}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>migTestUA7802</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>mossoId</con:name><con:value>5800373</con:value></con:property><con:property><con:name>nastId</con:name><con:value>StagingUS_d40e6938-64f7-4017-956d-fb4fd25e111d</con:value></con:property><con:property><con:name>userId</con:name><con:value>195050</con:value></con:property><con:property><con:name>timeCreated</con:name><con:value>2012-07-06T15:26:21.000-05:00</con:value></con:property><con:property><con:name>migTestApp</con:name><con:value>migTestApp</con:value></con:property><con:property><con:name>clientId</con:name><con:value>09db84a13cf887b3633f825bbb4d35be65e4f27d</con:value></con:property><con:property><con:name>clientSecret</con:name><con:value>ba53be2164ed63c48fbfd7ac3b82c17d75665b0e</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="Unmigrate - Positive" searchProperties="true" id="c20fb8b9-bdf0-418a-b47a-fc43106b2a31" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST Authenticate auth CA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth CA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#authpass}" username="${#TestSuite#authuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[@id=1]/@id</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate auth GA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth GA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAadminpass}" username="${#TestSuite#GAadminuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@name</path><content>identity:admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST AuthenticateApplication - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST AuthenticateApplication - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth token"><con:settings/><con:config><script>def authtoken = context.expand( '${POST Authenticate auth CA#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )

log.info authtoken
testRunner.testCase.testSuite.setPropertyValue("authtokenCA", authtoken)


def tokenIdGA = context.expand( '${POST Authenticate auth GA#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )

log.info tokenIdGA
testRunner.testCase.testSuite.setPropertyValue("authtokenGA", tokenIdGA)

def tokenIdApp = context.expand( '${POST AuthenticateApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info tokenIdApp
testRunner.testCase.testSuite.setPropertyValue("tokenIdApp", tokenIdApp)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createApplication - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/applications" methodName="Add an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createApplication - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request>&lt;application customerId="RCN-987-654-321" description="Foundation Test App" name="${#TestCase#migTestApp}" xmlns="http://idm.api.rackspace.com/v1.0">&lt;roles/>&lt;/application></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@name</path><content>${#TestCase#migTestApp}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@customerId</path><content>RCN-987-654-321</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 3"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@description</path><content>Foundation Test App</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenIdApp}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store new App"><con:settings/><con:config><script>def clientId = context.expand( '${POST createApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/@clientId}' )
log.info clientId;
testRunner.testCase.setPropertyValue("clientId",clientId);

def clientSecret = context.expand( '${POST createApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/ns3:secretCredentials[1]/@clientSecret}' )
log.info clientSecret;
testRunner.testCase.setPropertyValue("clientSecret",clientSecret);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate Racker"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate Racker" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request>&lt;rackerCredentials password="${#Project#rackerPwd}" username="${#Project#rackerUser}" client_secret="${#TestCase#clientSecret}" client_id="${#TestCase#clientId}" grant_type="PASSWORD" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:auth[1]/ns3:racker[1]/@username</path><content>${#Project#rackerUser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store Racker TOken"><con:settings/><con:config><script>def rackerToken = context.expand( '${POST authenticate Racker#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )

log.info rackerToken;
testRunner.testCase.testSuite.setPropertyValue("rackerToken",rackerToken);</script></con:config></con:testStep><con:testStep type="groovy" name="Create Username"><con:settings/><con:config><script>Random r = new Random();
//log.info r.nextInt(10000);
testRunner.testCase.setPropertyValue("username", "migTestUA_"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("username");</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#username}" key="${#TestCase#key}" mossoId="${#TestCase#MossoId}" nastId="${#TestCase#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser CA V1.1 - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser CA V1.1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserByName CA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserByName CA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#userName}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store userId"><con:settings/><con:config><script>
def userId = context.expand( '${GET getUserByName CA V2.0 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
def nastId = context.expand( '${POST - createUser - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
def timeCreated = context.expand( '${GET getUserByName CA V2.0 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@created}' )

log.info "get nast ID - " + nastId
testRunner.testCase.setPropertyValue("nastId", nastId)
log.info "get user ID - " + userId
testRunner.testCase.setPropertyValue("userId", userId)
log.info "get time Created - " + timeCreated
testRunner.testCase.setPropertyValue("timeCreated", timeCreated)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdminById CA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users/{user_id}" methodName="Get a User by ID - getUserById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdminById CA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#username}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate userAdmin V1.1 CA"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/auth" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate userAdmin V1.1 CA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:credentials key="${#TestCase#key}" username="${#TestCase#username}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUser v2.0 CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUser v2.0 CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUser"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUser" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>//migrateUserResponseType[1]/users[1]/@valid</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>//migrateUserResponseType[1]/users[1]/username[1]</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUser - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUser - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUser - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate GA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate GA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UA token GA"><con:settings/><con:config><script>def GAtokenId = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info "GAtokenId - " + GAtokenId
testRunner.testCase.setPropertyValue("GAtokenId", GAtokenId)</script></con:config></con:testStep><con:testStep type="groovy" name="Compare User Responses"><con:settings/><con:config><script>def CAuserId = context.expand( '${POST authenticateUser v2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
def CAuserName = context.expand( '${POST authenticateUser v2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@name}' )
def CAuserRole = context.expand( '${POST authenticateUser v2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name}' )
def CAtenanatID = context.expand( '${POST authenticateUser v2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/ns1:tenant[1]/@id}' )

def responseAsXml = context.expand( '${POST authenticateUser v2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:serviceCatalog[1]}' )
def CArec = new XmlSlurper().parseText(responseAsXml)
def CAsize=CArec.service.size();
def type=[]
def name=[]
def tenanatId=[]
def publicUrl=[]
log.info CAsize;
for(i in 0..CAsize-1)
{
	type.add(CArec.service[i].'@type');	
	name.add(CArec.service[i].'@name');
	publicUrl.add(CArec.service[i].endpoint[0].'@publicURL')
	tenanatId.add(CArec.service[i].endpoint[0].'@tenantId')
}

def GAuserId = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@id}' )
def GAuserName = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@name}' )
def GAtenatId = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/ns7:tenant[1]/@id}' )
def GAuserRoles = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[3]/@name}' )
def GAResAsXml = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:serviceCatalog[1]}' )
def GArec = new XmlSlurper().parseText(GAResAsXml)
def GAsize=GArec.service.size();

//assert CAuserId==GAuserId;
assert CAuserName==GAuserName;
assert CAtenanatID==GAtenatId;
assert CAuserRole==GAuserRoles;

assert GAsize==CAsize;

for(i in 0..GAsize-1)
{
	//log.info  i + "CA:"+ GArec.service[i].'@type'   + " GA:"+ type.get(i);
	assert type.contains(GArec.service[i].'@type');	
	assert name.contains(GArec.service[i].'@name');
	assert publicUrl.contains(GArec.service[i].endpoint[0].'@publicURL')
	assert tenanatId.contains(GArec.service[i].endpoint[0].'@tenantId')
	
}

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST unimigrateUser -xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unimigrateUser -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET validateUserAdminGAToken v1.1 401 - Xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/token/{tokenId}" methodName="GET - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET validateUserAdminGAToken v1.1 401 - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAauthuser}</con:username><con:password>${#TestSuite#GAauthpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tokenId" value="${#TestCase#GAtokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET validateUserAdminGAToken v2.0 404 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens/{tokenId}" methodName="Validate Token - validateToken" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET validateUserAdminGAToken v2.0 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#GAtokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser CA V1.1 - Xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser CA V1.1 - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserByName CA V2.0 - Xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserByName CA V2.0 - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#userName}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdminById CA V2.0 - Xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users/{user_id}" methodName="Get a User by ID - getUserById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdminById CA V2.0 - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#username}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate userAdmin V1.1 CA - Xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/auth" methodName="POST - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate userAdmin V1.1 CA - Xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:credentials key="${#TestCase#key}" username="${#TestCase#username}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUser v2.0 CA - Xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUser v2.0 CA - Xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Compare getUser v1.1"><con:settings/><con:config><script>def CAuser = context.expand( '${GET getUser CA V1.1 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]}' )
def getUser = new XmlSlurper().parseText(CAuser);

def CAuserId=getUser.'@id';
def CAmossoID=getUser.'@mossoId';
def CAnastID=getUser.'@nastId';
def CAkey=getUser.'@key';
def CAcreated=getUser.'@created';
def id=[]
def href=[]
def v1Default=[]
for(i in 0..getUser.baseURLRefs.baseURLRef.size()-1)
{
	id.add(getUser.baseURLRefs.baseURLRef[i].'@id');	
	href.add(getUser.baseURLRefs.baseURLRef[i].'@href');
	v1Default.add(getUser.baseURLRefs.baseURLRef[i].'@v1Default');
		
}

def CCAuser = context.expand( '${GET getUser CA V1.1 - Xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]}' )

CCAuser = new XmlSlurper().parseText(CCAuser);

def CCAuserId=CCAuser.'@id';
def CCAmossoID=CCAuser.'@mossoId';
def CCAnastID=CCAuser.'@nastId';
def CCAkey=CCAuser.'@key';
def CCAcreated=CCAuser.'@created';

assert (CCAuserId==CAuserId);
assert (CCAmossoID==CAmossoID);
assert (CCAnastID==CAnastID);
assert (CCAkey==CAkey);
assert (CCAcreated==CAcreated);
for(i in 0..CCAuser.baseURLRefs.baseURLRef.size()-1)
{
	id.contains(CCAuser.baseURLRefs.baseURLRef[i].'@id');
	href.contains(CCAuser.baseURLRefs.baseURLRef[i].'@href');
	v1Default.contains(CCAuser.baseURLRefs.baseURLRef[i].'@v1Default');	
}</script></con:config></con:testStep><con:testStep type="groovy" name="Compare authUser v1.1"><con:settings/><con:config><script>def CAuser = context.expand( '${POST authenticate userAdmin V1.1 CA#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]}' )
CAuser = new XmlSlurper().parseText(CAuser);
def CCAuser = context.expand( '${POST authenticate userAdmin V1.1 CA - Xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:auth[1]/ns1:serviceCatalog[1]}' )
CCAuser= new XmlSlurper().parseText(CCAuser);

def name=[];
def publicUrl=[];
def v1Default=[];
for(i in 0..CAuser.service.size()-1)
{
	name.add(CAuser.service[i].'@name');
	publicUrl.add(CAuser.service[i].endpoint[0].'@publicURL');
	v1Default.add(CAuser.service[i].endpoint[0].'@v1Default');
}

for(i in 0..CCAuser.service.size()-1)
{
	assert name.contains(CCAuser.service[i].'@name');
	assert publicUrl.contains(CCAuser.service[i].endpoint[0].'@publicURL');
	log.info CCAuser.service[i].endpoint[0].'@publicURL';
	assert v1Default.contains(CCAuser.service[i].endpoint[0].'@v1Default');
}
</script></con:config></con:testStep><con:testStep type="groovy" name="Compare authUser v2.0"><con:settings/><con:config><script>def CAuser = context.expand( '${POST authenticateUser v2.0 CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]}' )
CAuser = new XmlSlurper().parseText(CAuser);

def tenId=CAuser.token.tenant.'@id';
def tenantName= CAuser.token.tenant.'@name';
def username= CAuser.user.'@name';


def type=[];
def name=[];
def region=[];
def tenantId=[];
def publicUrl=[];
def internalUrl=[];

for(i in 0..CAuser.serviceCatalog.service.size()-1)
{
	type.add(CAuser.serviceCatalog.service[i].'@type');
	name.add(CAuser.serviceCatalog.service[i].'@name');
	region.add(CAuser.serviceCatalog.service[i].endpoint[0].'@region');
	tenantId.add(CAuser.serviceCatalog.service[i].endpoint[0].'@tenantId');
	publicUrl.add(CAuser.serviceCatalog.service[i].endpoint[0].'@publicURL');
	internalUrl.add(CAuser.serviceCatalog.service[i].endpoint[0].'@internalURL');
}


def CCAuser = context.expand( '${POST authenticateUser v2.0 CA - Xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]}' )
CCAuser = new XmlSlurper().parseText(CCAuser);
def CAtenId=CAuser.token.tenant.'@id';
def CAtenantName= CAuser.token.tenant.'@name';
def CAusername= CAuser.user.'@name';
def CArolesId=[];
def CArolesName=[];
def CArolesDesc=[];

assert (CAtenId==tenId);
assert (CAtenantName==tenantName);
assert (CAusername==username);

for(i in 0..CCAuser.serviceCatalog.service.size()-1)
{
	type.contains(CCAuser.serviceCatalog.service[i].'@type');
	name.contains(CCAuser.serviceCatalog.service[i].'@name');
	region.contains(CCAuser.serviceCatalog.service[i].endpoint[0].'@region');
	tenantId.contains(CCAuser.serviceCatalog.service[i].endpoint[0].'@tenantId');
	publicUrl.contains(CCAuser.serviceCatalog.service[i].endpoint[0].'@publicURL');
	internalUrl.contains(CCAuser.serviceCatalog.service[i].endpoint[0].'@internalURL');
}
</script></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteApplication"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/applications/{applicationId}" methodName="Delete an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteApplication" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="applicationId" value="${#TestCase#clientId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenIdApp}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>migTestUA_577</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>mossoId</con:name><con:value>5800717</con:value></con:property><con:property><con:name>nastId</con:name><con:value>StagingUS_45193e52-e03c-49fc-abff-a2ee1170bc52</con:value></con:property><con:property><con:name>userId</con:name><con:value>195054</con:value></con:property><con:property><con:name>timeCreated</con:name><con:value>2012-07-06T15:32:47.000-05:00</con:value></con:property><con:property><con:name>migTestApp</con:name><con:value>migTestApp</con:value></con:property><con:property><con:name>clientId</con:name><con:value>09db84a13cf887b3633f825bbb4d35be65e4f27d</con:value></con:property><con:property><con:name>clientSecret</con:name><con:value>29cd4bba5e0c1b7fbd99545b470354bf8ab4cdab</con:value></con:property><con:property><con:name>GAtokenId</con:name><con:value>f4e085e8fec14a5990834e420cbf626b</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Unmigrate - negative" searchProperties="true" id="3a2348ae-2e93-4d62-932d-c6964afb8f08" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST Authenticate auth CA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth CA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#authpass}" username="${#TestSuite#authuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[@id=1]/@id</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate auth GA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth GA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAadminpass}" username="${#TestSuite#GAadminuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@name</path><content>identity:admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST AuthenticateApplication - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST AuthenticateApplication - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth token"><con:settings/><con:config><script>def authtoken = context.expand( '${POST Authenticate auth CA#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )

log.info authtoken
testRunner.testCase.testSuite.setPropertyValue("authtokenCA", authtoken)
def tokenIdGA = context.expand( '${POST Authenticate auth GA#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )

log.info tokenIdGA
testRunner.testCase.testSuite.setPropertyValue("authtokenGA", tokenIdGA)

def tokenIdApp = context.expand( '${POST AuthenticateApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info tokenIdApp
testRunner.testCase.testSuite.setPropertyValue("tokenIdApp",tokenIdApp);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createApplication - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/applications" methodName="Add an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createApplication - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;application customerId="RCN-987-654-321" description="Foundation Test App" name="${#TestCase#migTestApp}" xmlns="http://idm.api.rackspace.com/v1.0">&lt;roles/>&lt;/application></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@name</path><content>${#TestCase#migTestApp}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@customerId</path><content>RCN-987-654-321</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 3"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@description</path><content>Foundation Test App</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenIdApp}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store new App"><con:settings/><con:config><script>def clientId = context.expand( '${POST createApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/@clientId}' )
log.info clientId;
testRunner.testCase.setPropertyValue("clientId",clientId);

def clientSecret = context.expand( '${POST createApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/ns3:secretCredentials[1]/@clientSecret}' )
log.info clientSecret;
testRunner.testCase.setPropertyValue("clientSecret",clientSecret);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate Racker"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate Racker" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;rackerCredentials password="${#Project#rackerPwd}" username="${#Project#rackerUser}" client_secret="${#TestCase#clientSecret}" client_id="${#TestCase#clientId}" grant_type="PASSWORD" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#FoundEndPoint}/${#Project#foundationPath}/tokens';
//ns1:Response[1]/ns1:auth[1]/ns1:racker[1]/ns1:username[1]</path><content>${#Project#rackerUser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store Racker TOken"><con:settings/><con:config><script>def rackerToken = context.expand( '${POST authenticate Racker#ResponseAsXml#declare namespace ns1=\'${#Project#FoundEndPoint}/${#Project#foundationPath}/tokens\'; //ns1:Response[1]/ns1:auth[1]/ns1:access_token[1]/ns1:id[1]}' )



log.info rackerToken;
testRunner.testCase.testSuite.setPropertyValue("rackerToken",rackerToken);</script></con:config></con:testStep><con:testStep type="groovy" name="Create Username"><con:settings/><con:config><script>Random r = new Random();
//log.info r.nextInt(10000);
testRunner.testCase.setPropertyValue("username", "migTestUA_"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("username");</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#username}" key="${#TestCase#key}" mossoId="${#TestCase#MossoId}" nastId="${#TestCase#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser CA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser CA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#userName}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store userId"><con:settings/><con:config><script>
def userId = context.expand( '${GET getUser CA V2.0 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
def nastId = context.expand( '${POST - createUser - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:user[1]/@nastId}' )
def timeCreated = context.expand( '${GET getUser CA V2.0 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@created}' )

log.info "get nast ID - " + nastId
testRunner.testCase.setPropertyValue("nastId", nastId)
log.info "get user ID - " + userId
testRunner.testCase.setPropertyValue("userId", userId)
log.info "get time Created - " + timeCreated
testRunner.testCase.setPropertyValue("timeCreated", timeCreated)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUser CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUser CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unimigrateUser 404"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unimigrateUser 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUser"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUser" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUser - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUser - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUser - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate GA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate GA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Compare User Responses"><con:settings/><con:config><script>def CAuserId = context.expand( '${POST authenticateUser CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
def CAuserName = context.expand( '${POST authenticateUser CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@name}' )
def CAuserRole = context.expand( '${POST authenticateUser CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name}' )
def CAtenanatID = context.expand( '${POST authenticateUser CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/ns1:tenant[1]/@id}' )

def responseAsXml = context.expand( '${POST authenticateUser CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:serviceCatalog[1]}' )
def CArec = new XmlSlurper().parseText(responseAsXml)
def CAsize=CArec.service.size();
def type=[]
def name=[]
def tenanatId=[]
def publicUrl=[]
log.info CAsize;
for(i in 0..CAsize-1)
{
	type.add(CArec.service[i].'@type');	
	name.add(CArec.service[i].'@name');
	publicUrl.add(CArec.service[i].endpoint[0].'@publicURL')
	tenanatId.add(CArec.service[i].endpoint[0].'@tenantId')
}

def GAuserId = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@id}' )
def GAuserName = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@name}' )
def GAtenatId = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/ns7:tenant[1]/@id}' )
def GAuserRoles = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[3]/@name}' )
def GAResAsXml = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:serviceCatalog[1]}' )
def GArec = new XmlSlurper().parseText(GAResAsXml)
def GAsize=GArec.service.size();

assert CAuserId==GAuserId;
assert CAuserName==GAuserName;
assert CAtenanatID==GAtenatId;
//assert CAuserRole==GAuserRoles;

assert GAsize==CAsize;

for(i in 0..GAsize-1)
{
	//log.info  i + "CA:"+ GArec.service[i].'@type'   + " GA:"+ type.get(i);
	assert type.contains(GArec.service[i].'@type');	
	assert name.contains(GArec.service[i].'@name');
	assert publicUrl.contains(GArec.service[i].endpoint[0].'@publicURL')
	assert tenanatId.contains(GArec.service[i].endpoint[0].'@tenantId')
	
}

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST unimigrateBadUser 404"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unimigrateBadUser 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns15='http://fault.common.api.rackspace.com/v1.0';
//ns15:itemNotFound[1]/message[1]</path><content>User not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}bad"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unimigrateUser /w own token 401"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unimigrateUser /w own token 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns15='http://fault.common.api.rackspace.com/v1.0';
//ns15:unauthorized[1]/message[1]</path><content>Authentication Failed.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7='http://docs.openstack.org/identity/api/v2.0'; //ns7:access[1]/ns7:token[1]/@id}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unimigrateUser /w auth token 401"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unimigrateUser /w auth token 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns15='http://fault.common.api.rackspace.com/v1.0';
//ns15:unauthorized[1]/message[1]</path><content>Authentication Failed.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unimigrateUser /w badAuthToken 401"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unimigrateUser /w badAuthToken 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns15='http://fault.common.api.rackspace.com/v1.0';
//ns15:unauthorized[1]/message[1]</path><content>Authentication Failed.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}bad"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT disableUser v2.0 GA - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Update user - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT disableUser v2.0 GA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>&lt;v2:user created="${#TestCase#timeCreated}" display-name="${#TestCase#username}" email="test@test.com" enabled="false" id="${#TestCase#userId}" updated="" username="${#TestCase#username}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@enabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unimigrateUser"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unimigrateUser" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unimigrateUserAgain 404"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unimigrateUserAgain 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns15='http://fault.common.api.rackspace.com/v1.0';
//ns15:itemNotFound[1]/message[1]</path><content>User not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteApplication"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/applications/{applicationId}" methodName="Delete an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteApplication" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="applicationId" value="${#TestCase#clientId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenIdApp}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>migTestUA_8188</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>mossoId</con:name><con:value>5800715</con:value></con:property><con:property><con:name>nastId</con:name><con:value>StagingUS_a7336e1a-51c5-482b-946e-74cc4a1299e5</con:value></con:property><con:property><con:name>userId</con:name><con:value>195058</con:value></con:property><con:property><con:name>timeCreated</con:name><con:value>2012-07-06T15:34:56.000-05:00</con:value></con:property><con:property><con:name>migTestApp</con:name><con:value>migTestApp</con:value></con:property><con:property><con:name>clientId</con:name><con:value>09db84a13cf887b3633f825bbb4d35be65e4f27d</con:value></con:property><con:property><con:name>clientSecret</con:name><con:value>d04c98eed3d416ba96b84ca0a813799488460bcf</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="Migration AutoPassword" searchProperties="true" id="35ca8442-b48f-4dd3-be2c-83e706807bb1" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST Authenticate auth CA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth CA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#authpass}" username="${#TestSuite#authuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[@id=1]/@id</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate auth GA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth GA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAadminpass}" username="${#TestSuite#GAadminuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST AuthenticateApplication - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST AuthenticateApplication - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth token"><con:settings/><con:config><script>def authtoken = context.expand( '${POST Authenticate auth CA#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )

log.info authtoken
assert (authtoken!="");
testRunner.testCase.testSuite.setPropertyValue("authtokenCA", authtoken)
def tokenIdGA = context.expand( '${POST Authenticate auth GA#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )

log.info tokenIdGA
assert (tokenIdGA!="");
testRunner.testCase.testSuite.setPropertyValue("authtokenGA", tokenIdGA)

def tokenIdApp = context.expand( '${POST AuthenticateApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info tokenIdApp
assert (tokenIdApp!="");
testRunner.testCase.testSuite.setPropertyValue("tokenIdApp", tokenIdApp)

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createApplication - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/applications" methodName="Add an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createApplication - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;application customerId="RCN-987-654-321" description="Foundation Test App" name="${#TestCase#migTestApp}" xmlns="http://idm.api.rackspace.com/v1.0">&lt;roles/>&lt;/application></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@name</path><content>${#TestCase#migTestApp}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@customerId</path><content>RCN-987-654-321</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 3"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@description</path><content>Foundation Test App</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenIdApp}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store new App"><con:settings/><con:config><script>def clientId = context.expand( '${POST createApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/@clientId}' )
log.info clientId;
testRunner.testCase.setPropertyValue("clientId",clientId);

def clientSecret = context.expand( '${POST createApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/ns3:secretCredentials[1]/@clientSecret}' )
log.info clientSecret;
testRunner.testCase.setPropertyValue("clientSecret",clientSecret);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate Racker"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate Racker" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;rackerCredentials password="${#Project#rackerPwd}" username="${#Project#rackerUser}" client_secret="${#TestCase#clientSecret}" client_id="${#TestCase#clientId}" grant_type="PASSWORD" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#FoundEndPoint}/${#Project#foundationPath}/tokens';
//ns1:Response[1]/ns1:auth[1]/ns1:racker[1]/ns1:username[1]</path><content>${#Project#rackerUser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store Racker Token"><con:settings/><con:config><script>def rackerToken = context.expand( '${POST authenticate Racker#ResponseAsXml#declare namespace ns1=\'${#Project#FoundEndPoint}/${#Project#foundationPath}/tokens\'; //ns1:Response[1]/ns1:auth[1]/ns1:access_token[1]/ns1:id[1]}' )

log.info rackerToken;
testRunner.testCase.testSuite.setPropertyValue("rackerToken",rackerToken);</script></con:config></con:testStep><con:testStep type="groovy" name="Create Usernames"><con:settings/><con:config><script>Random r = new Random();
//log.info r.nextInt(10000);
testRunner.testCase.setPropertyValue("username", "migTestUA"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("username");

testRunner.testCase.setPropertyValue("DUusername", "migTestDU"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("DUusername");


def req='&lt;v1:user enabled="true" id="'+testRunner.testCase.getPropertyValue("username")+'" key="ba04b108b7cefcbcbf7c4d8bd05e3857" mossoId="5800717" nastId="StagingUS_50b956da-f6d5-488e-9c21-3d05ccd666d4" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/>'
testRunner.testCase.testSteps["POST - createUser - xml"].setPropertyValue("Request", req)
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="migTestUA3940" key="ba04b108b7cefcbcbf7c4d8bd05e3857" mossoId="5800717" nastId="StagingUS_50b956da-f6d5-488e-9c21-3d05ccd666d4" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUser CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUser CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store userId"><con:settings/><con:config><script>
def userId = context.expand( '${POST authenticateUser CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get nast ID - " + userId
testRunner.testCase.setPropertyValue("userId", userId)

def tokenId = context.expand( '${POST authenticateUser CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
testRunner.testCase.setPropertyValue("tokenId", tokenId)
log.info tokenId</script></con:config></con:testStep><con:testStep type="groovy" name="add req"><con:settings/><con:config><script>//{"user": { "username": "ga1subuser1", "email": "test@rackspace.com", "enabled": true} } 186441
def jsonReq = '{"user": { "username": "${#TestCase#DUusername}", "email": "test@rack.com", "enabled": true, "Password":"test123"} }'

//set request
testRunner.testCase.testSteps["POST createDefaultUser /w pwd - json"].setPropertyValue("Request", jsonReq)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createDefaultUser /w pwd - json"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createDefaultUser /w pwd - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>{"user": { "username": "${#TestCase#DUusername}", "email": "test@rack.com", "enabled": true, "Password":"test123"} }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store defaultUser"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

def responseAsXml = context.expand( '${POST createDefaultUser /w pwd - json#Response}' );
def jsonRes = new JsonSlurper().parseText(responseAsXml);
def userId= jsonRes.'user'.id;
testRunner.testCase.setPropertyValue("DUuserId",userId);
log.info userId;

def pwd= jsonRes.'user'.'OS-KSADM:password';
testRunner.testCase.setPropertyValue("DUuserPwd",pwd);
log.info pwd;

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUserAdmin CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUserAdmin CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate DU /w pwd - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate DU /w pwd - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUuserPwd}" username="${#TestCase#DUusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="ApiKey DU"><con:configuration><path>//migrateUserResponseType[1]/users[1]/apiKey[1]</path><content>*****</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Password DU"><con:configuration><path>//migrateUserResponseType[1]/users[1]/password[1]</path><content>*****</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Secret Q"><con:configuration><path>//migrateUserResponseType[1]/users[1]/secretQuestion[1]</path><content>*****</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="secret A"><con:configuration><path>//migrateUserResponseType[1]/users[1]/secretAnswer[1]</path><content>*****</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="secret A UA"><con:configuration><path>//migrateUserResponseType[1]/users[1]/secretQuestion[1]</path><content>*****</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Secret Q UA"><con:configuration><path>//migrateUserResponseType[1]/users[2]/secretQuestion[1]</path><content>*****</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Password UA"><con:configuration><path>//migrateUserResponseType[1]/users[2]/password[1]</path><content>*****</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="ApiKey UA"><con:configuration><path>//migrateUserResponseType[1]/users[2]/apiKey[1]</path><content>*****</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedDefaultUser - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedDefaultUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedDefaultUser - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedDefaultUser - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET listDefaultUserCredential - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials - listCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET listDefaultUserCredential - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:credentials[1]/ns7:passwordCredentials[1]/@password</path><content>${#TestCase#DUuserPwd}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET listUserAdminCredential - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials - listCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET listUserAdminCredential - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:credentials[1]/ns3:apiKeyCredentials[1]/@apiKey</path><content>${#TestCase#key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUserAdmin /w key GA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUserAdmin /w key GA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate DU /w pwd GA - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate DU /w pwd GA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUuserPwd}" username="${#TestCase#DUusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[@id=2]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST updateDUserPwdCred - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}/OS-KSADM/credentials/passwordCredentials" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST updateDUserPwdCred - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8"?>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="migTestDUser1" password="${#TestCase#DUpassword2}"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:passwordCredentials[1]/@password</path><content>${#TestCase#DUpassword2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate DU  - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate DU  - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUpassword2}" username="${#TestCase#DUusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[@id=2]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unimigrateUserAdmin -xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unimigrateUserAdmin -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate DU  401 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate DU  401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUpassword2}" username="${#TestCase#DUusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate DU in CA - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate DU in CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUuserPwd}" username="${#TestCase#DUusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin - Json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin - Json" mediaType="application/json" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST AuthenticateDU GA 401 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST AuthenticateDU GA 401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUpassword2}" username="${#TestCase#DUusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;




</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticte DU - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticte DU - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUuserPwd}" username="${#TestCase#DUusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[@id=2]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUserAdmin GA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUserAdmin GA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUserAdmin - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Delete user - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUserAdmin - xml" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE softDeleteDUser"><con:settings/><con:config service="GA - SoftDelete" resourcePath="/${#Project#path2}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE softDeleteDUser" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteDefaultUser CA"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Delete user - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteDefaultUser CA" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUserAdmin CA- xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUserAdmin CA- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteApplication"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/applications/{applicationId}" methodName="Delete an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteApplication" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="applicationId" value="${#TestCase#clientId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenIdApp}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>migTestUA3940</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>nastId</con:name><con:value>StagingUS_3cd1dd78-f5af-4378-ad0a-2f33545ce1ac</con:value></con:property><con:property><con:name>mossoId</con:name><con:value>5800317</con:value></con:property><con:property><con:name>userId</con:name><con:value>195082</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>2e03cd30-3645-4327-a34c-265badb90b4f</con:value></con:property><con:property><con:name>DUusername</con:name><con:value>migTestDU3138</con:value></con:property><con:property><con:name>DUpassword</con:name><con:value>test123</con:value></con:property><con:property><con:name>DUuserId</con:name><con:value>195083</con:value></con:property><con:property><con:name>DUpassword2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>DUuserPwd</con:name><con:value>2w57uvQh</con:value></con:property><con:property><con:name>migTestApp</con:name><con:value>migTestApp</con:value></con:property><con:property><con:name>clientId</con:name><con:value>09db84a13cf887b3633f825bbb4d35be65e4f27d</con:value></con:property><con:property><con:name>clientSecret</con:name><con:value>e1251450f5a5bf66bae91146226110485d96b346</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>authuser</con:name><con:value>auth</con:value></con:property><con:property><con:name>authpass</con:name><con:value>auth123</con:value></con:property><con:property><con:name>authtoken</con:name><con:value>364815f4-add4-479f-84dc-6c3bb06ae73b</con:value></con:property><con:property><con:name>authtokenCA</con:name><con:value>9923d65a-fd18-4d31-9d24-6baf6d15f869</con:value></con:property><con:property><con:name>authtokenGA</con:name><con:value>e9b92686f412496986f96e9bc7c97c7c</con:value></con:property><con:property><con:name>GAadminuser</con:name><con:value>identityAdminStagingUser</con:value></con:property><con:property><con:name>GAadminpass</con:name><con:value>4bb2X6=1r1</con:value></con:property><con:property><con:name>clientSecret</con:name><con:value>password1</con:value></con:property><con:property><con:name>tokenIdApp</con:name><con:value>2b81df3963ba4561a4303030c18bd0b3</con:value></con:property><con:property><con:name>clientId</con:name><con:value>09db84a13cf887b3633f825bbb4d35be65e4f27d</con:value></con:property><con:property><con:name>rackerToken</con:name><con:value>ac2619a8e5f54dc9bbd3a2e38ef638e4</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - Migrate SubUsers"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Authenticate Racker" searchProperties="true" id="b04c6937-a778-4993-92cc-d5e7237e49c6"><con:settings/><con:testStep type="restrequest" name="POST AuthenticateApplication - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST AuthenticateApplication - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth token"><con:settings/><con:config><script>def tokenIdApp = context.expand( '${POST AuthenticateApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info tokenIdApp
assert (tokenIdApp!="");
testRunner.testCase.testSuite.setPropertyValue("tokenIdApp", tokenIdApp)

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createApplication - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/applications" methodName="Add an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createApplication - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request>&lt;application customerId="RCN-987-654-321" description="Foundation Test App" name="${#TestCase#migTestApp}" xmlns="http://idm.api.rackspace.com/v1.0">&lt;roles/>&lt;/application></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@name</path><content>${#TestCase#migTestApp}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@customerId</path><content>RCN-987-654-321</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 3"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@description</path><content>Foundation Test App</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenIdApp}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store new App"><con:settings/><con:config><script>def clientId = context.expand( '${POST createApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/@clientId}' )
log.info clientId;
testRunner.testCase.testSuite.setPropertyValue("clientId",clientId);

def clientSecret = context.expand( '${POST createApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/ns3:secretCredentials[1]/@clientSecret}' )
log.info clientSecret;
testRunner.testCase.setPropertyValue("clientSecret",clientSecret);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate Racker"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate Racker" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request>&lt;rackerCredentials password="${#Project#rackerPwd}" username="${#Project#rackerUser}" client_secret="${#TestCase#clientSecret}" client_id="${#TestCase#clientId}" grant_type="PASSWORD" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:auth[1]/ns3:racker[1]/@username</path><content>${#Project#rackerUser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store Racker TOken"><con:settings/><con:config><script>def rackerToken = context.expand( '${POST authenticate Racker#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info rackerToken;
testRunner.testCase.testSuite.setPropertyValue("rackerToken",rackerToken);</script></con:config></con:testStep><con:properties><con:property><con:name>migTestApp</con:name><con:value>migTestApp</con:value></con:property><con:property><con:name>clientId</con:name><con:value>09db84a13cf887b3633f825bbb4d35be65e4f27d</con:value></con:property><con:property><con:name>clientSecret</con:name><con:value>61858c99adfb8bf081865aff188dd60fef23ddcf</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Migration SubUsers - Positive" searchProperties="true" id="59d790d5-2f6b-4792-8990-b98a44be9f6a" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST Authenticate auth CA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth CA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#authpass}" username="${#TestSuite#authuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[@id=1]/@id</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate auth GA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth GA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAauthpass}" username="${#TestSuite#GAauthuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth token"><con:settings/><con:config><script>def authtoken = context.expand( '${POST Authenticate auth CA#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
assert (authtoken!="");
log.info authtoken
testRunner.testCase.testSuite.setPropertyValue("authtokenCA", authtoken)
def tokenIdGA = context.expand( '${POST Authenticate auth GA#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )

log.info tokenIdGA
assert (authtoken!="");
testRunner.testCase.testSuite.setPropertyValue("authtokenGA", tokenIdGA)</script></con:config></con:testStep><con:testStep type="groovy" name="Create Usernames"><con:settings/><con:config><script>Random r = new Random();
//log.info r.nextInt(10000);
testRunner.testCase.setPropertyValue("username", "migTestUA"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("username");

testRunner.testCase.setPropertyValue("DUusername", "migTestDU"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("DUusername");

testRunner.testCase.setPropertyValue("DUusername2", "migTestDU"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("DUusername2");


def req='&lt;v1:user enabled="true" id="'+testRunner.testCase.getPropertyValue("username")+'" key="ba04b108b7cefcbcbf7c4d8bd05e3857" mossoId="5800317" nastId="StagingUS_50b956da-f6d5-488e-9c21-3d05ccd666d4" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/>'
testRunner.testCase.testSteps["POST - createUserAdmin - xml"].setPropertyValue("Request", req)
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUserAdmin - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUserAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="migTestUA3686" key="ba04b108b7cefcbcbf7c4d8bd05e3857" mossoId="5800317" nastId="StagingUS_50b956da-f6d5-488e-9c21-3d05ccd666d4" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUser CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUser CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store userId"><con:settings/><con:config><script>
def userId = context.expand( '${POST authenticateUser CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get user ID - " + userId
assert (userId!="");
testRunner.testCase.setPropertyValue("userId", userId)

def tokenId = context.expand( '${POST authenticateUser CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
assert (userId!="");
log.info "get token ID - " + tokenId;
testRunner.testCase.setPropertyValue("tokenId", tokenId)
</script></con:config></con:testStep><con:testStep type="groovy" name="add req"><con:settings/><con:config><script>//{"user": { "username": "ga1subuser1", "email": "test@rackspace.com", "enabled": true} } 186441
def jsonReq = '{"user": { "username": "${#TestCase#DUusername}", "email": "test@rack.com", "enabled": true, "OS-KSADM:password":"${#TestCase#DUuserPwd}"} }'
def jsonReq2= '{"user": { "username": "${#TestCase#DUusername2}", "email": "test@rack.com", "enabled": true} }'
//set request
testRunner.testCase.testSteps["POST createDefaultUser /w pwd - json"].setPropertyValue("Request", jsonReq);
testRunner.testCase.testSteps["POST createDefaultUser w/o pwd - json"].setPropertyValue("Request",jsonReq2);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createDefaultUser /w pwd - json"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createDefaultUser /w pwd - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>{"user": { "username": "${#TestCase#DUusername}", "email": "test@rack.com", "enabled": true, "OS-KSADM:password":"${#TestCase#DUuserPwd}"} }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST createDefaultUser w/o pwd - json"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createDefaultUser w/o pwd - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>{"user": { "username": "${#TestCase#DUusername2}", "email": "test@rack.com", "enabled": true} }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store defaultUser"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;




def responseAsXml = context.expand( '${POST createDefaultUser /w pwd - json#Response}' );
def jsonRes = new JsonSlurper().parseText(responseAsXml);
def userId= jsonRes.'user'.id;
testRunner.testCase.setPropertyValue("DUuserId", userId)
log.info "userId 1: "+ userId;

def responseAsXml2 = context.expand( '${POST createDefaultUser w/o pwd - json#Response}' );
def jsonRes2 = new JsonSlurper().parseText(responseAsXml2);
def userId2= jsonRes2.'user'.id;
testRunner.testCase.setPropertyValue("DUuserId2",userId2);
log.info userId2;

def pwd2= jsonRes2.'user'.'OS-KSADM:password';
testRunner.testCase.setPropertyValue("DUuserPwd2",pwd2);

log.info pwd2;
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate DU1 pwd - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate DU1 pwd - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUuserPwd}" username="${#TestCase#DUusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate DU2 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate DU2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUuserPwd2}" username="${#TestCase#DUusername2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET listSubUsersOfUserAdmin  - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="List users - listUsers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET listSubUsersOfUserAdmin  - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>${#TestCase#userId1}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 2"><con:configuration><token>${#TestCase#userId2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdmin V1.1 CA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdmin V1.1 CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1 v1.1 CA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1 v1.1 CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2 v1.1 CA - json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2 v1.1 CA - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1ByName V2.0  - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1ByName V2.0  - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdminByName V2.0  - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdminByName V2.0  - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2ByName V2.0  - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2ByName V2.0  - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#DUusername2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdminById V2.0  - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users/{user_id}" methodName="Get a User by ID - getUserById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdminById V2.0  - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#username}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1ById V2.0  - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users/{user_id}" methodName="Get a User by ID - getUserById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1ById V2.0  - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#DUusername}"/>
  <con:entry key="user_id" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2ById V2.0  - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users/{user_id}" methodName="Get a User by ID - getUserById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2ById V2.0  - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#DUusername2}"/>
  <con:entry key="user_id" value="${#TestCase#DUuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="com.eviware.soapui.impl.support.AbstractHttpRequest@follow-redirects">true</con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration/></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUserAdmin - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUserAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:user[1]/@username</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedDefaultUser1 - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedDefaultUser1 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestDUser';
//ns1:Response[1]/ns1:user[1]/ns1:username[1]</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedDefaultUser2 - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedDefaultUser2 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestDUser2';
//ns1:Response[1]/ns1:user[1]/ns1:username[1]</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdmin V1.1 GA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdmin V1.1 GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAauthuser}</con:username><con:password>${#TestSuite#GAauthpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1 v1.1 GA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1 v1.1 GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAauthuser}</con:username><con:password>${#TestSuite#GAauthpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2 v1.1 GA - json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2 v1.1 GA - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAauthuser}</con:username><con:password>${#TestSuite#GAauthpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdminByName V2.0  GA - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdminByName V2.0  GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1ByName V2.0  GA - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1ByName V2.0  GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2ByName V2.0 GA - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2ByName V2.0 GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#DUusername2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdminById V2.0 GA - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users/{user_id}" methodName="Get a User by ID - getUserById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdminById V2.0 GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#username}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1ById V2.0 GA - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users/{user_id}" methodName="Get a User by ID - getUserById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1ById V2.0 GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#DUusername}"/>
  <con:entry key="user_id" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2ById V2.0 GA - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users/{user_id}" methodName="Get a User by ID - getUserById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2ById V2.0 GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@username</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#DUusername2}"/>
  <con:entry key="user_id" value="${#TestCase#DUuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET listUserAdminCredential - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials - listCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET listUserAdminCredential - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns9='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:credentials[1]/ns9:apiKeyCredentials[1]/@apiKey</path><content>${#TestCase#key}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns9='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:credentials[1]/ns9:apiKeyCredentials[1]/@username</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UA pwd"><con:settings/><con:config><script>def UApwd = context.expand( '${GET listUserAdminCredential - xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:credentials[1]/ns7:passwordCredentials[1]/@password}' )
assert (UApwd!="");

log.info UApwd;
testRunner.testCase.setPropertyValue("password",UApwd);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate UA /w pwd - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate UA /w pwd - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#password}" username="${#TestCase#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[@id=3]/@name</path><content>identity:user-admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateUserAdmin -xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateUserAdmin -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate UserAdmin  401 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate UserAdmin  401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#password}" username="${#TestCase#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdmin CA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdmin CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1 CA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1 CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2 CA - json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2 CA - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateDefaultUser1 400"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateDefaultUser1 400" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==400
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns15='http://fault.common.api.rackspace.com/v1.0';
//ns15:badRequest[1]/message[1]</path><content>Migration is not allowed for subusers</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin - json" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[1]/ns1:id[1]</path><content>${#TestCase#DUuserId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[2]/ns1:id[1]</path><content>${#TestCase#DUuserId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[3]/ns1:id[1]</path><content>${#TestCase#userId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUserAdmin - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUserAdmin - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:user[1]/@username</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedDefaultUser1 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedDefaultUser1 - xml" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestDUser';
//ns1:Response[1]/ns1:user[1]/ns1:username[1]</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedDefaultUser2 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedDefaultUser2 - xml" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://localhost/idm/migration/cloud/users/migTestDUser2';
//ns1:Response[1]/ns1:user[1]/ns1:username[1]</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdmin GA v1.1 - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdmin GA v1.1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAauthuser}</con:username><con:password>${#TestSuite#GAauthpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1 GA v1.1- xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1 GA v1.1- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAauthuser}</con:username><con:password>${#TestSuite#GAauthpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2 GA v1.1 - json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2 GA v1.1 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAauthuser}</con:username><con:password>${#TestSuite#GAauthpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateDefaultUser1 -xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateDefaultUser1 -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==400</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration/></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns15='http://fault.common.api.rackspace.com/v1.0';
//ns15:badRequest[1]/message[1]</path><content>Migration is not allowed for subusers</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getunMigratedDefaultUser1 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getunMigratedDefaultUser1 - xml" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestDUser';
//ns1:Response[1]/ns1:user[1]/ns1:username[1]</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateUserAdmin"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateUserAdmin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdmin CA - Xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdmin CA - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1 CA - Xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1 CA - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2 CA - Json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2 CA - Json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin - Json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin - Json" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[1]/ns1:id[1]</path><content>${#TestCase#DUuserId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[2]/ns1:id[1]</path><content>${#TestCase#DUuserId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[3]/ns1:id[1]</path><content>${#TestCase#userId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteDefaultUser1 GA- xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteDefaultUser1 GA- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE softDeleteDefaultUser1"><con:settings/><con:config service="GA - SoftDelete" resourcePath="/${#Project#path2}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE softDeleteDefaultUser1" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1 CA- xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1 CA- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1 GA 401 - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1 GA 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:unauthorized[1]/ns1:message[1]</path><content>You are not authorized to access this resource.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAauthuser}</con:username><con:password>${#TestSuite#GAauthpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateDefaultUser1 400 - Json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateDefaultUser1 400 - Json" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestDUser';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]</path><content>Migration is not allowed for subusers</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateUserAdmin - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateUserAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET  getUserAdmin CA - Xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET  getUserAdmin CA - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET  getDefaultUser1 CA - Json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET  getDefaultUser1 CA - Json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET  getDefaultUser2 CA - Json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET  getDefaultUser2 CA - Json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin - Xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin - Xml" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[1]/ns1:id[1]</path><content>${#TestCase#DUuserId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[2]/ns1:id[1]</path><content>${#TestCase#DUuserId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[3]/ns1:id[1]</path><content>${#TestCase#userId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdmin GA v1.1 - Xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdmin GA v1.1 - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAauthuser}</con:username><con:password>${#TestSuite#GAauthpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUserAdmin GA- xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUserAdmin GA- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAauthuser}</con:username><con:password>${#TestSuite#GAauthpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE softDeleteUserAdmin"><con:settings/><con:config service="GA - SoftDelete" resourcePath="/${#Project#path2}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE softDeleteUserAdmin" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateUserAdmin 404"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateUserAdmin 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET  getUserAdmin CA - XML"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET  getUserAdmin CA - XML" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET  getDefaultUser1 CA - XML"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET  getDefaultUser1 CA - XML" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET  getDefaultUser2 CA - XML"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET  getDefaultUser2 CA - XML" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteDefaultUser 2 - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Delete user - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteDefaultUser 2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteDefaultUser  - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Delete user - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteDefaultUser  - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUserAdmin CA- xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUserAdmin CA- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of POST Authenticate DU2 - xml" disabled="true"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of POST Authenticate DU2 - xml" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "username":"${#TestCase#DUusername}", "password":"Test1234" } } } </con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>migTestUA3686</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>nastId</con:name><con:value/></con:property><con:property><con:name>mossoId</con:name><con:value>5800317</con:value></con:property><con:property><con:name>userId</con:name><con:value>195165</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>70737569-70f2-4a1e-94e4-600e70fc24d3</con:value></con:property><con:property><con:name>DUusername</con:name><con:value>migTestDU1234</con:value></con:property><con:property><con:name>DUuserId</con:name><con:value>195166</con:value></con:property><con:property><con:name>DUuserPwd</con:name><con:value>MY2Dy0zC</con:value></con:property><con:property><con:name>DUusername2</con:name><con:value>migTestDU4821</con:value></con:property><con:property><con:name>DUuserId2</con:name><con:value>195167</con:value></con:property><con:property><con:name>DUuserOwd2</con:name><con:value>6GCuIKl9</con:value></con:property><con:property><con:name>DUuserPwd2</con:name><con:value>fSLZE3kx</con:value></con:property><con:property><con:name>password</con:name><con:value>d2Cc04bv7+</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Migration SubUsers - Negative" searchProperties="true" id="0522d32a-0c48-4b6a-9225-471896707fe2"><con:settings/><con:testStep type="restrequest" name="POST Authenticate auth CA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth CA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#authpass}" username="${#TestSuite#authuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[@id=1]/@id</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate auth GA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth GA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAauthpass}" username="${#TestSuite#GAauthuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth token"><con:settings/><con:config><script>def authtoken = context.expand( '${POST Authenticate auth CA#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )

log.info authtoken
testRunner.testCase.testSuite.setPropertyValue("authtokenCA", authtoken)


def tokenIdGA = context.expand( '${POST Authenticate auth GA#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info tokenIdGA
testRunner.testCase.testSuite.setPropertyValue("authtokenGA", tokenIdGA)</script></con:config></con:testStep><con:testStep type="groovy" name="create Username"><con:settings/><con:config><script>Random r = new Random();
//log.info r.nextInt(10000);
testRunner.testCase.setPropertyValue("username", "migTestUA"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("username");

testRunner.testCase.setPropertyValue("DUusername", "migTestDU"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("DUusername");


testRunner.testCase.setPropertyValue("DUusername2", "migTestDU"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("DUusername2");
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#username}" key="${#TestCase#key}" mossoId="${#TestCase#MossoId}" nastId="${#TestCase#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUser CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUser CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store userId"><con:settings/><con:config><script>
def userId = context.expand( '${POST authenticateUser CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get nast ID - " + userId
testRunner.testCase.setPropertyValue("userId", userId)

def tokenId = context.expand( '${POST authenticateUser CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
testRunner.testCase.setPropertyValue("tokenId", tokenId)</script></con:config></con:testStep><con:testStep type="groovy" name="add req"><con:settings/><con:config><script>//{"user": { "username": "ga1subuser1", "email": "test@rackspace.com", "enabled": true} } 186441
def jsonReq = '{"user": { "username": "${#TestCase#DUusername}", "email": "test@rack.com", "enabled": true, "OS-KSADM:password":"${#TestCase#DUuserPwd}"} }'
def jsonReq2= '{"user": { "username": "${#TestCase#DUusername2}", "email": "test@rack.com", "enabled": true} }'
//set request
testRunner.testCase.testSteps["POST createDefaultUser /w pwd - json"].setPropertyValue("Request", jsonReq);
testRunner.testCase.testSteps["POST createDefaultUser w/o pwd - json"].setPropertyValue("Request",jsonReq2);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createDefaultUser /w pwd - json"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createDefaultUser /w pwd - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>{"user": { "username": "${#TestCase#DUusername}", "email": "test@rack.com", "enabled": true, "OS-KSADM:password":"${#TestCase#DUuserPwd}"} }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST createDefaultUser w/o pwd - json"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createDefaultUser w/o pwd - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>{"user": { "username": "${#TestCase#DUusername2}", "email": "test@rack.com", "enabled": true} }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store defaultUser"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

def responseAsXml = context.expand( '${POST createDefaultUser /w pwd - json#Response}' );
def jsonRes = new JsonSlurper().parseText(responseAsXml);
def userId= jsonRes.'user'.id;
testRunner.testCase.setPropertyValue("DUuserId",userId);
log.info userId;

def responseAsXml2 = context.expand( '${POST createDefaultUser w/o pwd - json#Response}' );
def jsonRes2 = new JsonSlurper().parseText(responseAsXml2);
def userId2= jsonRes2.'user'.id;
testRunner.testCase.setPropertyValue("DUuserId2",userId2);
log.info userId2;

def pwd2= jsonRes2.'user'.'OS-KSADM:password';
testRunner.testCase.setPropertyValue("DUuserPwd2",pwd2);
log.info pwd2;

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST AuthenticateDefaultUser1 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST AuthenticateDefaultUser1 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUuserPwd}" username="${#TestCase#DUusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST AuthenticateDefaultUser2 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST AuthenticateDefaultUser2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUuserPwd2}" username="${#TestCase#DUusername2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store DU tokens"><con:settings/><con:config><script>def DUtokenId = context.expand( '${POST AuthenticateDefaultUser1 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
testRunner.testCase.setPropertyValue("DUtokenId",DUtokenId);
log.info DUtokenId;

def DUtokenId2 = context.expand( '${POST AuthenticateDefaultUser2 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info DUtokenId2;
testRunner.testCase.setPropertyValue("DUtokenId2",DUtokenId2);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin /w badToken 401 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin /w badToken 401 - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Authentication Failed</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}bad"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST AsUserAdminMigrateUserAdmin 401 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST AsUserAdminMigrateUserAdmin 401 - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Authentication Failed.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST AsUserAdminMigrateDefaultUser 401 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST AsUserAdminMigrateDefaultUser 401 - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Authentication Failed.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST AsDefaultUserMigrateUserAdmin 401 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST AsDefaultUserMigrateUserAdmin 401 - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Authentication Failed.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST AsDefaultUserMigrateDefaultUser 401 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST AsDefaultUserMigrateDefaultUser 401 - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Authentication Failed.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername2}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#DUtokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST asIdentityAdminMigrateDefaultUser2 401 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST asIdentityAdminMigrateDefaultUser2 401 - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Authentication Failed.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST asIdentityAdminMigrateDefaultUser1 401 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST asIdentityAdminMigrateDefaultUser1 401 - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Authentication Failed.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT disableDefaultUser CA - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Update user - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT disableDefaultUser CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>&lt;v2:user created="${#TestCase#timeCreated}" display-name="${#TestCase#DUusername}" email="test@test.com" enabled="false" id="${#TestCase#DUuserId}" password="Password1" updated="" username="${#TestCase#DUusername}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@enabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin \w disabled defaultUser - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin \w disabled defaultUser - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>//migrateUserResponseType[1]/users[2]/id[1]</path><content>${#TestCase#DUuserId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1" disabled="true"><con:configuration><path>//migrateUserResponseType[1]/users[1]/id[1]</path><content>${#TestCase#DUuserId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2" disabled="true"><con:configuration><path>//migrateUserResponseType[1]/users[3]/id[1]</path><content>${#TestCase#userId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdmin GA V1.1 - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdmin GA V1.1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAauthuser}</con:username><con:password>${#TestSuite#GAauthpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1 GA V1.1 - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1 GA V1.1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2 GA V1.1 - json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2 GA V1.1 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateUserAdmin -xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateUserAdmin -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT enableDefaultUser CA - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Update user - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT enableDefaultUser CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>&lt;v2:user created="${#TestCase#timeCreated}" display-name="${#TestCase#DUusername}" email="test@test.com" enabled="true" id="${#TestCase#DUuserId}" updated="" username="${#TestCase#DUusername}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT disableUserAdmin CA - Xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT disableUserAdmin CA - Xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="false" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateDisabledUserAdmin - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateDisabledUserAdmin - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>//migrateUserResponseType[1]/users[2]/id[1]</path><content>${#TestCase#DUuserId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1" disabled="true"><con:configuration><path>//migrateUserResponseType[1]/users[1]/id[1]</path><content>${#TestCase#DUuserId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2" disabled="true"><con:configuration><path>//migrateUserResponseType[1]/users[3]/id[1]</path><content>${#TestCase#userId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdmin GA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdmin GA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#userName}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser CA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser CA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#DUusername}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#DUusername}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2 CA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2 CA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#DUusername2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#DUusername2}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT enableUserAdmin GA - Xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT enableUserAdmin GA - Xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAauthuser}</con:username><con:password>${#TestSuite#GAauthpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateUserAdmin - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateUserAdmin - json" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT disableUserAdmin CA - Json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT disableUserAdmin CA - Json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="false" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT disableDefaultUser CA - Json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT disableDefaultUser CA - Json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="false" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT disableDefaultUser2 CA - Json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}/enabled" methodName="PUT - setUserEnabled" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT disableDefaultUser2 CA - Json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="false" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateDisabledUserAdmin /w all disabled DefaultUsers - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateDisabledUserAdmin /w all disabled DefaultUsers - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>//migrateUserResponseType[1]/users[2]/id[1]</path><content>${#TestCase#DUuserId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>//migrateUserResponseType[1]/users[1]/id[1]</path><content>${#TestCase#DUuserId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>//migrateUserResponseType[1]/users[3]/id[1]</path><content>${#TestCase#userId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdmin by ID GA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users/{user_id}" methodName="Get a User by ID - getUserById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdmin by ID GA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#userName}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser by ID CA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users/{user_id}" methodName="Get a User by ID - getUserById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser by ID CA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#DUusername}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#DUusername}"/>
  <con:entry key="user_id" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser 2 by ID CA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users/{user_id}" methodName="Get a User by ID - getUserById" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser 2 by ID CA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#DUusername2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#DUusername}"/>
  <con:entry key="user_id" value="${#TestCase#DUuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST asRackerMigrateMigratedUserAdmin 409 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST asRackerMigrateMigratedUserAdmin 409 - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==409
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>user with username ${#TestCase#username} already exists.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST asRackerMigrateMigratedDefaultUser1 400 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST asRackerMigrateMigratedDefaultUser1 400 - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==409
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>user with username ${#TestCase#DUusername} already exists.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST asRackerMigrateMigratedDefaultUser2 400 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST asRackerMigrateMigratedDefaultUser2 400 - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==409
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>user with username ${#TestCase#DUusername2} already exists.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateUserAdmin - Json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateUserAdmin - Json" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteDefaultUser - Xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Delete user - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteDefaultUser - Xml" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE deleteDefaultUser2 - Xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Delete user - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteDefaultUser2 - Xml" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUserAdmin CA- xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUserAdmin CA- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>migTestUA3838</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>nastId</con:name><con:value/></con:property><con:property><con:name>mossoId</con:name><con:value>5800317</con:value></con:property><con:property><con:name>userId</con:name><con:value>195168</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>8abd1bad-071e-4a7e-a43f-0a4917cb4b70</con:value></con:property><con:property><con:name>DUusername</con:name><con:value>migTestDU7327</con:value></con:property><con:property><con:name>DUuserId</con:name><con:value>195169</con:value></con:property><con:property><con:name>DUuserPwd</con:name><con:value>Password1</con:value></con:property><con:property><con:name>DUusername2</con:name><con:value>migTestDU6493</con:value></con:property><con:property><con:name>DUuserId2</con:name><con:value>195170</con:value></con:property><con:property><con:name>DUuserOwd2</con:name><con:value>6GCuIKl9</con:value></con:property><con:property><con:name>DUuserPwd2</con:name><con:value>0rN09Pz7</con:value></con:property><con:property><con:name>password</con:name><con:value>1ae0d@f3Qv</con:value></con:property><con:property><con:name>DUtokenId</con:name><con:value>dff6c5c1-d6c9-44ca-a44e-000ad6d71b29</con:value></con:property><con:property><con:name>DUtokenId2</con:name><con:value>1d2c7297-4240-49f0-aa31-d8e02fcb4c07</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="Migration SubUsers GA - Positive" searchProperties="true" id="61fbf9da-e805-4a5f-9daf-42f5f49307c4" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST Authenticate auth CA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth CA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#authpass}" username="${#TestSuite#authuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[@id=1]/@id</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate auth GA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth GA" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAauthpass}" username="${#TestSuite#GAauthuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#path2}/tokens';
//ns1:Response[1]/ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:e[1]/ns1:id[1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Create Username"><con:settings/><con:config><script>Random r = new Random();
//log.info r.nextInt(10000);
testRunner.testCase.setPropertyValue("username", "migTestUA"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("username");

testRunner.testCase.setPropertyValue("DUusername", "migTestDU"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("DUusername");

testRunner.testCase.setPropertyValue("DUusername2", "migTestDU"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("DUusername2");

//def req='&lt;v1:user enabled="true" id="'+testRunner.testCase.getPropertyValue("username")+'" key="ba04b108b7cefcbcbf7c4d8bd05e3857" mossoId="5800717" nastId="StagingUS_50b956da-f6d5-488e-9c21-3d05ccd666d4" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/>'
//testRunner.testCase.testSteps["POST - createUser - xml"].setPropertyValue("Request", req)

def req='&lt;v1:user enabled="true" id="'+testRunner.testCase.getPropertyValue("username")+'" key="'+testRunner.testCase.getPropertyValue("key")+'" mossoId="'+testRunner.testCase.getPropertyValue("MossoId")+'" nastId="'+testRunner.testCase.getPropertyValue("nastId")+'" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/>'                                      
testRunner.testCase.testSteps["POST - createUserAdmin - xml"].setPropertyValue("Request", req)
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUserAdmin - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUserAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="migTestUA4511" key="ba04b108b7cefcbcbf7c4d8bd05e3857" mossoId="5800385" nastId="" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUser CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUser CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store userId"><con:settings/><con:config><script>
def userId = context.expand( '${POST authenticateUser CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get nast ID - " + userId
assert (userId!="");
testRunner.testCase.setPropertyValue("userId", userId)

def tokenId = context.expand( '${POST authenticateUser CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
assert (tokenId!="");
log.info tokenId;
testRunner.testCase.setPropertyValue("tokenId", tokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsersForUseAdmin - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="List users - listUsers" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsersForUseAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUserAdmin - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUserAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:user[1]/@username</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET listUserAdminCredential - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials - listCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET listUserAdminCredential - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UA pwd"><con:settings/><con:config><script>def UApwd = context.expand( '${GET listUserAdminCredential - xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:credentials[1]/ns7:passwordCredentials[1]/@password}' )
assert (UApwd!="");

log.info UApwd;
testRunner.testCase.setPropertyValue("password",UApwd);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate UA /w pwd GA - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate UA /w pwd GA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#password}" username="${#TestCase#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[@id=3]/@name</path><content>identity:user-admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UA token GA"><con:settings/><con:config><script>def tokenIdGA = context.expand( '${POST Authenticate UA /w pwd GA - xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
assert (tokenIdGA!="");
log.info tokenIdGA;
testRunner.testCase.setPropertyValue("tokenIdGA",tokenIdGA);</script></con:config></con:testStep><con:testStep type="groovy" name="add req"><con:settings/><con:config><script>//{"user": { "username": "ga1subuser1", "email": "test@rackspace.com", "enabled": true} } 186441
def jsonReq = '{"user": { "username": "${#TestCase#DUusername}", "email": "test@rack.com", "enabled": true, "OS-KSADM:password":"${#TestCase#DUuserPwd}"} }'
def jsonReq2= '{"user": { "username": "${#TestCase#DUusername2}", "email": "test@rack.com", "enabled": true} }'
//set request
testRunner.testCase.testSteps["POST createDefaultUser /w pwd - json"].setPropertyValue("Request", jsonReq);
testRunner.testCase.testSteps["POST createDefaultUser w/o pwd - json"].setPropertyValue("Request",jsonReq2);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createDefaultUser /w pwd - json"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createDefaultUser /w pwd - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST createDefaultUser w/o pwd - json"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createDefaultUser w/o pwd - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>{"user": { "username": "${#TestCase#DUusername2}", "email": "test@rack.com", "enabled": true} }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenIdGA}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store defaultUser"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

def responseAsXml = context.expand( '${POST createDefaultUser /w pwd - json#Response}' );
def jsonRes = new JsonSlurper().parseText(responseAsXml);
def userId= jsonRes.'user'.id;
testRunner.testCase.setPropertyValue("DUuserId",userId);
log.info userId;

def responseAsXml2 = context.expand( '${POST createDefaultUser w/o pwd - json#Response}' );
def jsonRes2 = new JsonSlurper().parseText(responseAsXml2);
def userId2= jsonRes2.'user'.id;
testRunner.testCase.setPropertyValue("DUuserId2",userId2);
log.info userId2;

def pwd2= jsonRes2.'user'.'OS-KSADM:password';
testRunner.testCase.setPropertyValue("DUuserPwd2",pwd2);
log.info pwd2;

</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT enableDefaulttUser1 404" disabled="true"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/enable" methodName="enable" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT enableDefaulttUser1 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate DU1 GA- xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate DU1 GA- xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUuserPwd}" username="${#TestCase#DUusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[@id=2]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate DU2 GA - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate DU2 GA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUuserPwd2}56" username="${#TestCase#DUusername2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateUserAdmin -xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateUserAdmin -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate UserAdmin  401 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate UserAdmin  401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#password}" username="${#TestCase#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdmin CA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdmin CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser GA -xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser GA -xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAauthuser}</con:username><con:password>${#TestSuite#GAauthpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2 GA -json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2 GA -json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAauthuser}</con:username><con:password>${#TestSuite#GAauthpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin - json" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[1]/ns1:id[1]</path><content>${#TestCase#DUuserId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[2]/ns1:id[1]</path><content>${#TestCase#DUuserId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[3]/ns1:id[1]</path><content>${#TestCase#userId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUserAdmin - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUserAdmin - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:user[1]/@username</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedDefaultUser1 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedDefaultUser1 - xml" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestDUser';
//ns1:Response[1]/ns1:user[1]/ns1:username[1]</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedDefaultUser2 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedDefaultUser2 - xml" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://localhost/idm/migration/cloud/users/migTestDUser2';
//ns1:Response[1]/ns1:user[1]/ns1:username[1]</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdmin GA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdmin GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1 GA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1 GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2 GA - json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2 GA - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateDefaultUser1 -xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateDefaultUser1 -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==400</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration/></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns15='http://fault.common.api.rackspace.com/v1.0';
//ns15:badRequest[1]/message[1]</path><content>Migration is not allowed for subusers</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getunMigratedDefaultUser1 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getunMigratedDefaultUser1 - xml" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestDUser';
//ns1:Response[1]/ns1:user[1]/ns1:username[1]</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteDefaultUser1 GA- xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteDefaultUser1 GA- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE softDeleteDefaultUser1"><con:settings/><con:config service="GA - SoftDelete" resourcePath="/${#Project#path2}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE softDeleteDefaultUser1" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateUserAdmin"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateUserAdmin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdmin CA - Xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdmin CA - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1 CA - Xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1 CA - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2 CA - Json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2 CA - Json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUserAdmin CA- xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUserAdmin CA- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>migTestUA910</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>nastId</con:name><con:value/></con:property><con:property><con:name>mossoId</con:name><con:value>5800385</con:value></con:property><con:property><con:name>userId</con:name><con:value>195176</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>0c97283c-dfcd-4a58-a22e-d861a1bd3ff1</con:value></con:property><con:property><con:name>DUusername</con:name><con:value>migTestDU6217</con:value></con:property><con:property><con:name>DUuserId</con:name><con:value>195178</con:value></con:property><con:property><con:name>DUuserPwd</con:name><con:value>Password1</con:value></con:property><con:property><con:name>DUusername2</con:name><con:value>migTestDU872</con:value></con:property><con:property><con:name>DUuserId2</con:name><con:value>10022291</con:value></con:property><con:property><con:name>DUuserOwd2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>DUuserPwd2</con:name><con:value>15l723Q52@</con:value></con:property><con:property><con:name>password</con:name><con:value>et9!cZ4700</con:value></con:property><con:property><con:name>tokenIdGA</con:name><con:value>292edbaf76a24c458154ec42ba58f14d</con:value></con:property><con:property><con:name>SAusername</con:name><con:value>migTestSAdmin</con:value></con:property><con:property><con:name>SApassword</con:name><con:value>fg1Ia24a4$</con:value></con:property><con:property><con:name>SAuserId</con:name><con:value>10016324</con:value></con:property><con:property><con:name>tokenIdSA</con:name><con:value>31be8e74633940d1a90751a223294891</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Migration SubUsers GA- Negative" searchProperties="true" id="29877fd8-de03-43f0-a36d-7c22d0751c48"><con:settings/><con:testStep type="restrequest" name="POST Authenticate auth CA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth CA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#authpass}" username="${#TestSuite#authuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@id</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate auth GA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth GA" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="Auth1234" username="auth"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#path2}/tokens';
//ns1:Response[1]/ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:e[1]/ns1:id[1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth token"><con:settings/><con:config><script>def authtoken = context.expand( '${POST Authenticate auth CA#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )

log.info authtoken
testRunner.testCase.testSuite.setPropertyValue("authtokenCA", authtoken)

def tokenIdGA = context.expand( '${POST Authenticate auth GA#ResponseAsXml#declare namespace ns1=\'http://localhost/idm/cloud/v2.0/tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )
log.info tokenIdGA
testRunner.testCase.testSuite.setPropertyValue("authtokenGA", tokenIdGA)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#username}" key="${#TestCase#key}" mossoId="${#TestCase#MossoId}" nastId="${#TestCase#nastId}" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUser CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUser CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store userId"><con:settings/><con:config><script>
def userId = context.expand( '${POST authenticateUser CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get nast ID - " + userId
assert (userId!="");
testRunner.testCase.setPropertyValue("userId", userId)

def tokenId = context.expand( '${POST authenticateUser CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
assert (tokenId!="");
log.info tokenId;
testRunner.testCase.setPropertyValue("tokenId", tokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUserAdmin - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUserAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:user[1]/@username</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET listUserAdminCredential - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials - listCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET listUserAdminCredential - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UA pwd"><con:settings/><con:config><script>def UApwd = context.expand( '${GET listUserAdminCredential - xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:credentials[1]/ns7:passwordCredentials[1]/@password}' )
assert (UApwd!="");

log.info UApwd;
testRunner.testCase.setPropertyValue("password",UApwd);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate UA /w pwd GA - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate UA /w pwd GA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#password}" username="${#TestCase#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[@id=3]/@name</path><content>identity:user-admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="add req"><con:settings/><con:config><script>//{"user": { "username": "ga1subuser1", "email": "test@rackspace.com", "enabled": true} } 186441
def jsonReq = '{"user": { "username": "${#TestCase#DUusername}", "email": "test@rack.com", "enabled": true, "OS-KSADM:password":"${#TestCase#DUuserPwd}"} }'
def jsonReq2= '{"user": { "username": "${#TestCase#DUusername2}", "email": "test@rack.com", "enabled": true} }'
//set request
testRunner.testCase.testSteps["POST createDefaultUser /w pwd - json"].setPropertyValue("Request", jsonReq);
testRunner.testCase.testSteps["POST createDefaultUser w/o pwd - json"].setPropertyValue("Request",jsonReq2);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createDefaultUser /w pwd - json"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createDefaultUser /w pwd - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>{"user": { "username": "${#TestCase#DUusername}", "email": "test@rack.com", "enabled": true, "OS-KSADM:password":"${#TestCase#DUuserPwd}"} }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST createDefaultUser w/o pwd - json"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createDefaultUser w/o pwd - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>{"user": { "username": "${#TestCase#DUusername2}", "email": "test@rack.com", "enabled": true} }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store defaultUser"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

def responseAsXml = context.expand( '${POST createDefaultUser /w pwd - json#Response}' );
def jsonRes = new JsonSlurper().parseText(responseAsXml);
def userId= jsonRes.'user'.id;
testRunner.testCase.setPropertyValue("DUuserId",userId);
log.info userId;

def responseAsXml2 = context.expand( '${POST createDefaultUser w/o pwd - json#Response}' );
def jsonRes2 = new JsonSlurper().parseText(responseAsXml2);
def userId2= jsonRes2.'user'.id;
testRunner.testCase.setPropertyValue("DUuserId2",userId2);
log.info userId2;

def pwd2= jsonRes2.'user'.'OS-KSADM:password';
testRunner.testCase.setPropertyValue("DUuserPwd2",pwd2);
log.info pwd2;

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate DU1 pwd - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate DU1 pwd - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUuserPwd}" username="${#TestCase#DUusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[@id=2]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate DU2 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate DU2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUuserPwd2}" username="${#TestCase#DUusername2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteDefaultUser1 CA- xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteDefaultUser1 CA- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateUserAdmin -xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateUserAdmin -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin - Json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin - Json" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[1]/ns1:id[1]</path><content>${#TestCase#DUuserId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[2]/ns1:id[1]</path><content>${#TestCase#userId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Add req"><con:settings/><con:config><script>//{"user": { "username": "ga1subuser1", "email": "test@rackspace.com", "enabled": true} } 186441
def jsonReq = '{"user": { "username": "${#TestCase#DUusername}", "email": "test@rack.com", "enabled": true, "OS-KSADM:password":"${#TestCase#DUuserPwd}"} }'

//set request
testRunner.testCase.testSteps["POST createDefaultUser /w pwd - Json"].setPropertyValue("Request", jsonReq);
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createDefaultUser /w pwd - Json"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createDefaultUser /w pwd - Json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>{"user": { "username": "${#TestCase#DUusername}", "email": "test@rack.com", "enabled": true, "OS-KSADM:password":"${#TestCase#DUuserPwd}"} }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate DU1 pwd - Xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate DU1 pwd - Xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUuserPwd}" username="${#TestCase#DUusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[@id=2]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store DU1"><con:settings/><con:config><script>def tokenId = context.expand( '${POST Authenticate DU1 pwd - Xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
assert (tokenId!="");
log.info tokenId;
testRunner.testCase.setPropertyValue("DUtokenId",tokenId);
def userId = context.expand( '${POST Authenticate DU1 pwd - Xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
assert (userId!="");
log.info userId;
testRunner.testCase.setPropertyValue("DUuserId",userId);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdmin GA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdmin GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1 CA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1 CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2 GA - json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2 GA - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUserAdmin GA- xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUserAdmin GA- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE softDeleteUserAdmin"><con:settings/><con:config service="GA - SoftDelete" resourcePath="/${#Project#path2}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE softDeleteUserAdmin" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdmin CA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdmin CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2 CA - json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2 CA - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedDefaultUser1 - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedDefaultUser1 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestDUser';
//ns1:Response[1]/ns1:user[1]/ns1:username[1]</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedDefaultUser2 - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedDefaultUser2 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://localhost/idm/migration/cloud/users/migTestDUser2';
//ns1:Response[1]/ns1:user[1]/ns1:username[1]</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUserAdmin CA- xml" disabled="true"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUserAdmin CA- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate UserAdmin  401 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate UserAdmin  401 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#password}" username="${#TestCase#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin - json" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[1]/ns1:id[1]</path><content>${#TestCase#DUuserId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[2]/ns1:id[1]</path><content>${#TestCase#DUuserId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestUser1';
//ns1:Response[1]/ns1:migrateUserResponseType[1]/ns1:users[1]/ns1:e[3]/ns1:id[1]</path><content>${#TestCase#userId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUserAdmin - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUserAdmin - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:user[1]/@username</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedDefaultUser1 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedDefaultUser1 - xml" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestDUser';
//ns1:Response[1]/ns1:user[1]/ns1:username[1]</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedDefaultUser2 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedDefaultUser2 - xml" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://localhost/idm/migration/cloud/users/migTestDUser2';
//ns1:Response[1]/ns1:user[1]/ns1:username[1]</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1 GA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1 GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateDefaultUser1 -xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateDefaultUser1 -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==400</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration/></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns15='http://fault.common.api.rackspace.com/v1.0';
//ns15:badRequest[1]/message[1]</path><content>Migration is not allowed for subusers</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getunMigratedDefaultUser1 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getunMigratedDefaultUser1 - xml" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestDUser';
//ns1:Response[1]/ns1:user[1]/ns1:username[1]</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateUserAdmin"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateUserAdmin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUserAdmin CA - Xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUserAdmin CA - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser1 CA - Xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser1 CA - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser2 CA - Json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser2 CA - Json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>migTestUser1</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>nastId</con:name><con:value/></con:property><con:property><con:name>mossoId</con:name><con:value>5800317</con:value></con:property><con:property><con:name>userId</con:name><con:value>189337</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>eedf1ee9-d3a7-432a-8886-11c8ab9e4a97</con:value></con:property><con:property><con:name>DUusername</con:name><con:value>migTestDUser</con:value></con:property><con:property><con:name>DUuserId</con:name><con:value>189344</con:value></con:property><con:property><con:name>DUuserPwd</con:name><con:value>test1234</con:value></con:property><con:property><con:name>DUusername2</con:name><con:value>migTestDUser2</con:value></con:property><con:property><con:name>DUuserId2</con:name><con:value>189339</con:value></con:property><con:property><con:name>DUuserOwd2</con:name><con:value>6GCuIKl9</con:value></con:property><con:property><con:name>DUuserPwd2</con:name><con:value>6TFvGy52</con:value></con:property><con:property><con:name>password</con:name><con:value>mX7a26384?</con:value></con:property><con:property><con:name>DUtokenId</con:name><con:value>eedf1ee9-d3a7-432a-8886-11c8ab9e4a97</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Migration DuplicateUser GA" searchProperties="true" id="600b61b4-ce39-4d32-8478-bc67c16a7f01"><con:settings/><con:testStep type="restrequest" name="POST Authenticate auth CA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth CA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#authpass}" username="${#TestSuite#authuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[@id=1]/@id</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate auth GA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth GA" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAauthpass}" username="${#TestSuite#GAauthuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#path2}/tokens';
//ns1:Response[1]/ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:e[1]/ns1:id[1]</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST AuthenticateApplication - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST AuthenticateApplication - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth token"><con:settings/><con:config><script>def authtoken = context.expand( '${POST Authenticate auth CA#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )

log.info authtoken
testRunner.testCase.testSuite.setPropertyValue("authtokenCA", authtoken)

def tokenIdGA = context.expand( '${POST Authenticate auth GA#ResponseAsXml#declare namespace ns1=\'http://localhost/idm/cloud/v2.0/tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )
log.info tokenIdGA
testRunner.testCase.testSuite.setPropertyValue("authtokenGA", tokenIdGA)

def tokenIdApp = context.expand( '${POST AuthenticateApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info tokenIdApp;
testRunner.testCase.testSuite.setPropertyValue("authtokenApp", tokenIdApp)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createServiceAdmin GA - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createServiceAdmin GA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>&lt;user OS-KSADM:password="${#TestCase#SApassword}" display-name="${#TestCase#SAusername}" email="userAdmin@rack.com" enabled="true" username="${#TestCase#SAusername}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SA pwd/id"><con:settings/><con:config><script>def userId = context.expand( '${POST createServiceAdmin GA - xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:user[1]/@id}' )
assert (userId!="");
log.info userId;
testRunner.testCase.setPropertyValue("SAuserId",userId);


def pwd = context.expand( '${POST createServiceAdmin GA - xml#ResponseAsXml#declare namespace ns8=\'http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0\'; declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:user[1]/@ns8:password}' )
assert (pwd!="");
log.info pwd;
testRunner.testCase.setPropertyValue("SApassword",pwd);
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateServiceAdmin GA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateServiceAdmin GA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#SApassword}" username="${#TestCase#SAusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>4</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SA token"><con:settings/><con:config><script>def tokenIdSA = context.expand( '${POST authenticateServiceAdmin GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info tokenIdSA
assert (tokenIdSA!="");
testRunner.testCase.setPropertyValue("tokenIdSA",tokenIdSA);</script></con:config></con:testStep><con:testStep type="groovy" name="Create Username"><con:settings/><con:config><script>Random r = new Random();
//log.info r.nextInt(10000);
testRunner.testCase.setPropertyValue("username", "migTestUA"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("username");

testRunner.testCase.setPropertyValue("DUusername", "migTestDU"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("DUusername");


//def req='&lt;v1:user enabled="true" id="'+testRunner.testCase.getPropertyValue("username")+'" key="ba04b108b7cefcbcbf7c4d8bd05e3857" mossoId="5800717" nastId="StagingUS_50b956da-f6d5-488e-9c21-3d05ccd666d4" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/>'
//testRunner.testCase.testSteps["POST - createUser - xml"].setPropertyValue("Request", req)

def req='&lt;v1:user enabled="true" id="'+testRunner.testCase.getPropertyValue("username")+'" key="'+testRunner.testCase.getPropertyValue("key")+'" mossoId="'+testRunner.testCase.getPropertyValue("MossoId")+'" nastId="'+testRunner.testCase.getPropertyValue("nastId")+'" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/>'                                      
testRunner.testCase.testSteps["POST createUserAdmin CA - xml"].setPropertyValue("Request", req)
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createUserAdmin GA - Xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createUserAdmin GA - Xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>&lt;user OS-KSADM:password="${#TestCase#GAuserAdminPw}" display-name="${#TestCase#username}" email="userAdmin@rack.com" enabled="true" username="${#TestCase#username}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenIdSA}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST createUserAdmin CA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createUserAdmin CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="migTestUA3771" key="ba04b108b7cefcbcbf7c4d8bd05e3857" mossoId="5800399" nastId="StagingUS_50b956da-f6d5-488e-9c21-3d05ccd666d4" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUserAdmin GA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUserAdmin GA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#GAuserAdminPw}" username="${#TestCase#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUserAdmin CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUserAdmin CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store userAdminId"><con:settings/><con:config><script>
def userId = context.expand( '${POST authenticateUserAdmin CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get nast ID - " + userId
assert (userId!="");
testRunner.testCase.setPropertyValue("userId", userId)

def tokenId = context.expand( '${POST authenticateUserAdmin CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
assert (tokenId!="");
log.info tokenId;
testRunner.testCase.setPropertyValue("tokenId", tokenId)

def GAuseAdminId = context.expand( '${POST authenticateUserAdmin GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@id}' )
assert (GAuseAdminId!="");
log.info GAuseAdminId;
testRunner.testCase.setPropertyValue("GAuserAdminId", GAuseAdminId)


def GAUAtokenID = context.expand( '${POST authenticateUserAdmin GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
assert (GAUAtokenID!="");
log.info GAUAtokenID;
testRunner.testCase.setPropertyValue("GAtokenID", GAUAtokenID)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin 409 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin 409 - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==409
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>A user with username ${#TestCase#username} already exists.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUserAdmin - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUserAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:user[1]/@username</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT enableMigratedUserAdmin 404 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/enable" methodName="enable" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT enableMigratedUserAdmin 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT disableMigratedUserAdmin 404 - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/disable" methodName="disable" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT disableMigratedUserAdmin 404 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateUserAdmin 404 -xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateUserAdmin 404 -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT disableUser GA - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Update user - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT disableUser GA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>&lt;v2:user created="${#TestCase#timeCreated}" display-name="${#TestCase#username}" email="test@test.com" enabled="false" id="${#TestCase#GAuserAdminId}" updated="" username="${#TestCase#username}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@enabled</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#GAuserAdminId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin 409 - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin 409 - json" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==409</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>A user with username ${#TestCase#username} already exists.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateDefaultUser1 -xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateDefaultUser1 -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==404</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration/></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT enableUser GA - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Update user - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT enableUser GA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>&lt;v2:user created="${#TestCase#timeCreated}" display-name="${#TestCase#username}" email="test@test.com" enabled="true" id="${#TestCase#GAuserAdminId}" updated="" username="${#TestCase#username}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#GAuserAdminId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT updateUserAdmin username GA - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Update user - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT updateUserAdmin username GA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>&lt;v2:user created="${#TestCase#timeCreated}" display-name="${#TestCase#username}" email="test@test.com" enabled="true" id="${#TestCase#GAuserAdminId}" updated="" username="${#TestCase#username}12" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:user[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#GAuserAdminId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin - json" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT updateMigratedUserAdmin username 409 - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Update user - updateUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT updateMigratedUserAdmin username 409 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>&lt;v2:user created="${#TestCase#timeCreated}" display-name="${#TestCase#username}" email="test@test.com" enabled="true" id="${#TestCase#userId}" updated="" username="${#TestCase#username}12" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with username: '${#TestCase#username}12' already exists.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateUserAdmin"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateUserAdmin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUserAdmin GA - json"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUserAdmin GA - json" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#GAuserAdminPw}" username="${#TestCase#username}12"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUserAdmin CA -json"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUserAdmin CA -json" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUserAdmin CA- xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUserAdmin CA- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUserAdmin GA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUserAdmin GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAauthuser}</con:username><con:password>${#TestSuite#GAauthpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}12" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE softDeleteUserAdmin GA"><con:settings/><con:config service="GA - SoftDelete" resourcePath="/${#Project#path2}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE softDeleteUserAdmin GA" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#GAuserAdminId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteServiceAdmin GA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteServiceAdmin GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#SAusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE softDeleteServiceAdmin GA"><con:settings/><con:config service="GA - SoftDelete" resourcePath="/${#Project#path2}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE softDeleteServiceAdmin GA" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>migTestUA3771</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>nastId</con:name><con:value>StagingUS_50b956da-f6d5-488e-9c21-3d05ccd666d4</con:value></con:property><con:property><con:name>mossoId</con:name><con:value>5800399</con:value></con:property><con:property><con:name>userId</con:name><con:value>193751</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>a08dc1f3-3d2f-407c-925e-e73ad73e815d</con:value></con:property><con:property><con:name>DUusername</con:name><con:value>migTestDU881</con:value></con:property><con:property><con:name>DUuserId</con:name><con:value>189412</con:value></con:property><con:property><con:name>DUuserPwd</con:name><con:value>test1234</con:value></con:property><con:property><con:name>DUusername2</con:name><con:value>migTestDUser2</con:value></con:property><con:property><con:name>DUuserId2</con:name><con:value>189413</con:value></con:property><con:property><con:name>DUuserOwd2</con:name><con:value>6GCuIKl9</con:value></con:property><con:property><con:name>DUuserPwd2</con:name><con:value>hDw1hacs</con:value></con:property><con:property><con:name>password</con:name><con:value>6X6930er+5</con:value></con:property><con:property><con:name>tokenIdGA</con:name><con:value>b9062a9b37d146198b0cd85497fa65ef</con:value></con:property><con:property><con:name>SAusername</con:name><con:value>migTestSAGA</con:value></con:property><con:property><con:name>SApassword</con:name><con:value>we+7337eL7</con:value></con:property><con:property><con:name>SAuserId</con:name><con:value>10022214</con:value></con:property><con:property><con:name>tokenIdSA</con:name><con:value>d2aa8ed011ef42df825f61c5a99872df</con:value></con:property><con:property><con:name>GAuserAdmin</con:name><con:value>migTestUAGA</con:value></con:property><con:property><con:name>GAuserAdminEmail</con:name><con:value/></con:property><con:property><con:name>GAuserAdminPw</con:name><con:value>Password1</con:value></con:property><con:property><con:name>GAuseAdminId</con:name><con:value>10021929</con:value></con:property><con:property><con:name>GAtokenId</con:name><con:value>51e696d193584544988bbfb04d491e5f</con:value></con:property><con:property><con:name>GAuserAdminId</con:name><con:value>10021967</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Application" searchProperties="true" id="d1ecbb00-1a6a-4b2f-8af2-581ca7749f92"><con:settings/><con:testStep type="restrequest" name="DELETE deleteApplication"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/applications/{applicationId}" methodName="Delete an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteApplication" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="applicationId" value="${#TestSuite#clientId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenIdApp}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>authuser</con:name><con:value>auth</con:value></con:property><con:property><con:name>authpass</con:name><con:value>auth123</con:value></con:property><con:property><con:name>authtokenCA</con:name><con:value>c1dd57d8-5d99-4945-9bb8-72cac276cd63</con:value></con:property><con:property><con:name>authtokenGA</con:name><con:value>db7b457cb0a14df588a0668d689d1d9b</con:value></con:property><con:property><con:name>clientSecret</con:name><con:value>password1</con:value></con:property><con:property><con:name>tokenIdApp</con:name><con:value>f8b1040aa1094773a31f89d2764cd2c3</con:value></con:property><con:property><con:name>authtokenApp</con:name><con:value>10213b37c1b94df398b8f3b7b36e146e</con:value></con:property><con:property><con:name>GAauthuser</con:name><con:value>identityAdminStagingUser</con:value></con:property><con:property><con:name>GAauthpass</con:name><con:value>4bb2X6=1r1</con:value></con:property><con:property><con:name>rackerToken</con:name><con:value>7ff9324a2bbc4c568cdfb0b4b5587f4a</con:value></con:property><con:property><con:name>clientId</con:name><con:value>09db84a13cf887b3633f825bbb4d35be65e4f27d</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional  - Migrate StaticContent"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Authenticate Racker" searchProperties="true" id="7cc837c6-8980-4229-bd29-ad4d91a12043"><con:settings/><con:testStep type="restrequest" name="POST AuthenticateApplication - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST AuthenticateApplication - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth token"><con:settings/><con:config><script>def tokenIdApp = context.expand( '${POST AuthenticateApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info tokenIdApp
assert (tokenIdApp!="");
testRunner.testCase.testSuite.setPropertyValue("tokenIdApp", tokenIdApp)

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createApplication - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/applications" methodName="Add an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createApplication - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request>&lt;application customerId="RCN-987-654-321" description="Foundation Test App" name="${#TestCase#migTestApp}" xmlns="http://idm.api.rackspace.com/v1.0">&lt;roles/>&lt;/application></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@name</path><content>${#TestCase#migTestApp}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@customerId</path><content>RCN-987-654-321</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@enabled</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 3"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:application[1]/@description</path><content>Foundation Test App</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenIdApp}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store new App"><con:settings/><con:config><script>def clientId = context.expand( '${POST createApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/@clientId}' )
log.info clientId;
testRunner.testCase.testSuite.setPropertyValue("clientId",clientId);

def clientSecret = context.expand( '${POST createApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:application[1]/ns3:secretCredentials[1]/@clientSecret}' )
log.info clientSecret;
testRunner.testCase.setPropertyValue("clientSecret",clientSecret);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate Racker"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate Racker" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request>&lt;rackerCredentials password="${#Project#rackerPwd}" username="${#Project#rackerUser}" client_secret="${#TestCase#clientSecret}" client_id="${#TestCase#clientId}" grant_type="PASSWORD" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:auth[1]/ns3:racker[1]/@username</path><content>${#Project#rackerUser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store Racker TOken"><con:settings/><con:config><script>

def rackerToken = context.expand( '${POST authenticate Racker#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )

log.info rackerToken;
testRunner.testCase.testSuite.setPropertyValue("rackerToken",rackerToken);</script></con:config></con:testStep><con:properties><con:property><con:name>migTestApp</con:name><con:value>migTestApp</con:value></con:property><con:property><con:name>clientId</con:name><con:value>09db84a13cf887b3633f825bbb4d35be65e4f27d</con:value></con:property><con:property><con:name>clientSecret</con:name><con:value>c9168e9a43dea32e4d92d4a1b9b57401b00d473b</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Migrate groups" searchProperties="true" id="012379cc-e2ae-4ae1-8d73-087c5d333037"><con:settings/><con:testStep type="restrequest" name="POST Authenticate auth CA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth CA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestSuite#CAauthkey}" username="${#TestSuite#CAauth}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate auth GA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth GA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAadminpass}" username="${#TestSuite#GAadminuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@name</path><content>identity:admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST AuthenticateApplication - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/tokens" methodName="Authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST AuthenticateApplication - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;authCredentials client_id="18e7a7032733486cd32f472d7bd58f709ac0d221" client_secret="${#TestSuite#clientSecret}" grant_type="CLIENT_CREDENTIALS" xmlns="http://idm.api.rackspace.com/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth token"><con:settings/><con:config><script>def authtoken = context.expand( '${POST Authenticate auth CA#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info authtoken
testRunner.testCase.testSuite.setPropertyValue("authtokenCA", authtoken)


def tokenIdGA = context.expand( '${POST Authenticate auth GA#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )

log.info tokenIdGA
testRunner.testCase.testSuite.setPropertyValue("authtokenGA", tokenIdGA)

def tokenIdApp = context.expand( '${POST AuthenticateApplication - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:auth[1]/ns3:access_token[1]/@id}' )
log.info tokenIdApp
testRunner.testCase.testSuite.setPropertyValue("authtokenAPP", tokenIdApp)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createServiceAdmin - xml"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/users" methodName="Add a User" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createServiceAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;user display-name="${#TestCase#SAusername}" enabled="true" email="serviceAdmin@rack.com" username="${#TestCase#SAusername}" OS-KSADM:password="${#TestCase#SApassword}" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:OS-KSADM="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns3='http://idm.api.rackspace.com/v1.0';
//ns3:user[1]/@username</path><content>${#TestCase#SAusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#authtokenAPP}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SA"><con:settings/><con:config><script>def SAuserId = context.expand( '${POST createServiceAdmin - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/@id}' )
assert (SAuserId!="");
testRunner.testCase.setPropertyValue("SAuserId",SAuserId);
log.info SAuserId;

def SApassword = context.expand( '${POST createServiceAdmin - xml#ResponseAsXml#declare namespace ns3=\'http://idm.api.rackspace.com/v1.0\'; //ns3:user[1]/ns3:passwordCredentials[1]/ns3:currentPassword[1]/@password}' )
assert (SApassword!="");
testRunner.testCase.setPropertyValue("SApassword",SApassword);
log.info SApassword;</script></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateServiceAdmin GA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateServiceAdmin GA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#SApassword}" username="${#TestCase#SAusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store SA token"><con:settings/><con:config><script>def tokenIdSA = context.expand( '${POST authenticateServiceAdmin GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )
log.info tokenIdSA
assert (tokenIdSA!="");
testRunner.testCase.setPropertyValue("tokenIdSA",tokenIdSA);</script></con:config></con:testStep><con:testStep type="groovy" name="Create username"><con:settings/><con:config><script>Random r = new Random();
//log.info r.nextInt(10000);
testRunner.testCase.setPropertyValue("username", "migTestUA"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("username");

def req='&lt;v1:user enabled="true" id="'+testRunner.testCase.getPropertyValue("username")+'" key="ba04b108b7cefcbcbf7c4d8bd05e3857" mossoId="5800717" nastId="StagingUS_50b956da-f6d5-488e-9c21-3d05ccd666d4" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/>'
testRunner.testCase.testSteps["POST - createUserAdmin - xml"].setPropertyValue("Request", req)
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUserAdmin - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUserAdmin - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="migTestUA6338" key="ba04b108b7cefcbcbf7c4d8bd05e3857" mossoId="5800717" nastId="StagingUS_50b956da-f6d5-488e-9c21-3d05ccd666d4" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUserAdmin CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUserAdmin CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store userId"><con:settings/><con:config><script>
def userId = context.expand( '${POST authenticateUserAdmin CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get nast ID - " + userId
testRunner.testCase.setPropertyValue("userId", userId)

def tokenId = context.expand( '${POST authenticateUserAdmin CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
testRunner.testCase.setPropertyValue("tokenId", tokenId)</script></con:config></con:testStep><con:testStep type="groovy" name="add req"><con:settings/><con:config><script>//{"user": { "username": "ga1subuser1", "email": "test@rackspace.com", "enabled": true} } 186441
def jsonReq = '{"user": { "username": "${#TestCase#DUusername}", "email": "test@rack.com", "enabled": true, "OS-KSADM:password":"${#TestCase#DUuserPwd}"} }'
def jsonReq2= '{"user": { "username": "${#TestCase#DUusername2}", "email": "test@rack.com", "enabled": true} }'
//set request
testRunner.testCase.testSteps["POST createDefaultUser /w pwd - json"].setPropertyValue("Request", jsonReq);
testRunner.testCase.testSteps["POST createDefaultUser w/o pwd - json"].setPropertyValue("Request",jsonReq2);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createDefaultUser /w pwd - json"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createDefaultUser /w pwd - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>{"user": { "username": "${#TestCase#DUusername}", "email": "test@rack.com", "enabled": true, "OS-KSADM:password":"${#TestCase#DUuserPwd}"} }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST createDefaultUser w/o pwd - json"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createDefaultUser w/o pwd - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>{"user": { "username": "${#TestCase#DUusername2}", "email": "test@rack.com", "enabled": true} }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store defaultUser"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

def responseAsXml = context.expand( '${POST createDefaultUser /w pwd - json#Response}' );
def jsonRes = new JsonSlurper().parseText(responseAsXml);
def userId= jsonRes.'user'.id;
testRunner.testCase.setPropertyValue("DUuserId",userId);
log.info userId;

def responseAsXml2 = context.expand( '${POST createDefaultUser w/o pwd - json#Response}' );
def jsonRes2 = new JsonSlurper().parseText(responseAsXml2);
def userId2= jsonRes2.'user'.id;
testRunner.testCase.setPropertyValue("DUuserId2",userId2);
log.info userId2;

def pwd2= jsonRes2.'user'.'OS-KSADM:password';
testRunner.testCase.setPropertyValue("DUuserPwd2",pwd2);
log.info pwd2;

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate DU1 pwd - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate DU1 pwd - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUuserPwd}" username="${#TestCase#DUusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate DU2 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate DU2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUuserPwd2}" username="${#TestCase#DUusername2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name</path><content>identity:default</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addGroup - xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;group name="migTestGroup1" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">
&lt;description>Creating a new group testGroup1&lt;/description>
&lt;/group></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store Group1"><con:settings/><con:config><script>def groupId1 = context.expand( '${POST - addGroup - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0\'; //ns1:group[1]/@id}' )
assert (groupId1!="");
testRunner.testCase.setPropertyValue("groupId1", groupId1)
log.info groupId1;</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addGroup - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups" methodName="Add a New Group - addGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addGroup - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>{
"RAX-KSGRP:group": {
"name" : "migTestGroup2",
"description" : "Creating a new group testGroup2"
}
}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store Group2"><con:settings/><con:config><script>def responseAsXml = context.expand( '${POST - addGroup - json#ResponseAsXml}' )
def groupId2 = responseAsXml=~/&lt;id>(.*)&lt;\\/id>/;
log.info groupId2[0][1];
testRunner.testCase.setPropertyValue("groupId2", groupId2[0][1]);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET  - getGroup - xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET  - getGroup - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET  - getGroup - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}" methodName="Get Group - getGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET  - getGroup - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups CA - xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups" methodName="Get groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#groupId2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>${#TestCase#groupId1}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store GroupCount"><con:settings/><con:config><script>def responseAsXml = context.expand( '${GET - getGroups CA - xml#ResponseAsXml#declare namespace ns12=\'http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0\'; //ns12:groups[1]}' )
def grp = new XmlSlurper().parseText(responseAsXml)
log.info 'Total number of Groups: '+grp.group.size();
assert (grp.group.size()!=0);
def count=grp.group.size()+'';
testRunner.testCase.setPropertyValue("groupCount",count);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateCAGroups - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/groups" methodName="migrate groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateCAGroups - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getGroups GA - xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups" methodName="Get groups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getGroups GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration/></con:assertion><con:credentials><con:username/><con:password/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store GroupCount GA" disabled="true"><con:settings/><con:config><script>def responseAsXml = context.expand( '${GET - getGroups GA - xml#ResponseAsXml#declare namespace ns12=\'http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0\'; //ns12:groups[1]}' )
def grp = new XmlSlurper().parseText(responseAsXml)
log.info 'Total number of Groups: '+grp.group.size();
assert (grp.group.size()!=0);
def count=grp.group.size()+'';
testRunner.testCase.setPropertyValue("groupCount",count);</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addServiceAdminToGroup - xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addServiceAdminToGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="userId" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addServiceAdminToGroup - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addServiceAdminToGroup - json" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="userId" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserAdminToGroup - xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserAdminToGroup - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - addUserAdminToGroup - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Add User to Group - addUserToGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - addUserAdminToGroup - json" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET listUserAdminGroups CA - xml"><con:settings/><con:config service="Auth1.1_Impl" resourcePath="/${#Project#pathV1}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET listUserAdminGroups CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:groups[1]/ns1:group[1]/@id</path><content>migTestGroup1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:groups[1]/ns1:group[2]/@id</path><content>migTestGroup2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET listDefaultUserGroups CA - xml"><con:settings/><con:config service="Auth1.1_Impl" resourcePath="/${#Project#pathV1}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET listDefaultUserGroups CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:groups[1]/ns1:group[1]/@id</path><content>migTestGroup1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:groups[1]/ns1:group[2]/@id</path><content>migTestGroup2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET listDefaultUser2Groups CA - xml"><con:settings/><con:config service="Auth1.1_Impl" resourcePath="/${#Project#pathV1}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET listDefaultUser2Groups CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:groups[1]/ns1:group[1]/@id</path><content>migTestGroup1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:groups[1]/ns1:group[2]/@id</path><content>migTestGroup2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>${#TestSuite#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Verify SubUserData" disabled="true"><con:settings/><con:config><script>assert testRunner.testCase.getPropertyValue('DUuserPwd2') == context.expand( '${POST migrateUserAdmin - xml#ResponseAsXml#//migrateUserResponseType[1]/users[1]/password[1]}' )
assert testRunner.testCase.getPropertyValue('DUuserPwd') == context.expand( '${POST migrateUserAdmin - xml#ResponseAsXml#//migrateUserResponseType[1]/users[2]/password[1]}' )

</script></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUserAdmin - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUserAdmin - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:user[1]/@username</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedDefaultUser1 - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedDefaultUser1 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='${#Project#endPointJson}/${#Project#migrationPath}/users/migTestDUser';
//ns1:Response[1]/ns1:user[1]/ns1:username[1]</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedDefaultUser2 - json"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedDefaultUser2 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://localhost/idm/migration/cloud/users/migTestDUser2';
//ns1:Response[1]/ns1:user[1]/ns1:username[1]</path><content>${#TestCase#DUusername2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#DUusername2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET listUserAdminGroups GA - xml"><con:settings/><con:config service="Auth1.1_Impl" resourcePath="/${#Project#pathV1}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET listUserAdminGroups GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:groups[1]/ns1:group[1]/@id</path><content>migTestGroup1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:groups[1]/ns1:group[2]/@id</path><content>migTestGroup2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAadminuser}</con:username><con:password>${#TestSuite#GAadminpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET listUserAdminGroups GA v2.0 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path2}/users/{userID}/RAX-KSGRP" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET listUserAdminGroups GA v2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#groupId1}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>${#TestCase#groupId2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userID" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET listServiceAdminGroups GA v2.0 - xml"><con:settings/><con:config service="RAX-KSGRP-admin" resourcePath="/${#Project#path2}/users/{userID}/RAX-KSGRP" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET listServiceAdminGroups GA v2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#groupId1}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1"><con:configuration><token>${#TestCase#groupId2}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userID" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET listDefaultUserGroups GA - xml"><con:settings/><con:config service="Auth1.1_Impl" resourcePath="/${#Project#pathV1}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET listDefaultUserGroups GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:groups[1]/ns1:group[1]/@id</path><content>migTestGroup1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:groups[1]/ns1:group[2]/@id</path><content>migTestGroup2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET listDefaultUser2Groups GA - xml"><con:settings/><con:config service="Auth1.1_Impl" resourcePath="/${#Project#pathV1}/users/{userId}/groups" methodName="GET - getUserGroups" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET listDefaultUser2Groups GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:groups[1]/ns1:group[1]/@id</path><content>migTestGroup1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:groups[1]/ns1:group[2]/@id</path><content>migTestGroup2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#authuser}</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeServiceAdminFromGroup GA- xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeServiceAdminFromGroup GA- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="userId" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeServiceAdminFromGroup GA- json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeServiceAdminFromGroup GA- json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="userId" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeDefaultUserFromGroup GA - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeDefaultUserFromGroup GA - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="userId" value="${#TestCase#DUuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeDefaultUserFromGroup GA - xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeDefaultUserFromGroup GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="userId" value="${#TestCase#DUuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserAdminFromGroup GA - xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserAdminFromGroup GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserAdminFromGroup GA - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserAdminFromGroup GA - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unMigrateUserAdmin"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unMigrateUserAdmin" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET usersForGroup CA - xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}/users" methodName="Get users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET usersForGroup CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:users[1]/ns1:user[3]/@id</path><content>${#TestCase#userId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET usersForGroup CA - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}/users" methodName="Get users for Group" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET usersForGroup CA - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserAdminFromGroup CA - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserAdminFromGroup CA - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - removeUserAdminFromGroup CA - xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}/users/{userId}" methodName="Remove User From Group - removeUserFromGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - removeUserAdminFromGroup CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup CA- xml"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup CA- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteGroup CA - json"><con:settings/><con:config service="RAX-GRPADM" resourcePath="/${#Project#path2}/RAX-GRPADM/groups/{groupId}" methodName="Delete Group - deleteGroup" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteGroup CA - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="groupId" value="${#TestCase#groupId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteDefaultUser CA"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Delete user - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteDefaultUser CA" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteDefaultUser 2 CA"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Delete user - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteDefaultUser 2 CA" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUserAdmin CA"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUserAdmin CA" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteServiceAdmin GA - xml"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Delete user - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteServiceAdmin GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE softDeleteServiceAdmin"><con:settings/><con:config service="GA - SoftDelete" resourcePath="/${#Project#path2}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE softDeleteServiceAdmin" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#SAuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>username</con:name><con:value>migTestUA6338</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>nastId</con:name><con:value>StagingUS_dd3b308b-94f9-43df-ba78-72c4ef77fad3</con:value></con:property><con:property><con:name>mossoId</con:name><con:value>5800317</con:value></con:property><con:property><con:name>userId</con:name><con:value>195065</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>d89d075d-7609-4e9c-826d-63286c65f9b1</con:value></con:property><con:property><con:name>DUusername</con:name><con:value>migTestDUser</con:value></con:property><con:property><con:name>DUuserId</con:name><con:value>195066</con:value></con:property><con:property><con:name>DUuserPwd</con:name><con:value>test1234</con:value></con:property><con:property><con:name>DUusername2</con:name><con:value>migTestDUser2</con:value></con:property><con:property><con:name>DUuserId2</con:name><con:value>195067</con:value></con:property><con:property><con:name>DUuserOwd2</con:name><con:value>6GCuIKl9</con:value></con:property><con:property><con:name>DUuserPwd2</con:name><con:value>WFSjj6nd</con:value></con:property><con:property><con:name>password</con:name><con:value>*****</con:value></con:property><con:property><con:name>groupId1</con:name><con:value>3420</con:value></con:property><con:property><con:name>groupId2</con:name><con:value>3422</con:value></con:property><con:property><con:name>groupCount</con:name><con:value>195</con:value></con:property><con:property><con:name>SAusername</con:name><con:value>migTestSAdmin</con:value></con:property><con:property><con:name>SApassword</con:name><con:value>f!2B8d38re</con:value></con:property><con:property><con:name>SAuserId</con:name><con:value>10008125</con:value></con:property><con:property><con:name>tokenIdSA</con:name><con:value>b5ea607418934bbea3220cc6a9d5d448</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Migrate basURLs" searchProperties="true" id="61a29cc0-fe3a-46b2-ac64-6ca2d5aadeaa"><con:settings/><con:testStep type="restrequest" name="POST Authenticate auth CA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth CA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#authpass}" username="${#TestSuite#authuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;




</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[@id=1]/@id</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate auth GA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth GA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAadminpass}" username="${#TestSuite#GAadminuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth token"><con:settings/><con:config><script>def authtoken = context.expand( '${POST Authenticate auth CA#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
assert (authtoken!="");
log.info authtoken
testRunner.testCase.testSuite.setPropertyValue("authtokenCA", authtoken)

def tokenIdGA = context.expand( '${POST Authenticate auth GA#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )

log.info tokenIdGA
assert (tokenIdGA!="");
testRunner.testCase.testSuite.setPropertyValue("authtokenGA", tokenIdGA)</script></con:config></con:testStep><con:testStep type="groovy" name="Create Username"><con:settings/><con:config><script>Random r = new Random();
//log.info r.nextInt(10000);
testRunner.testCase.setPropertyValue("username", "migTestUA"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("username");</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#username}" key="${#TestCase#key}" mossoId="${#TestCase#MossoId}" nastId="" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser CA V1.1 - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser CA V1.1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestCase#authuser}</con:username><con:password>${#TestCase#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser CA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser CA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#userName}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUser CA V2.0 -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUser CA V2.0 -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store userId"><con:settings/><con:config><script>
def userId = context.expand( '${GET getUser CA V2.0 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
assert (userId!="");
log.info "get nast ID - " + userId
testRunner.testCase.setPropertyValue("userId", userId)

def tokenId = context.expand( '${POST authenticateUser CA V2.0 -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
assert (tokenId!="");
log.info "get token ID - " + tokenId
testRunner.testCase.setPropertyValue("tokenId", tokenId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - baseUrls b4 addBaseUrls - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - baseUrls b4 addBaseUrls - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="${#TestCase#baseUrlId}" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userName}"/>
  <con:entry key="baseURLId" value=""/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseUrls - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseUrls - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="${#TestCase#baseUrlId}" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRef[1]/@id</path><content>${#TestCase#baseUrlId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRef[1]/@v1Default</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#userName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="Delay"><con:settings/><con:config><delay>2000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserAdminbaseUrls CA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserAdminbaseUrls CA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="${#TestCase#baseUrlId}" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>33</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match"><con:configuration/></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#userName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET listAllBaseURLs CA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET listAllBaseURLs CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateBaseUrls \w admin 401"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/baseurls" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateBaseUrls \w admin 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateBaseUrls \w badToken 401"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/baseurls" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateBaseUrls \w badToken 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}bad" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateBaseUrls"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/baseurls" methodName="Method 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateBaseUrls" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#rackerToken}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUser"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUser" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#userName}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getMigratedUser - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getMigratedUser - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser GA V1.1 - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser GA V1.1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAadminuser}</con:username><con:password>${#TestSuite#GAadminpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser GA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser GA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#userName}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticate GA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticate GA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listAllbaseUrls GA - xml" disabled="true"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listAllbaseUrls GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAadminuser}</con:username><con:password>${#TestSuite#GAadminpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceName" value="" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserAdminbaseUrls GA - Xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserAdminbaseUrls GA - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAadminuser}</con:username><con:password>${#TestSuite#GAadminpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#userName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addBaseUrlsAfterMigration - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="POST - addBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addBaseUrlsAfterMigration - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="${#TestCase#baseUrlId2}" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRef[1]/@id</path><content>${#TestCase#baseUrlId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 1"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRef[1]/@v1Default</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAadminuser}</con:username><con:password>${#TestSuite#GAadminpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#userName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserAdminbaseUrls GA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserAdminbaseUrls GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>59</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAadminuser}</con:username><con:password>${#TestSuite#GAadminpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#userName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE removeBaseURLfromUserAdmin GA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs/{baseURLId}" methodName="DELETE - deleteBaseURLRef" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE removeBaseURLfromUserAdmin GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>${#TestSuite#GAadminuser}</con:username><con:password>${#TestSuite#GAadminpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#username}"/>
  <con:entry key="baseURLId" value="${#TestCase#baseUrlId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unimigrateUser - xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unimigrateUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserAdminbaseUrls CA - json"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}/baseURLRefs" methodName="GET - getBaseURLRefs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserAdminbaseUrls CA - json" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="${#TestCase#baseUrlId}" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>33</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XQuery Match" name="XQuery Match"><con:configuration/></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:baseURLRefs[1]/ns1:baseURLRef[1]/@v1Default</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#userName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listTenants - xml" disabled="true"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tenants" methodName="Get Tenants - listTenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listTenants - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Compare UserBaseURLs"><con:settings/><con:config><script>def CAbaseUrl = context.expand( '${GET - listUserAdminbaseUrls CA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns1:baseURLRefs[1]}' )
CAbaseUrl = new XmlSlurper().parseText(CAbaseUrl);
def id=[]
def href=[]
def v1Default=[]



def GAbaseUrl = context.expand( '${GET - listUserAdminbaseUrls GA - Xml#ResponseAsXml#declare namespace ns4=\'http://docs.rackspacecloud.com/auth/api/v1.1\'; //ns4:baseURLRefs[1]}' )
GAbaseUrl = new XmlSlurper().parseText(GAbaseUrl);
log.info CAbaseUrl.baseURLRef.size();
log.info GAbaseUrl.baseURLRef.size();

for(i in 0..GAbaseUrl.baseURLRef.size()-1)
{
	id.add(GAbaseUrl.baseURLRef[i].'@id');	
	href.add(GAbaseUrl.baseURLRef[i].'@href');
	v1Default.add(GAbaseUrl.baseURLRef[i].'@v1Default');		
}
assert (id.size()!=GAbaseUrl.baseURLRef.size()+"")
for(i in 0..CAbaseUrl.baseURLRef.size()-1)
{
	assert id.contains(CAbaseUrl.baseURLRef[i].'@id');	
	assert href.contains(CAbaseUrl.baseURLRef[i].'@href');
	assert v1Default.contains(CAbaseUrl.baseURLRef[i].'@v1Default');		
}
assert (CAbaseUrl.baseURLRef.size()==GAbaseUrl.baseURLRef.size());</script></con:config></con:testStep><con:testStep type="groovy" name="Compare User Responses" disabled="true"><con:settings/><con:config><script>def CAuserId = context.expand( '${POST authenticateUser CA V2.0 -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
def CAuserName=context.expand( '${POST authenticateUser CA V2.0 -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@name}' )
def CAuserRole = context.expand( '${POST authenticateUser CA V2.0 -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@name}' )
def CAtenanatID = context.expand( '${POST authenticateUser CA V2.0 -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/ns1:tenant[1]/@id}' )

def responseAsXml = context.expand( '${POST authenticateUser CA V2.0 -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:serviceCatalog[1]}' )
def CArec = new XmlSlurper().parseText(responseAsXml)
def CAsize=CArec.service.size();
def type=[]
def name=[]
def tenanatId=[]
def publicUrl=[]
log.info CAsize;
for(i in 0..CAsize-1)
{
	type.add(CArec.service[i].'@type');	
	name.add(CArec.service[i].'@name');
	publicUrl.add(CArec.service[i].endpoint[0].'@publicURL')
	tenanatId.add(CArec.service[i].endpoint[0].'@tenantId')
}



def GAuserId = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@id}' )
def GAuserName = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/@name}' )
def GAtenatId = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/ns7:tenant[1]/@id}' )
def rola = context.expand( '${POST authenticate GA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:user[1]/ns7:roles[1]}' )

def rolesGA=new XmlSlurper().parseText(rola);
    log.info rola;
def GAuserRoles=999;
def roleSize=rolesGA.role.size();
for(i in 0..roleSize-1)
{
	if(rolesGA.role[i].'@name'=='identity:user-admin')
	GAuserRoles=rolesGA.role[i].'@name';
}

assert (!(GAuserRoles==999));
def GAResAsXml = context.expand( '${POST authenticate GGA -xml#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:serviceCatalog[1]}' )
def GArec = new XmlSlurper().parseText(GAResAsXml)
def GAsize=GArec.service.size();
log.info GAsize

assert CAuserId==GAuserId;
assert CAuserName==GAuserName;
assert CAtenanatID==GAtenatId;

assert CAuserRole=='identity:user-admin';
assert GAuserRoles=='identity:user-admin';

for(i in 0..GAsize-1)
{
	//log.info  i + "CA:"+ GArec.service[i].'@type'   + " GA:"+ type.get(i);
	assert type.contains(GArec.service[i].'@type');	
	assert name.contains(GArec.service[i].'@name');
	assert publicUrl.contains(GArec.service[1].endpoint[0].'@publicURL')
	assert tenanatId.contains(GArec.service[1].endpoint[0].'@tenantId')
	
}

</script></con:config></con:testStep><con:testStep type="restrequest" name="POST unimigrateUser -xml" disabled="true"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unimigrateUser -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser GA - xml" disabled="true"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE softDeleteUser" disabled="true"><con:settings/><con:config service="GA - SoftDelete" resourcePath="/${#Project#path2}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE softDeleteUser" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser CA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - baseUrls GA - xml 1" disabled="true"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - baseUrls GA - xml 1" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="${#TestCase#baseUrlId}" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#userName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>userName</con:name><con:value>migTestUA5220</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5800376</con:value></con:property><con:property><con:name>nastId</con:name><con:value>StagingUS_dd3b308b-94f9-43df-ba78-72c4ef77fad3</con:value></con:property><con:property><con:name>authuser</con:name><con:value>auth</con:value></con:property><con:property><con:name>authpass</con:name><con:value>auth123</con:value></con:property><con:property><con:name>userId</con:name><con:value>195071</con:value></con:property><con:property><con:name>baseUrlId</con:name><con:value>33</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>f3873b04-564a-45cc-9a8f-cd23e2d64064</con:value></con:property><con:property><con:name>baseUrlId2</con:name><con:value>59</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Migrate secretQA" searchProperties="true" id="95224e13-04e8-4b91-b592-38f43180e3a5"><con:settings/><con:testStep type="restrequest" name="POST Authenticate auth CA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth CA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#authpass}" username="${#TestSuite#authuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST Authenticate auth GA"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST Authenticate auth GA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#GAadminpass}" username="${#TestSuite#GAadminuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:access[1]/ns7:user[1]/ns7:roles[1]/ns7:role[1]/@id</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store auth token"><con:settings/><con:config><script>def authtoken = context.expand( '${POST Authenticate auth CA#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )

log.info authtoken
testRunner.testCase.testSuite.setPropertyValue("authtokenCA", authtoken)
def tokenIdGA = context.expand( '${POST Authenticate auth GA#ResponseAsXml#declare namespace ns7=\'http://docs.openstack.org/identity/api/v2.0\'; //ns7:access[1]/ns7:token[1]/@id}' )

log.info tokenIdGA
testRunner.testCase.testSuite.setPropertyValue("authtokenGA", tokenIdGA)</script></con:config></con:testStep><con:testStep type="groovy" name="create username"><con:settings/><con:config><script>Random r = new Random();
//log.info r.nextInt(10000);
testRunner.testCase.setPropertyValue("username", "migTestUA"+r.nextInt(10000));
log.info testRunner.testCase.getPropertyValue("username");</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - createUser - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users" methodName="POST - createUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - createUser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:user enabled="true" id="${#TestCase#username}" key="${#TestCase#key}" mossoId="${#TestCase#MossoId}" nastId="" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser CA V1.1 - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="GET - getUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser CA V1.1 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns1='http://docs.rackspacecloud.com/auth/api/v1.1';
//ns1:user[1]/@id</path><content>${#TestCase#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:credentials><con:username>${#TestCase#authuser}</con:username><con:password>${#TestCase#authpass}</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getUser CA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getUser CA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestCase#userName}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#userName}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateUser CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateUser CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0"> &lt;apiKeyCredentials apiKey="${#TestCase#key}" username="${#TestCase#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/> &lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store userId"><con:settings/><con:config><script>
def userId = context.expand( '${GET getUser CA V2.0 - xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:user[1]/@id}' )
assert (userId!="");
log.info "get nast ID - " + userId
testRunner.testCase.setPropertyValue("userId", userId)

def tokenId = context.expand( '${POST authenticateUser CA -xml#ResponseAsXml#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
assert (tokenId!="");
log.info "get token ID - " + tokenId
testRunner.testCase.setPropertyValue("tokenId", tokenId)</script></con:config></con:testStep><con:testStep type="groovy" name="add req"><con:settings/><con:config><script>//{"user": { "username": "ga1subuser1", "email": "test@rackspace.com", "enabled": true} } 186441
def jsonReq = '{"user": { "username": "${#TestCase#DUusername}", "email": "test@rack.com", "enabled": true} }'
//set request
testRunner.testCase.testSteps["POST createDefaultUser - json"].setPropertyValue("Request", jsonReq);
//testRunner.testCase.testSteps["POST createDefaultUser w/o pwd - json"].setPropertyValue("Request",jsonReq2);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST createDefaultUser - json"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users" methodName="Add user - addUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST createDefaultUser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request>{"user": { "username": "${#TestCase#DUusername}", "email": "test@rack.com", "enabled": true} }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestCase#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET getDefaultUser CA V2.0 - xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/users" methodName="Get a User by Name - getUserByName" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET getDefaultUser CA V2.0 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:user[1]/@username</path><content>${#TestCase#DUusername}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#DUusername}"/>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store DU"><con:settings/><con:config><script>def responseAsXml = context.expand( '${POST createDefaultUser - json#ResponseAsXml}' )
def DUuserId= responseAsXml=~/&lt;id>(.*)&lt;\\/id>/;
log.info DUuserId[0][1];
assert (DUuserId!="");
testRunner.testCase.setPropertyValue("DUuserId",DUuserId[0][1]);


def DUpwd= responseAsXml=~/&lt;OS-KSADM:password>(.*)&lt;\\/OS-KSADM:password>/;
log.info DUpwd[0][1];
assert (DUpwd!="");
testRunner.testCase.setPropertyValue("DUpwd",DUpwd[0][1]);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST authenticateDefaultUser CA -xml"><con:settings/><con:config service="Identity -admin" resourcePath="/${#Project#path2}/tokens" methodName="Authenticate for Service API - authenticate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST authenticateDefaultUser CA -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestCase#DUpwd}" username="${#TestCase#DUusername}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserAdminSecretQA - xml"><con:settings/><con:config service="RAX-KSQA" resourcePath="/${#Project#path2}/users/{userId}/RAX-KSQA/secretqa" methodName="get secretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserAdminSecretQA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Store UA QA"><con:settings/><con:config><script>def question = context.expand( '${GET - listUserAdminSecretQA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0\'; //ns1:secretQA[1]/@question}' )
def answer = context.expand( '${GET - listUserAdminSecretQA - xml#ResponseAsXml#declare namespace ns1=\'http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0\'; //ns1:secretQA[1]/@answer}' )
assert (question!="");
assert (answer !="");
testRunner.testCase.setPropertyValue("que",question);
testRunner.testCase.setPropertyValue("ans",answer);
</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listDefaultUserSecretQA - xml"><con:settings/><con:config service="RAX-KSQA" resourcePath="/${#Project#path2}/users/{userId}/RAX-KSQA/secretqa" methodName="get secretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listDefaultUserSecretQA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST migrateUserAdmin"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}" methodName="users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST migrateUserAdmin" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#userName}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserAdminSecretQA GA - xml"><con:settings/><con:config service="RAX-KSQA" resourcePath="/${#Project#path2}/users/{userId}/RAX-KSQA/secretqa" methodName="get secretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserAdminSecretQA GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Compare UA QA"><con:settings/><con:config><script>def UAQ = context.expand( '${GET - listUserAdminSecretQA GA - xml#ResponseAsXml#declare namespace ns11=\'http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0\'; //ns11:secretQA[1]/@question}' )
def UAA = context.expand( '${GET - listUserAdminSecretQA GA - xml#ResponseAsXml#declare namespace ns11=\'http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0\'; //ns11:secretQA[1]/@answer}' )
assert (UAQ==testRunner.testCase.getPropertyValue("que"));
assert (UAA==testRunner.testCase.getPropertyValue("ans"));</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listDefaultUserSecretQA GA - Json"><con:settings/><con:config service="RAX-KSQA" resourcePath="/${#Project#path2}/users/{userId}/RAX-KSQA/secretqa" methodName="get secretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listDefaultUserSecretQA GA - Json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateUserSecretQA GA - xml"><con:settings/><con:config service="RAX-KSQA" resourcePath="/${#Project#path2}/users/{userId}/RAX-KSQA/secretqa" methodName="update secretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateUserSecretQA GA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a test?"
answer="Yes"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - updateDefaultUserSecretQA GA - xml"><con:settings/><con:config service="RAX-KSQA" resourcePath="/${#Project#path2}/users/{userId}/RAX-KSQA/secretqa" methodName="update secretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - updateDefaultUserSecretQA GA - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
question="Is this a DefaultTest?"
answer="Yes"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserAdminSecretQA GA - Xml"><con:settings/><con:config service="RAX-KSQA" resourcePath="/${#Project#path2}/users/{userId}/RAX-KSQA/secretqa" methodName="get secretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserAdminSecretQA GA - Xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listDefaultUserSecretQA GA - json"><con:settings/><con:config service="RAX-KSQA" resourcePath="/${#Project#path2}/users/{userId}/RAX-KSQA/secretqa" methodName="get secretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listDefaultUserSecretQA GA - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST unimigrateUser -xml"><con:settings/><con:config service="Migration Resources" resourcePath="/${#Project#migrationPath}/users/{username}/unmigrate" methodName="unmigrate" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST unimigrateUser -xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==202</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="username" value="${#TestCase#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#rackerToken}"/>
  <con:entry key="X-Auth_token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserAdminSecretQA CA - xml"><con:settings/><con:config service="RAX-KSQA" resourcePath="/${#Project#path2}/users/{userId}/RAX-KSQA/secretqa" methodName="get secretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserAdminSecretQA CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listDefaultUserSecretQA CA - Json"><con:settings/><con:config service="RAX-KSQA" resourcePath="/${#Project#path2}/users/{userId}/RAX-KSQA/secretqa" methodName="get secretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listDefaultUserSecretQA CA - Json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser GA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser GA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#DUusername}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE softDeleteUser"><con:settings/><con:config service="GA - SoftDelete" resourcePath="/${#Project#path2}/softDeleted/users/{user_id}" methodName="Delete from soft delete - softDeleted" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE softDeleteUser" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenGA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteDefaultUser CA"><con:settings/><con:config service="OS-KSADM" resourcePath="/${#Project#path2}/users/{userId}" methodName="Delete user - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteDefaultUser CA" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#EndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204
def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#DUuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#authtokenCA}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - deleteUser CA - xml"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/users/{userId}" methodName="DELETE - deleteUser" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - deleteUser CA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204

def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def flag=0;
for(request_header_key in messageExchange.getResponseHeaders().getKeys())
{
		if(request_header_key=="response-source")
		{
			flag=1;		
		}
}
if(!flag) assert false;</scriptText></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>auth123</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#username}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - baseUrls GA - xml 1" disabled="true"><con:settings/><con:config service="Auth1.1_Routing" resourcePath="/${#Project#path}/baseURLs" methodName="GET - getBaseURLs" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - baseUrls GA - xml 1" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#endPoint}</con:endpoint><con:request>&lt;v1:baseURLRef id="${#TestCase#baseUrlId}" v1Default="true" xmlns:v1="http://docs.rackspacecloud.com/auth/api/v1.1"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText/></con:configuration></con:assertion><con:credentials><con:username>auth</con:username><con:password>Auth1234</con:password></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestCase#userName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>userName</con:name><con:value>migTestUA2437</con:value></con:property><con:property><con:name>key</con:name><con:value>ba04b108b7cefcbcbf7c4d8bd05e3857</con:value></con:property><con:property><con:name>MossoId</con:name><con:value>5800376</con:value></con:property><con:property><con:name>nastId</con:name><con:value>StagingUS_dd3b308b-94f9-43df-ba78-72c4ef77fad3</con:value></con:property><con:property><con:name>authuser</con:name><con:value>auth</con:value></con:property><con:property><con:name>authpass</con:name><con:value>auth123</con:value></con:property><con:property><con:name>userId</con:name><con:value>195073</con:value></con:property><con:property><con:name>baseUrlId</con:name><con:value>33</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>2cd34046-e293-43b0-b0fd-3b80b4f15f98</con:value></con:property><con:property><con:name>que</con:name><con:value>What is your favorite color?</con:value></con:property><con:property><con:name>ans</con:name><con:value>RackerRed</con:value></con:property><con:property><con:name>DUusername</con:name><con:value>migTestDUser89</con:value></con:property><con:property><con:name>DUuserId</con:name><con:value>195074</con:value></con:property><con:property><con:name>DUpwd</con:name><con:value>7QTdd6tP</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Delete Application" searchProperties="true" id="77e1a363-c136-4aae-8801-c7c897b0c4c3"><con:settings/><con:testStep type="restrequest" name="DELETE deleteApplication"><con:settings/><con:config service="FoundationAPI" resourcePath="/${#Project#foundationPath}/applications/{applicationId}" methodName="Delete an Application" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE deleteApplication" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#FoundEndPoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode==204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="applicationId" value="${#TestSuite#clientId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenIdApp}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>authuser</con:name><con:value>auth</con:value></con:property><con:property><con:name>authpass</con:name><con:value>auth123</con:value></con:property><con:property><con:name>authtokenCA</con:name><con:value>9923d65a-fd18-4d31-9d24-6baf6d15f869</con:value></con:property><con:property><con:name>authtokenGA</con:name><con:value>e9b92686f412496986f96e9bc7c97c7c</con:value></con:property><con:property><con:name>CAauth</con:name><con:value>migration_user</con:value></con:property><con:property><con:name>CAauthkey</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>clientSecret</con:name><con:value>password1</con:value></con:property><con:property><con:name>authtokenAPP</con:name><con:value>2b81df3963ba4561a4303030c18bd0b3</con:value></con:property><con:property><con:name>tokenIdApp</con:name><con:value>2b81df3963ba4561a4303030c18bd0b3</con:value></con:property><con:property><con:name>clientId</con:name><con:value>09db84a13cf887b3633f825bbb4d35be65e4f27d</con:value></con:property><con:property><con:name>rackerToken</con:name><con:value>ac2619a8e5f54dc9bbd3a2e38ef638e4</con:value></con:property><con:property><con:name>GAadminpass</con:name><con:value>4bb2X6=1r1</con:value></con:property><con:property><con:name>GAadminuser</con:name><con:value>identityAdminStagingUser</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:requirements/><con:properties><con:property><con:name>endPoint</con:name><con:value>https://staging.rackidentity.api.rackspacecloud.com</con:value></con:property><con:property><con:name>endPointJson</con:name><con:value>https://staging.rackidentity.api.rackspacecloud.com</con:value></con:property><con:property><con:name>path</con:name><con:value>cloud/v1.1</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>ed78e722-cdca-4ac2-a125-ade36ffa46d2</con:value></con:property><con:property><con:name>authuser</con:name><con:value>auth</con:value></con:property><con:property><con:name>authpass</con:name><con:value>auth123</con:value></con:property><con:property><con:name>adminpath</con:name><con:value>auth-admin</con:value></con:property><con:property><con:name>path2</con:name><con:value>cloud/v2.0</con:value></con:property><con:property><con:name>migrationPath</con:name><con:value>migration/cloud</con:value></con:property><con:property><con:name>pathV1</con:name><con:value>cloud/v1.1</con:value></con:property><con:property><con:name>foundationPath</con:name><con:value>v1</con:value></con:property><con:property><con:name>rackerUser</con:name><con:value>mant0623</con:value></con:property><con:property><con:name>rackerPwd</con:name><con:value>Racker39</con:value></con:property><con:property><con:name>FoundEndPoint</con:name><con:value>https://staging.rackidentity.api.rackspacecloud.com</con:value></con:property><con:property><con:name>migrationEndpoint</con:name><con:value>https://staging.rackidentity.api.rackspacecloud.com</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting></con:soapui-project>