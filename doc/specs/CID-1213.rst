.. _CID-1213:

===================================
Review codescan (Checkmarx) results
===================================

Description
___________

Last year we've migrated from Veracode to Checkmarx.  We added it to our pipeline, and got a bunch of findings.  
This story is to identify which are the real issues, fix/prioritize them for fix, and implement incremental
scanning for Checkmarx to only find issues on new code.

The good news is that while there are a lot of issues, they're mostly grouped by a set of exploits. E.g. a large number of them are due to us explicitly throwing a NullPointerException in a specific code path. Fixing that, or setting that to invalid, would half the number of issues we have. As part of this story, we want to identify all those groups and, if a lot of issue types are found, we can then create stories to further split up those groups. At a glance, though, it looks like we only have a small number of issues to fix.

Business Acceptance Criteria
____________________________

1. Go over high priorities, identify and create test cases for findings that can be exploited.  Create stories with Sev 1.
2. Go over medium priorities.  identify and create test cases for findings that can be exploited.  Create stories with Sev 2.
3. Go over low priorities.  identify and create test case for findings that can be exploited.  Create stories with Sev 3.
4. Mark all findings that cannot be exploited or that are found as non-issue as invalid so that they don't come up in future scans.
5. Determine initial process by which we'll address issues found.  Document the process in one-wiki or internal docs.
6. Currently, the tracking of invalid findings is out of scope.  A follow up story will be created to track them and will define the means to track them.

Test Acceptance Criteria
________________________

TBD
