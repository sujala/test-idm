.. _CID-1324:

===============================================
Allow a contactId to be set on a federated user
===============================================

Description
-----------
To support dedicated federation a **contactId** must be able to be set on a
federated user. The **contactId** can not be set as part of the SAML federation,
but must be done after the federated user is already created - an update of a
federated user. The only attribute that can be updated on a fed user is the
**contactId** and, similar to other attributes, the **contactId** can not be blanked
out once it is set to a value. If the update request for a federated user
includes a blank **contactId**, then the update is a no-op.

The update service should then return the federated user details similar to the
get user by ID for a federated user - including the **contactId**.

Implementation
--------------

Revamp identity's v2.0 update user call (v2.0/users/{userId}) to allow updating
federated users's **contactId**. The service must determine whether a user is
provisioned or federated. If the user is federated, the service must provide
following logic.

1. Maintain same permissions as for updating a **contactId** on a provisioned user.
 a) Users with role ``identity:service-admin``, or ``identity:admin`` are allowed to make this update.
2. Allow updating **RAX-AUTH:contactId** on federated users
 a) Validate **contactId** length is less than 64 characters.
   - Update the v2.0 create and update user calls to perform this validation
 b) If **contactId** is not provided, the service is just a no-op. Return 200 OK.
 c) Once the attribute is set, it cannot be blank out.
3. Any other attributes passed in the request are ignored.
4. Response must include same details as get user by ID.
5. Return 404 Not Found if the federated user is not found.

Business Acceptance Criteria
----------------------------
#. Implement above changes for specified service
#. Update internal documentation to reflect these changes.
#. Update 3.19 release notes.

Test Acceptance Criteria
------------------------

1. Happy Path - Create a federated user with a SAML login. POST v2.0/users/{userId} on 
   the user to update contactId. Verify that contactId is included in the reponse for POST as well as GET v2.0/users/{userId}.
2. Verify access control - Only identity:service-admin & identity:admin should be able
   to update contactId on federated users. user admin, user manage in the same domain & different domains should get back HTTP 403.
3. Include tests for contactId validations - more than maximum length, invalid contact Id
4. Test to verify that empty contactId in the POST results in a NOOP
5. Set ContactId with a POST v2.0/users/{userId}. Update the contactId agin with another POST request.
   Create a federated user with a SAML login. POST v2.0/users/{userId} on the user to update contactId. Verify that contactId in the reponse for POST as well as GET v2.0/users/{userId} is the updated one.
6. Set ContactId with a POST v2.0/users/{userId}. Update the contactId to be empty with another POST request.
   The second request will fail. GET v2.0/users/{userId} will reflect the original ContactId
