<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="Auth2.0 Keystone - RAX - US - dev" resourceRoot="" soapui-version="4.5.1" abortOnError="false" runType="SEQUENTIAL" activeEnvironment="Default" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Functional - RAX-KSQA-admin"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="C:\Users\mant0623\Desktop\Report_release 1.0.8\V2.0 - Cloud\External\Functional - RAX-KSQA-admin"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="Functional - identity-admin"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value="C:\Users\mant0623\Desktop\Reports\Internal\Cloud_Scripts\2.0\Fucntional-identity_admin"/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="C:\Users\mant0623\Desktop\Reports\Internal\Cloud_Scripts\2.0\Fucntional-identity_admin"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="identity-admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters/><con:resource name="extensions" path="extensions"><con:settings/><con:parameters/><con:resource name="{alias}" path="{alias}"><con:settings/><con:parameters><con:parameter><con:name>alias</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Extension Details" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:extension</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Extensions" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:extensions</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tokens" path="tokens"><con:settings/><con:parameters/><con:resource name="{tokenId}" path="{tokenId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>tokenId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="endpoints" path="endpoints"><con:settings/><con:parameters/><con:method name="List Endoints for a Token" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoints</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Validate Token" method="GET"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Check Token" method="HEAD"><con:settings/><con:parameters><con:parameter><con:name>belongsTo</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Authenticate for Service API" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:auth</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:access</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403 401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:userDisabled</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="users" path="users"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="List User Global Roles" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a User by ID" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get a User by Name" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{user_id}" path="{user_id}"><con:settings/><con:parameters><con:parameter required="true"><con:name>user_id</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:method name="List Roles for User on Tenant" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource><con:method name="Get Tenants by ID" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Tenants" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenants</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Get tenants by name" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Version Details" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/common/api/v1.0">v1:version</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="OS-KSADM-admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="OS-KSADM" path="RAX-KSADM"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add Global roles to a user." method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Global Roles on User." method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="enabled" path="enabled"><con:settings/><con:parameters/><con:method name="Set user enabled." method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="credentials" path="credentials"><con:settings/><con:parameters/><con:resource name="{credential-type}" path="/{credential-type}"><con:settings/><con:parameters><con:parameter><con:name>credential-type</con:name><con:value/><con:style>TEMPLATE</con:style><con:default/></con:parameter></con:parameters><con:method name="Update user credential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:35357</con:endpoint><con:request>&lt;v2:credential xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Delete user credential" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get user Credentials" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add user Credential." method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credential</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:35357</con:endpoint><con:request>&lt;v2:credential xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="List Credentials" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource><con:method name="Update user" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:35357</con:endpoint><con:request>&lt;v2:user xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="Delete user" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List users" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:userss</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add user" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:user</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="tenants" path="tenants"><con:settings/><con:parameters/><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add roles to a user on a tenant." method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete roles from a user on tenant." method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource><con:method name="List users for a Tenant." method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Update Tenant" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete a Tenant" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add Tenant" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:tenant</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="roles" path="roles"><con:settings/><con:parameters/><con:resource name="{roleId}" path="{roleId}"><con:settings/><con:parameters><con:parameter><con:name>roleId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Role" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Role" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Role By Name" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List Roles" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:roles</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Role" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:role</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:resource name="services" path="services"><con:settings/><con:parameters/><con:resource name="{serviceId}" path="{serviceId}"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Service" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Service" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Services" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:services</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Service" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get Service" method="GET"><con:settings/><con:parameters><con:parameter required="true"><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0">v1:service</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="OS-KSCATALOG-admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters/><con:resource name="tenants" path="tenants"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{tenantId}" path="{tenantId}"><con:settings/><con:parameters><con:parameter><con:name>tenantId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="OS-KSCATALOG" path="OS-KSCATALOG"><con:settings/><con:parameters/><con:resource name="endpoints" path="endpoints"><con:settings/><con:parameters/><con:resource name="{endpointId}" path="{endpointId}"><con:settings/><con:parameters><con:parameter><con:name>endpointId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Endpoint" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoint</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Endpoint." method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Endpoints" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoints</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Endpoint" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplate</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:endpoint</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource><con:resource name="OS-KSCATALOG" path="OS-KSCATALOG"><con:settings/><con:parameters/><con:resource name="endpointTemplates" path="endpointTemplates"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="{endpointTemplateId}" path="{endpointTemplateId}"><con:settings/><con:parameters><con:parameter><con:name>endpointTemplateId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Get Endpoint Template" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplate</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Endpoint Template." method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="List Endpoint Templates" method="GET"><con:settings/><con:parameters><con:parameter><con:name>serviceId</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplates</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add Endpoint Template" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplate</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">v1:endpointTemplate</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="OS-KSEC2-admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="credentials" path="credentials"><con:settings/><con:parameters/><con:resource name="OS-KSEC2:ec2Credentials" path="OS-KSEC2:ec2Credentials"><con:settings/><con:parameters/><con:method name="Update user credential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete user credential" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get user Credentials" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add user Credential." method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0">v1:ec2Credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List Credentials" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-KSGRP-admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="RAX-KSGRP" path="RAX-KSGRP"><con:settings/><con:parameters/><con:method name="List Groups for a User" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSGRP/v1.0">v1:groups</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-KSKEY-admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter required="true"><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="OS-KSADM" path="OS-KSADM"><con:settings/><con:parameters/><con:resource name="credentials" path="credentials"><con:settings/><con:parameters/><con:resource name="RAX-KSKEY:apiKeyCredentials" path="RAX-KSKEY:apiKeyCredentials"><con:settings/><con:parameters/><con:method name="Update user credential" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSKEY/v1.0">v1:apiKeyCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSKEY/v1.0">v1:apiKeyCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete user credential" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Get user Credentials" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSKEY/v1.0">v1:apiKeyCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Add user Credential." method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSKEY/v1.0">v1:apiKeyCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSKEY/v1.0">v1:apiKeyCredentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="List Credentials" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:credentials</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-KSQA-admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters><con:parameter required="true"><con:name>X-Auth-Token</con:name><con:value xsi:nil="true"/><con:style>HEADER</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="users" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="RAX-KSQA" path="RAX-KSQA"><con:settings/><con:parameters/><con:resource name="secretqa" path="secretqa"><con:settings/><con:parameters/><con:method name="Get User SecretQA" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSQA/v1.0">v1:secretQA</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Update User SecretQA" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSQA/v1.0">v1:secretQA</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.openstack.org/identity/api/ext/RAX-KSQA/v1.0">v1:secretQA</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:resource></con:resource></con:interface><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="RAX-GRPADM-admin" type="rest" basePath="" definitionUrl="" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:35357</con:endpoint><con:endpoint>${#Project#Endpoint}</con:endpoint></con:endpoints><con:resource name="v2.0" path="${#Project#path}"><con:settings/><con:parameters/><con:resource name="RAX-GRPADM" path="RAX-GRPADM"><con:settings/><con:parameters/><con:resource name="Volume List" path="groups"><con:settings/><con:parameters/><con:resource name="{groupId}" path="{groupId}"><con:settings/><con:parameters><con:parameter><con:name>groupId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:resource name="Volume List" path="users"><con:settings/><con:parameters/><con:resource name="{userId}" path="{userId}"><con:settings/><con:parameters><con:parameter><con:name>userId</con:name><con:value xsi:nil="true"/><con:style>TEMPLATE</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:method name="Add User to Group" method="PUT"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Remove User From Group" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Users For Group" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:users</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Group" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Update a Group" method="PUT"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Delete Group" method="DELETE"><con:settings/><con:parameters/><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource><con:method name="Get Groups" method="GET"><con:settings/><con:parameters><con:parameter><con:name>marker</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>limit</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:int</con:type><con:default xsi:nil="true"/></con:parameter><con:parameter><con:name>name</con:name><con:value xsi:nil="true"/><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default xsi:nil="true"/></con:parameter></con:parameters><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>200 203</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:groups</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>200 203</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method><con:method name="Add a New Group" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="REQUEST" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:v1="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0">v1:group</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:status>201</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/xml</con:mediaType><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:identityFault</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="RESPONSE" id=""><con:mediaType>application/json</con:mediaType><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>400</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badRequest</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:unauthorized</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>401</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>403</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:forbidden</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>403</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMethod</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>413</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:overLimit</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>413</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>503</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:serviceUnavailable</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>503</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:itemNotFound</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>404</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/xml</con:mediaType><con:status>415</con:status><con:params/><con:element xmlns:v2="http://docs.openstack.org/identity/api/v2.0">v2:badMediaType</con:element><con:description xsi:nil="true"/></con:representation><con:representation type="FAULT" id=""><con:mediaType>application/json</con:mediaType><con:status>415</con:status><con:params/><con:element xsi:nil="true"/><con:description xsi:nil="true"/></con:representation><con:request name="Request 1"><con:settings/><con:endpoint>http://localhost:35357</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:request></con:method></con:resource></con:resource></con:resource></con:interface><con:testSuite name="Functional - identity-admin - Public Calls"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Versions" searchProperties="true" id="39b901a2-a1bb-4ee8-a358-52c21ba0e23c" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="GET - getVersion - xml"><con:settings/><con:config service="identity-admin" methodName="Version Details" resourcePath="/${#Project#path}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getVersion - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - getVersionInfo - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id="v2.0"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getVersion - json"><con:settings/><con:config service="identity-admin" methodName="Version Details" resourcePath="/${#Project#path}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getVersion - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - getVersionInfo - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"id":"v2.0"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - getVersion - json#Response}' )

def jsonObj = new JsonSlurper().parseText(jsonResp)
log.info jsonObj
def id = jsonObj."version".id
assert id == "v2.0"
def mediaTypes = jsonObj."version"."media-types"
assert mediaTypes != null
def base = jsonObj."version"."media-types"."values".base
def type = jsonObj."version"."media-types"."values".type
log.info base.size()
for (i=0; i&lt;base.size(); i++)
{
	log.info base[i]
	log.info type[i]
	assert base[i] != null
	assert type[i] != null
}
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [media-types]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}';
exists( //ns1:Response/ns1:version/ns1:media-types/ns1:values)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/${#Project#path}';
//ns1:Response[1]/ns1:version[1]/ns1:media-types[1]/ns1:values[1]/ns1:e[1]/ns1:base[1]</path><content>application/xml</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match 2" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/${#Project#path}';
//ns1:Response[1]/ns1:version[1]/ns1:media-types[1]/ns1:values[1]/ns1:e[2]/ns1:base[1]</path><content>application/json</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Extensions" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1b86dab1-ad75-4163-bda1-3b0dc40c7953"><con:settings/><con:testStep type="restrequest" name="GET - listExtension - xml"><con:settings/><con:config service="identity-admin" methodName="List Extensions" resourcePath="/${#Project#path}/extensions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listExtension - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listExtension - json"><con:settings/><con:config service="identity-admin" methodName="List Extensions" resourcePath="/${#Project#path}/extensions" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listExtension - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>"alias":"RAX-KSKEY"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>"alias":"RAX-KSGRP"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - listExtension - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def alias = jsonObj."extensions".alias
for (i=0; i&lt;alias.size(); i++)
{
	assert alias[i] != null
}

def links = jsonObj."extensions".links
log.info links.size()

for (i=0; i&lt;links.size(); i++)
{
	log.info links[i]
	for (link in links[i]) 
	{
		log.info link
		for (e in link)
		{
			//log.info e.key
			//log.info e.value
			if (e.value.toString().equals("null"))
			{
				log.info e.key
				assert false
				//break
			}
		}
	}

}
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script"><con:settings/><con:config><script>def extAlias = context.expand( '${GET - listExtension - xml#Response#declare namespace ns3=\'http://docs.openstack.org/common/api/v1.0\'; //ns3:extensions[1]/ns3:extension[1]/@alias}' )
log.info "extAlias: " + extAlias

if (extAlias == "" | extAlias == null)
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("extAlias", extAlias)
</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - extension - xml"><con:settings/><con:config service="identity-admin" methodName="Get Extension Details" resourcePath="/${#Project#path}/extensions/{alias}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - extension - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestSuite#extAlias}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${#TestSuite#extAlias}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - extension - json"><con:settings/><con:config service="identity-admin" methodName="Get Extension Details" resourcePath="/${#Project#path}/extensions/{alias}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - extension - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestSuite#extAlias}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>"alias":"RAX-KSKEY"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${#TestSuite#extAlias}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - extension - badAlias 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Get Extension Details" resourcePath="/${#Project#path}/extensions/{alias}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - extension - badAlias 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${#TestCase#badAlias}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - extension - badAlias 404 - json"><con:settings/><con:config service="identity-admin" methodName="Get Extension Details" resourcePath="/${#Project#path}/extensions/{alias}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - extension - badAlias 404 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="alias" value="${#TestCase#badAlias}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>badAlias</con:name><con:value>badAlias</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Tokens" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="c8e53dcb-3627-45d6-b893-921d6fd3a56a"><con:settings/><con:testStep type="restrequest" name="POST - getToken - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@id]"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.openstack.org/identity/api/v2.0"
def node = holder.getDomNode( "//ns1:access[1]/ns1:token[1]/@id" )

assert node != null
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token"><con:settings/><con:config><script>def token = context.expand( '${POST - getToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get Token: " + token
testRunner.testCase.testSuite.setPropertyValue("tokenId", token)</script></con:config></con:testStep><con:testStep type="groovy" name="store user info"><con:settings/><con:config><script>def tenantId = context.expand( '${POST - getToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:serviceCatalog[1]/ns1:service[2]/ns1:endpoint[1]/@tenantId}' )
//testRunner.testCase.testSuite.setPropertyValue("tenantId", tenantId)

def userId = context.expand( '${POST - getToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="transfer" name="transfer request"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body-json</con:name><con:sourceType>request1</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - Authenticate by passwordCredential - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate by passwordCredential - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate by passwordCredential - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username}", "password":"${#TestSuite#password}" } } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>"id":"${#TestSuite#tokenId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="compare tokens"><con:settings/><con:config><script>def token = context.expand( '${POST - getToken - xml#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:token[1]/@id}' )
log.info "get Token xml: " + token

def jsonToken = context.expand( '${POST - Authenticate by passwordCredential - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#path}/tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )
log.info "get Token json: " + jsonToken

if (token != jsonToken)
{
	assert false;	
}
else assert true;</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken w valid auth token - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken w valid auth token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken w invalid auth token - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken w invalid auth token - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getAuthToken - xml" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getAuthToken - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#Project#auth-pass}" username="${#Project#auth-user}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@id]"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.openstack.org/identity/api/v2.0"
def node = holder.getDomNode( "//ns1:access[1]/ns1:token[1]/@id" )

assert node != null
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store auth token" disabled="true"><con:settings/><con:config><script>def token = context.expand( '${POST - getAuthToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info token
testRunner.testCase.testSuite.project.setPropertyValue("auth-token", token)
</script></con:config></con:testStep><con:testStep type="groovy" name="set json request"><con:settings/><con:config><script>def json_request = '{ "auth":{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#username}", "apiKey":"${#TestSuite#apiKey}" } } }'

testRunner.testCase.testSteps["POST - Authenticate by apiKeyCredential valid tenant Id - json 2"].setPropertyValue("Request", json_request)

def json_req1 = '{"auth":{"passwordCredentials":{"username":"${#TestSuite#username}","password":"${#TestSuite#password}"},"tenantId":"${#TestSuite#tenantId}"}}'

testRunner.testCase.testSteps["POST - Authenticate by passwordCredential w tenantId - json"].setPropertyValue("Request", json_req1)

def json_req2 = '{"auth":{"passwordCredentials":{"username":"${#TestSuite#username}","password":"${#TestSuite#password}"},"tenantName":"${#TestSuite#tenantname}"}}'

testRunner.testCase.testSteps["POST - Authenticate by passwordCredential w tenantName - json"].setPropertyValue("Request", json_req2)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate by passwordCredential w tenantId - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate by passwordCredential w tenantId - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth":{"passwordCredentials":{"username":"${#TestSuite#username}","password":"${#TestSuite#password}"},"tenantId":"${#TestSuite#tenantId}"}}</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>"id":"${#TestSuite#tokenId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate by passwordCredential w tenantName - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate by passwordCredential w tenantName - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth":{"passwordCredentials":{"username":"${#TestSuite#username}","password":"${#TestSuite#password}"},"tenantName":"${#TestSuite#tenantname}"}}</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>"id":"${#TestSuite#tokenId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Check result json" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Authenticate by passwordCredential w tenantName - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def tenantId = jsonObj."access"."token"."tenant".id
log.info tenantId
def id = context.expand( '${#TestSuite#tenantId}' )
assert tenantId == id
def tenantName = jsonObj."access"."token"."tenant".name
log.info tenantName
def name = context.expand( '${#TestSuite#tenantname}' )
assert tenantName == name
def endpoints = jsonObj."access"."serviceCatalog".endpoints
log.info endpoints.size()
def tenants = jsonObj."access"."serviceCatalog"."endpoints".tenantId
log.info tenants
def tenantname = context.expand( '${#TestSuite#tenantname}' )
for (i=0; i&lt;endpoints.size(); i++)
{
	def tenant =  jsonObj."access"."serviceCatalog".endpoints[i].tenantId
	log.info tenant
	assert tenant[0] == tenantname
}</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate by apiKeyCredential no tenant Id - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate by apiKeyCredential no tenant Id - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="${#TestSuite#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate by apiKeyCredential no tenant Id - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate by apiKeyCredential no tenant Id - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="${#TestSuite#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>"id":"${#TestSuite#tokenId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="get Data"><con:settings/><con:config><script>//get token
def token = context.expand( '${POST - Authenticate by apiKeyCredential no tenant Id - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "Token: " + token;

//get tenant id for cloudFilesCDN
def tenantId1 = context.expand( '${POST - Authenticate by apiKeyCredential no tenant Id - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:serviceCatalog[1]/ns1:service[@name="cloudFilesCDN"]/ns1:endpoint[1]/@tenantId}' )
log.info "tenantId: "+ tenantId1

//get tenant Id for Cloud Server
def tenantId2 = context.expand( '${POST - Authenticate by apiKeyCredential no tenant Id - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:serviceCatalog[1]/ns1:service[@name="cloudServers"]/ns1:endpoint[1]/@tenantId}' )
log.info "tenantId: "+ tenantId2

//Store data
testRunner.testCase.setPropertyValue("tokenId", token);
testRunner.testCase.setPropertyValue("tenantId1", tenantId1);
testRunner.testCase.setPropertyValue("tenantId2", tenantId2);
//testRunner.testCase.testSuite.setPropertyValue("tokenId", token);
testRunner.testCase.testSuite.setPropertyValue("tenantId", tenantId1);
testRunner.testCase.testSuite.setPropertyValue("tenantId2", tenantId2);
testRunner.testCase.testSuite.setPropertyValue("tenantName", tenantId1);
testRunner.testCase.testSuite.setPropertyValue("tenantName2", tenantId2);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate by apiKeyCredential valid tenant Id - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate by apiKeyCredential valid tenant Id - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestCase#tenantId1}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="${#TestSuite#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate by apiKeyCredential valid tenant Id - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate by apiKeyCredential valid tenant Id - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestCase#tenantId1}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="${#TestSuite#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name=" Script Assertion - json response"><con:configuration><scriptText>assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate by apiKeyCredential valid tenant Id - json 2"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate by apiKeyCredential valid tenant Id - json 2" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#username}", "apiKey":"${#TestSuite#apiKey}" } } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="compate tokens 2"><con:settings/><con:config><script>def getToken = context.expand( '${POST - Authenticate by apiKeyCredential valid tenant Id - xml#ResponseAsXml#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:access[1]/ns2:token[1]/@id}' )
log.info "token with tenant: " + getToken;
def tokenId = context.expand( '${#TestCase#tokenId}' )

if (getToken != tokenId)
{
	assert false;
}

def getJsonToken = context.expand( '${POST - Authenticate by apiKeyCredential valid tenant Id - json#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#path}/tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )
log.info "json token: " + getJsonToken;
if (getJsonToken != tokenId)
{
	assert false;
}

def getJsonToken2 = context.expand( '${POST - Authenticate by apiKeyCredential valid tenant Id - json 2#ResponseAsXml#declare namespace ns1=\'${#Project#EndpointJson}/${#Project#path}/tokens\'; //ns1:Response[1]/ns1:access[1]/ns1:token[1]/ns1:id[1]}' )
log.info "getJsonToken: " + getJsonToken2;
if (getJsonToken != getJsonToken2)
{
	assert false;
}</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential valid tenant Id 2 - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential valid tenant Id 2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestCase#tenantId2}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="${#TestSuite#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential valid tenant Id 2 - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential valid tenant Id 2 - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestCase#tenantId2}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="${#TestSuite#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken w valid tenant Id - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken w valid tenant Id - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestCase#tenantId1}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken w valid tenant Id - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken w valid tenant Id - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestCase#tenantId2}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential for other account - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential for other account - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey2}" username="${#TestSuite#username2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token for other account"><con:settings/><con:config><script>//def token = context.expand( '${POST - getToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
def token = context.expand( '${POST - getToken apiKeyCredential for other account - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )

log.info "get Token: " + token
testRunner.testCase.testSuite.setPropertyValue("tokenId2", token)</script></con:config></con:testStep><con:testStep type="groovy" name="set json request 1"><con:settings/><con:config><script>def json_req1 = '{"auth": {"tenantId": "${#TestSuite#tenantId}", "token": {"id": "${#TestSuite#tokenId}"}}}'

testRunner.testCase.testSteps['POST - authenticate by tenantId and valid token - json'].setPropertyValue("Request", json_req1)

def json_req2 = '{"auth": {"tenantName": "${#TestSuite#tenantName}", "token": {"id": "${#TestSuite#tokenId}"}}}'

testRunner.testCase.testSteps['POST - authenticate by tenantName and valid token - json'].setPropertyValue("Request", json_req2)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantId and valid token - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantId and valid token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#tokenId}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/@id</path><content>${#TestSuite#userId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantId and valid token - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantId and valid token - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth": {"tenantId": "${#TestSuite#tenantId}", "token": {"id": "${#TestSuite#tokenId}"}}}</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/tokens';
//ns1:Response[1]/ns1:access[1]/ns1:user[1]/ns1:id[1]</path><content>${#TestSuite#userId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantName and valid token - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantName and valid token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantName="${#TestSuite#tenantName}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#tokenId}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/@id</path><content>${#TestSuite#userId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantName and valid token - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantName and valid token - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth": {"tenantName": "${#TestSuite#tenantName}", "token": {"id": "${#TestSuite#tokenId}"}}}</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/tokens';
//ns1:Response[1]/ns1:access[1]/ns1:user[1]/ns1:id[1]/text()</path><content>${#TestSuite#userId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantId and valid token 2 - xml" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantId and valid token 2 - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantIdU2}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#tokenId2}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/@id</path><content>${#TestSuite#userId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken adminuser - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken adminuser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password3}" username="${#TestSuite#username3}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@id]"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.openstack.org/identity/api/v2.0"
def node = holder.getDomNode( "//ns1:access[1]/ns1:token[1]/@id" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@internalURL]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
exists( //ns1:access/ns1:serviceCatalog/ns1:service/ns1:endpoint/@adminURL)</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token 3"><con:settings/><con:config><script>def token = context.expand( '${POST - getToken adminuser - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get Token: " + token
testRunner.testCase.testSuite.setPropertyValue("tokenId3", token)
def tenantId = context.expand( '${POST - getToken adminuser - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:serviceCatalog[1]/ns1:service[1]/ns1:endpoint[1]/@tenantId}' )
testRunner.testCase.testSuite.setPropertyValue("tenantId3", tenantId)
def userId = context.expand( '${POST - getToken adminuser - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
testRunner.testCase.testSuite.setPropertyValue("userId3", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate by apiKeyCredential no tenant Id adminuser - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate by apiKeyCredential no tenant Id adminuser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey3}" username="${#TestSuite#username3}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@adminURL]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
exists( //ns1:access/ns1:serviceCatalog/ns1:service/ns1:endpoint/@adminURL)</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="set json request 2"><con:settings/><con:config><script>def json_request = '{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username3}", "password":"${#TestSuite#password3}" } } }'

testRunner.testCase.testSteps["POST - getToken adminuser - json"].setPropertyValue("Request", json_request)
 </script></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken adminuser - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken adminuser - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username3}", "password":"${#TestSuite#password3}" } } }</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@id]" disabled="true"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.openstack.org/identity/api/v2.0"
def node = holder.getDomNode( "//ns1:access[1]/ns1:token[1]/@id" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@adminURL]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
exists( //ns1:access/ns1:serviceCatalog/ns1:service/ns1:endpoint/@adminURL)</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="verify contents"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - getToken adminuser - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def names = jsonObj."access"."serviceCatalog".name
log.info names

def endpoints = jsonObj."access"."serviceCatalog".endpoints
log.info endpoints

for (i=0; i&lt;names.size(); i++)
{
	log.info names[i]
	if(names[i] == "admin-Mix" || names[i] == "admin-Only" )
	{
		log.info endpoints[i]
		for (o in endpoints[i])
		{
			for (e in o)
			{
				if (e.key == "adminURL")
				{
					assert false
					break
				}
			}
		}
	}
}</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantId and valid token adminuser - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantId and valid token adminuser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId3}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#tokenId3}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:access[1]/ns1:user[1]/@id</path><content>${#TestSuite#userId3}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@publicURL]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
exists( //ns1:access/ns1:serviceCatalog/ns1:service/ns1:endpoint/@adminURL)</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="set user upper case"><con:settings/><con:config><script>def username = context.expand( '${#TestSuite#username}' ).toUpperCase();
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate by passwordCred username not case sensitive - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate by passwordCred username not case sensitive - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="TestingNastID12354" xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${set user upper case#result}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@id]"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.openstack.org/identity/api/v2.0"
def node = holder.getDomNode( "//ns1:access[1]/ns1:token[1]/@id" )

assert node != null
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Authenticate by apiKeyCredential username not case sensitive - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Authenticate by apiKeyCredential username not case sensitive - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestCase#tenantId1}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="${set user upper case#result}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>tokenId</con:name><con:value>73df8dfd-6b6b-4d80-8ab3-99992ec41fa6</con:value></con:property><con:property><con:name>tenantId1</con:name><con:value>TestingNastID12354</con:value></con:property><con:property><con:name>tenantId2</con:name><con:value>5701091</con:value></con:property><con:property><con:name>request1</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username}", "password":"${#TestSuite#password}" } } }</con:value></con:property><con:property><con:name>badRequest1</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"badUser", "password":"${#TestSuite#password}" } } }</con:value></con:property><con:property><con:name>badRequest2</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username}" } } }</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Tokens - Neg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="80787f17-5b9a-4884-9a42-cd96256ec6af"><con:settings/><con:testStep type="restrequest" name="POST getToken w invalid tenant Id - xml - 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken w invalid tenant Id - xml - 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#invalidTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#password2}" username="${#TestSuite#username2}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken w invalid tenant Id - json - 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken w invalid tenant Id - json - 401" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#invalidTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#password2}" username="${#TestSuite#username2}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken w tenant Id no username - xml - 400"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken w tenant Id no username - xml - 400" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#newTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#password}" username=""/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:badRequest[1]/ns1:message[1]/text()</path><content>Expecting username.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken w tenant Id no username - json - 400"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken w tenant Id no username - json - 400" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#newTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#password}" username=""/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/tokens';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]/text()</path><content>Expecting username.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken w tenant Id invalid username - xml - 404"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken w tenant Id invalid username - xml - 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#newTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#password}" username="abc"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>User '${POST getToken w tenant Id invalid username - xml - 404#Request#declare namespace ns1='http://docs.openstack.org/identity/api/v2.0'; //ns1:auth[1]/ns1:passwordCredentials[1]/@username}' not found. @AUTHDB</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Unable to authenticate user with credentials provided.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken w tenant Id invalid username - json - 404"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken w tenant Id invalid username - json - 404" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#newTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#password}" username="abc"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/tokens';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>User '${POST getToken w tenant Id invalid username - json - 404#Request#declare namespace ns1='http://docs.openstack.org/identity/api/v2.0'; //ns1:auth[1]/ns1:passwordCredentials[1]/@username}' not found. @AUTHDB</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>{"itemNotFound":{"code":404,"message":"User '${POST getToken w tenant Id invalid username - xml - 404#Request#declare namespace ns1='http://docs.openstack.org/identity/api/v2.0'; //ns1:auth[1]/ns1:passwordCredentials[1]/@username}' not found. @AUTHDB"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken w tenant Id no password - xml - 400"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken w tenant Id no password - xml - 400" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#newTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="" username="${#TestSuite#username}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:badRequest[1]/ns2:message[1]</path><content>Expecting password</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken w tenant Id no password - json - 400"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken w tenant Id no password - json - 400" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#newTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="" username="${#TestSuite#username2}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/tokens';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]</path><content>Expecting password.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken w tenant Id wrong password - xml - 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken w tenant Id wrong password - xml - 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#newTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="abc123" username="${#TestSuite#username}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Invalid username or password.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken w tenant Id no username/password - xml - 400"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken w tenant Id no username/password - xml - 400" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#newTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="" username=""/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:badRequest[1]/ns1:message[1]</path><content>Expecting password.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken w tenant Id wrong password - json - 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken w tenant Id wrong password - json - 401" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#newTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="abc123" username="${#TestSuite#username}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/tokens';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Invalid username or password.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken w tenant Id no username/password - json - 400"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken w tenant Id no username/password - json - 400" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#newTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="" username=""/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/tokens';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]</path><content>Expecting password.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken w tenant Id wrong password case - xml - 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken w tenant Id wrong password case - xml - 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#newTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="password1" username="${#TestSuite#username}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Invalid username or password.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken w tenant Id wrong password case - json - 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken w tenant Id wrong password case - json - 401" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#newTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="password1" username="${#TestSuite#username}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/tokens';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Invalid username or password.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential invalid tenant Id - xml - 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential invalid tenant Id - xml - 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#invalidTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="${#TestSuite#username2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:unauthorized[1]/ns7:message[1]</path><content>Tenant with Name/Id: '${#TestSuite#invalidTenantId}', is not valid for User '${#TestSuite#username}' (id: '${#TestSuite#userId}')</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential invalid tenant Id - json - 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential invalid tenant Id - json - 401" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#invalidTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="${#TestSuite#username2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='http://d-api1.cidm.iad2.corp.rackspace.com/idm/cloud/v2.0/tokens';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]</path><content>Tenant with Name/Id: '${#TestSuite#invalidTenantId}', is not valid for User '${#TestSuite#username}' (id: '${#TestSuite#userId}')</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential w tenant Id no apiKey - xml - 400"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential w tenant Id no apiKey - xml - 400" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="" username="${#TestSuite#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:badRequest[1]/ns1:message[1]/text()</path><content>Expecting apiKey</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential w tenant Id no apiKey - json - 400"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential w tenant Id no apiKey - json - 400" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="" username="${#TestSuite#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/tokens';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]/text()</path><content>Expecting apiKey</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential w tenant Id no username - xml - 400"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential w tenant Id no username - xml - 400" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:badRequest[1]/ns1:message[1]/text()</path><content>Expecting username</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential w tenant Id no username - json - 400"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential w tenant Id no username - json - 400" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/tokens';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]/text()</path><content>Expecting username</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential w tenant Id no username/apiKey - xml - 400"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential w tenant Id no username/apiKey - xml - 400" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="" username="" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:badRequest[1]/ns1:message[1]</path><content>Expecting apiKey</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential w tenant Id no username/apiKey - json - 400"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential w tenant Id no username/apiKey - json - 400" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="" username="" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/tokens';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]</path><content>Expecting apiKey</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential w other account apiKey - xml - 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential w other account apiKey - xml - 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey2}" username="${#TestSuite#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns7='http://docs.openstack.org/identity/api/v2.0';
//ns7:unauthorized[1]/ns7:message[1]</path><content>Username or api key is invalid.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential w other account apiKey - json - 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential w other account apiKey - json - 401" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey2}" username="${#TestSuite#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#EndpointJson}/${#Project#path}/tokens';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]</path><content>Username or api key is invalid.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken - bad user - xml 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken - bad user - xml 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="Password1" username="baduser"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "POST - authentication - bad user - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>User '${POST - getToken - bad user - xml 401#Request#declare namespace ns1='http://docs.openstack.org/identity/api/v2.0'; //ns1:auth[1]/ns1:passwordCredentials[1]/@username}' not found. @AUTHDB</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" disabled="true"><con:configuration/></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="transfer bad request"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body-json</con:name><con:sourceType>badRequest1</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - getToken - bad user - json 401</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken - bad user - json 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken - bad user - json 401" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "username":"badUser", "password":"${#TestSuite#password}" } } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "POST - authentication - bad user - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='http://auth-n02.dev.us.ccp.rackspace.net/v2.0/tokens';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>User '${POST - getToken - bad user - json 401#Username}' not found. -IADB</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken - bad password - xm 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken - bad password - xm 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="badpassword" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "POST - authentication - bad user - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Invalid username or password.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Unable to authenticate user with credentials provided.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="transfer bad request 2"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body-badpassword-json</con:name><con:sourceType>badrequest2</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - getToken - bad password - json 401</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken - bad password - json 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken - bad password - json 401" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username}" , "password":"badpassword" } } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "POST - authentication - bad user - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/tokens';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Invalid username or password.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantId and expired token - xml 404" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantId and expired token - xml 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#expiredToken}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>Token expired.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantId and expired token - json 404" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantId and expired token - json 404" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#expiredToken}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/tokens';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>Token expired.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantId and invalid token - xml 404"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantId and invalid token - xml 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#invalidTokenId}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>Invalid Token, not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantId and invalid token - json 404"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantId and invalid token - json 404" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#invalidTokenId}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/tokens';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>Invalid Token, not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantId and mix token - xml 404" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantId and mix token - xml 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#tokenId2}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>Token doesn't belong to Tenant with Id/Name: '${#TestSuite#tenantId}'</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantId and mix token - json 404" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantId and mix token - json 404" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#tokenId2}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/tokens';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>Token doesn't belong to Tenant with Id/Name: '${#TestSuite#tenantId}'</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by invalid tenantId and token - xml 404"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by invalid tenantId and token - xml 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#invalidTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#tokenId}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token doesn't belong to Tenant with Id/Name: '0'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by invalid tenantId and token - json 404"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by invalid tenantId and token - json 404" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#invalidTenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#tokenId}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token doesn't belong to Tenant with Id/Name: '0'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantName and expired token - xml 404" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantName and expired token - xml 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantName="${#TestSuite#tenantName}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#expiredToken}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>Token expired.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantName and expired token - json 404" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantName and expired token - json 404" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantName="${#TestSuite#tenantName}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#expiredToken}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/tokens';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>Token expired.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantName and mix token - xml 404" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantName and mix token - xml 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantName="${#TestSuite#tenantName}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#tokenId2}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>Token doesn't belong to Tenant with Id/Name: '${#TestSuite#tenantName}'</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantName and mix token - json 404" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantName and mix token - json 404" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantName="${#TestSuite#tenantName}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#tokenId2}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/tokens';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>Token doesn't belong to Tenant with Id/Name: '${#TestSuite#tenantName}'</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by invalid tenantName and valid token - xml 404"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by invalid tenantName and valid token - xml 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantName="${#TestSuite#invalidTenantName}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#tokenId}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration/></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token doesn't belong to Tenant with Id/Name: '${#TestSuite#invalidTenantName}'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by invalid tenantName and valid token - json 404"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by invalid tenantName and valid token - json 404" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantName="${#TestSuite#invalidTenantName}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#tokenId}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token doesn't belong to Tenant with Id/Name: '${#TestSuite#invalidTenantName}'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantName and mix token 2 - xml 404"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantName and mix token 2 - xml 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantName="${#TestSuite#tenantNameU2}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#tokenId}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token doesn't belong to Tenant with Id/Name: '${#TestSuite#tenantNameU2}'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - authenticate by tenantName and mix token 2 - json 404"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - authenticate by tenantName and mix token 2 - json 404" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantName="${#TestSuite#tenantNameU2}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;token id="${#TestSuite#tokenId}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token doesn't belong to Tenant with Id/Name: '${#TestSuite#tenantNameU2}'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="set change case password"><con:settings/><con:config><script/></con:config></con:testStep><con:testStep type="restrequest" name="POST getAdminToken wrong password case - xml - 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getAdminToken wrong password case - xml - 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="password1" username="${#TestSuite#username}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Unable to authenticate user with credentials provided.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="set username uppercase"><con:settings/><con:config><script>def user3 = context.expand('${#TestSuite#username3}').toUpperCase();
//log.info user3
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST getToken username not case sensitive - xml - 200"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST getToken username not case sensitive - xml - 200" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;passwordCredentials password="${#TestSuite#password3}" username="${set username uppercase#result}"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Response Code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>tokenId</con:name><con:value>66bdc695-1b97-4639-8162-77450b6fc97e</con:value></con:property><con:property><con:name>tenantId1</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456a3ef1</con:value></con:property><con:property><con:name>tenantId2</con:name><con:value>5701091</con:value></con:property><con:property><con:name>request1</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username}", "password":"${#TestSuite#password}" } } }</con:value></con:property><con:property><con:name>badRequest1</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"badUser", "password":"${#TestSuite#password}" } } }</con:value></con:property><con:property><con:name>badRequest2</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username}" , "password":"badpassword" } } }</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Tenants" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="17a14dda-ba05-4f36-bb6c-706171c2a18f"><con:settings/><con:testStep type="restrequest" name="GET - listTenants - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get Tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listTenants - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listTenants - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get Tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listTenants - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tenantId"><con:settings/><con:config><script>def tenantId = context.expand( '${GET - listTenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[1]/@id}' )
def tenantName = context.expand( '${GET - listTenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[1]/@name}' )

log.info "tenant id: " + tenantId
testRunner.testCase.testSuite.setPropertyValue("tenantId", tenantId)
log.info "tenant name: " + tenantName
testRunner.testCase.testSuite.setPropertyValue("tenantName", tenantName)

def tenantId2 = context.expand( '${GET - listTenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[2]/@id}' )
testRunner.testCase.testSuite.setPropertyValue("tenantId2", tenantId)
def tenantName2 = context.expand( '${GET - listTenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[2]/@name}' )

log.info "tenant id: " + tenantId2
testRunner.testCase.testSuite.setPropertyValue("tenantId2", tenantId2)
log.info "tenant name: " + tenantName2
testRunner.testCase.testSuite.setPropertyValue("tenantName2", tenantName2)

//store tenant count
def count = context.expand( '${GET - listTenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; count(//ns1:tenants[1]/ns1:tenant)}' )
testRunner.testCase.testSuite.setPropertyValue("numTenants", count)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET Tenants - listTenants w valid auth token - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get Tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET Tenants - listTenants w valid auth token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET Tenants - listTenants w valid auth token - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get Tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET Tenants - listTenants w valid auth token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET Tenants - listTenants w limit &amp; marker - xml" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get Tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET Tenants - listTenants w limit &amp; marker - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:tenants[1]/ns1:tenant[1]/@id</path><content>{#TestSuite#tenantId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="1"/>
  <con:entry key="marker" value="2"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET Tenants - listTenants w limit &amp; marker - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get Tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET Tenants - listTenants w limit &amp; marker - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [id]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/tenants';
//ns1:Response[1]/ns1:tenants[1]/ns1:tenant[1]/ns1:e[1]/ns1:id[1]/text()</path><content>${#TestSuite#tenantId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token/><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="1"/>
  <con:entry key="marker" value="1"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET Tenants - listTenants w limit &amp; marker 2 - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get Tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET Tenants - listTenants w limit &amp; marker 2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check count of [tenant]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count( //ns1:tenants/ns1:tenant)</path><content>${#TestSuite#numTenants}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="10"/>
  <con:entry key="marker" value="0"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET Tenants - listTenants w limit &amp; marker 2 - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get Tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET Tenants - listTenants w limit &amp; marker 2 - json" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check count of [tenant]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count( //ns1:tenants/ns1:tenant)</path><content>${#TestSuite#numTenants}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="10"/>
  <con:entry key="marker" value="1"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Tenants - Neg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="111e6c2e-623d-43ee-a7ca-169bfe2e17af"><con:settings/><con:testStep type="restrequest" name="GET Tenants - listTenants w invalid auth token - xml - 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get Tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET Tenants - listTenants w invalid auth token - xml - 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Invalid or expired token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [ns2:message]"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:unauthorized[1]/ns2:message[1]/text()</path><content>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#invalidTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET Tenants - listTenants w invalid auth token - json - 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get Tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET Tenants - listTenants w invalid auth token - json - 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>"message":"Invalid or expired token."</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpointjson}/${#Project#path}/tenants';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#invalidTokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET Tenants - listTenants w no token - xml - 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get Tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET Tenants - listTenants w no token - xml - 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="bad" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET Tenants - listTenants w no token - json - 401"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get Tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET Tenants - listTenants w no token - json - 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"message":"No valid token provided. Please use the 'X-Auth-Token' header with a valid token."</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="bad" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - badLimit - xml 404"><con:settings/><con:config service="identity-admin" methodName="Get Tenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - badLimit - xml 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>tenants</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="qw"/>
  <con:entry key="marker" value="1"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - badLimit - json 404"><con:settings/><con:config service="identity-admin" methodName="Get Tenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - badLimit - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>tenants</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="qw"/>
  <con:entry key="marker" value="1"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants- limit - zero - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants- limit - zero - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count(//ns1:tenant)</path><content>0</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="0"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants- limit - zero - json" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants- limit - zero - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check count of [tenant]"><con:configuration><path>declare namespace ns1='http://auth-n02.dev.us.ccp.rackspace.net/v2.0/tenants';
count( //ns1:Response/ns1:tenants/ns1:tenant)</path><content>${#TestSuite#numTenants}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="0"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET Tenants - listTenants w limit &amp; marker no token - xml - 401" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get Tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET Tenants - listTenants w limit &amp; marker no token - xml - 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="1"/>
  <con:entry key="marker" value="1"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - wrong X-Auth-Token 404 - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - wrong X-Auth-Token 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - Wrong X-Auth-Token - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [tenants]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:tenants[1]</path><content>&lt;tenants xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:ns2="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0" xmlns:ns3="http://docs.rackspace.com/identity/api/ext/RAX-KSGRP/v1.0" xmlns:ns4="http://docs.openstack.org/common/api/v1.0" xmlns:ns5="http://www.w3.org/2005/Atom"/></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="qwer" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants - wrong X-Auth-Token 404 - json" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get Tenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - wrong X-Auth-Token 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - Wrong X-Auth-Token - Status: " +  messageExchange.responseStatusCode
assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@null]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/tenants';
//ns1:Response[1]/ns1:tenants[1]/@null</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"tenants":[]}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="qwer" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>tokenId</con:name><con:value>73df8dfd-6b6b-4d80-8ab3-99992ec41fa6</con:value></con:property><con:property><con:name>username</con:name><con:value>cmarin2</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>userId</con:name><con:value>104472</con:value></con:property><con:property><con:name>apiKey</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>tenantId</con:name><con:value/></con:property><con:property><con:name>tenantname</con:name><con:value/></con:property><con:property><con:name>roleId</con:name><con:value>1</con:value></con:property><con:property><con:name>auth-token</con:name><con:value>17df0a98-924e-441d-9c27-c327a23363-A</con:value></con:property><con:property><con:name>invalidTokenId</con:name><con:value>jenny-test</con:value></con:property><con:property><con:name>tenantTokenId</con:name><con:value>13899dbe-0d6d-4966-9cdc-fe5d26ac93eb</con:value></con:property><con:property><con:name>newApiKey</con:name><con:value>jenny-key</con:value></con:property><con:property><con:name>credType</con:name><con:value>RAX-KSKEY:apiKeyCredentials</con:value></con:property><con:property><con:name>credType1</con:name><con:value>KEYSTONE:passwordCredentials</con:value></con:property><con:property><con:name>newTenantId</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456a3ef1</con:value></con:property><con:property><con:name>newTenantName</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456a3ef1</con:value></con:property><con:property><con:name>tenantId2</con:name><con:value/></con:property><con:property><con:name>tenantName2</con:name><con:value/></con:property><con:property><con:name>invalidTenantId</con:name><con:value>0</con:value></con:property><con:property><con:name>otherTenant</con:name><con:value>103950</con:value></con:property><con:property><con:name>invalidUsername</con:name><con:value>authtest</con:value></con:property><con:property><con:name>username2</con:name><con:value>cmarin1</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>userId2</con:name><con:value>102916</con:value></con:property><con:property><con:name>apiKey2</con:name><con:value>7e4a5dda01d9f447695b5ff476a6788f</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>131ed887-f72c-4ae3-bd86-f27fa624abb0</con:value></con:property><con:property><con:name>tenantIdU2</con:name><con:value>5700812</con:value></con:property><con:property><con:name>tenantNameU2</con:name><con:value>5700812</con:value></con:property><con:property><con:name>extAlias</con:name><con:value>RAX-KSKEY</con:value></con:property><con:property><con:name>numTenants</con:name><con:value>0</con:value></con:property><con:property><con:name>invalideTenantId</con:name><con:value>0</con:value></con:property><con:property><con:name>invalidTenantName</con:name><con:value>test</con:value></con:property><con:property><con:name>username3</con:name><con:value>cmarin3</con:value></con:property><con:property><con:name>password3</con:name><con:value>Password1</con:value></con:property><con:property><con:name>tokenId3</con:name><con:value>19df7a8c-45ee-4fc4-87de-17bde56377c3</con:value></con:property><con:property><con:name>tenantId3</con:name><con:value>MossoCloudFS_de0f06cb-27fa-479f-8cc0-b3db1f3aa765</con:value></con:property><con:property><con:name>userId3</con:name><con:value>153320</con:value></con:property><con:property><con:name>apiKey3</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - identity-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Tokens" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7d016c8c-9b22-43a4-b369-c41f9b29bf33"><con:settings/><con:testStep type="restrequest" name="POST - getAuthToken - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getAuthToken - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Content-Type" value="application/xml;charset=UTF-8 " xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#Project#auth-pass}" username="${#Project#auth-user}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@id]"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.openstack.org/identity/api/v2.0"
def node = holder.getDomNode( "//ns1:access[1]/ns1:token[1]/@id" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@adminURL]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
exists( //ns1:access/ns1:serviceCatalog/ns1:service/ns1:endpoint/@adminURL)</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store auth token"><con:settings/><con:config><script>def token = context.expand( '${POST - getAuthToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info token
testRunner.testCase.testSuite.setPropertyValue("auth-token", token)
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential no tenant Id - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential no tenant Id - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="${#TestSuite#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token"><con:settings/><con:config><script>def token = context.expand( '${POST - getToken apiKeyCredential no tenant Id - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )

log.info "get Token: " + token
testRunner.testCase.testSuite.setPropertyValue("tokenId", token)
</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential tenant Id - xml" disabled="true"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential tenant Id - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}" xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey}" username="${#TestSuite#username}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential for other account - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential for other account - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey2}" username="${#TestSuite#username2}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token for other account"><con:settings/><con:config><script>//def token = context.expand( '${POST - getToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
def token = context.expand( '${POST - getToken apiKeyCredential for other account - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )

log.info "get Token: " + token
testRunner.testCase.testSuite.setPropertyValue("tokenId2", token)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken adminuser - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken adminuser - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password3}" username="${#TestSuite#username3}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@id]"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.openstack.org/identity/api/v2.0"
def node = holder.getDomNode( "//ns1:access[1]/ns1:token[1]/@id" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@internalURL]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
exists( //ns1:access/ns1:serviceCatalog/ns1:service/ns1:endpoint/@adminURL)</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token 2"><con:settings/><con:config><script>def token = context.expand( '${POST - getToken adminuser - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get Token: " + token
testRunner.testCase.testSuite.setPropertyValue("tokenId3", token)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken adminuser - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken adminuser - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password3}" username="${#TestSuite#username3}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@id]" disabled="true"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.openstack.org/identity/api/v2.0"
def node = holder.getDomNode( "//ns1:access[1]/ns1:token[1]/@id" )

assert node != null
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"access":{"token":{"id":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [adminURL]"><con:configuration><path>declare namespace ns1='http://auth-n01.dev.us.ccp.rackspace.net/v2.0/tokens';
exists( //ns1:Response/ns1:access/ns1:serviceCatalog/ns1:e/ns1:endpoints/ns1:e/ns1:adminURL)</path><content>false</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="check admin urls"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - getToken adminuser - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def names = jsonObj."access"."serviceCatalog".name
log.info names

def endpoints = jsonObj."access"."serviceCatalog".endpoints
log.info endpoints

for (i=0; i&lt;names.size(); i++)
{
	log.info names[i]
	if(names[i] == "admin-Mix" || names[i] == "admin-Only"  || names[i] == "all-urls")
	{
		log.info endpoints[i]
		for (o in endpoints[i])
		{
			for (e in o)
			{
				if (e.key == "adminURL")
				{
					assert false
					break
				}
			}
		}
	}
}</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Tenants" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="98069a9a-f600-4233-a107-b79c79021928"><con:settings/><con:testStep type="restrequest" name="GET - Get Tenants - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get Tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Tenants - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Tenants - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get Tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Tenants - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tenantId"><con:settings/><con:config><script>def tenantId = context.expand( '${GET - Get Tenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[1]/@id}' )
def tenantName = context.expand( '${GET - Get Tenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[1]/@name}' )

log.info "tenant id: " + tenantId
testRunner.testCase.testSuite.setPropertyValue("tenantId", tenantId)
log.info "tenant name: " + tenantName
testRunner.testCase.testSuite.setPropertyValue("tenantName", tenantName)

def tenantId2 = context.expand( '${GET - Get Tenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[2]/@id}' )
testRunner.testCase.testSuite.setPropertyValue("tenantId2", tenantId)
def tenantName2 = context.expand( '${GET - Get Tenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[2]/@name}' )

log.info "tenant id: " + tenantId2
testRunner.testCase.testSuite.setPropertyValue("tenantId2", tenantId2)
log.info "tenant name: " + tenantName2
testRunner.testCase.testSuite.setPropertyValue("tenantName2", tenantName2)

//store tenant count
def count = context.expand( '${GET - Get Tenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; count(//ns1:tenants[1]/ns1:tenant)}' )
testRunner.testCase.testSuite.setPropertyValue("numTenants", count)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get tenant by name - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get tenants by name" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get tenant by name - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:tenant[1]/@id</path><content>${#TestSuite#tenantId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#tenantName}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get tenant by name - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants" methodName="Get tenants by name" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get tenant by name - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [id]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/tenants';
//ns1:Response[1]/ns1:tenant[1]/ns1:id[1]/text()</path><content>${#TestSuite#tenantId}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>{"tenant":{"id":"${#TestSuite#tenantId}","name":"${#TestSuite#tenantName}"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#tenantName}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get tenant by Id - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants/{tenantId}" methodName="Get Tenants by ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get tenant by Id - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@id]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:tenant[1]/@id</path><content>${#TestSuite#tenantId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get tenant by Id - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants/{tenantId}" methodName="Get Tenants by ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get tenant by Id - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [id]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/tenants/5701091';
//ns1:Response[1]/ns1:tenant[1]/ns1:id[1]/text()</path><content>${#TestSuite#tenantId2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>{"tenant":{"id":"${#TestSuite#tenantId2}","name":"${#TestSuite#tenantName2}"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Tenants - Neg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="8ec14c1d-2bfc-40a9-a431-e87b88d9fcee"><con:settings/><con:testStep type="restrequest" name="GET - tenant by name - wrong X-Auth-Token 403 - xml"><con:settings/><con:config service="identity-admin" methodName="Get tenants by name" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenant by name - wrong X-Auth-Token 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403
log.info "GET - tenants - Wrong X-Auth-Token - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [ns2:message]"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:forbidden[1]/ns2:message[1]/text()</path><content>Access is denied</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#tenantNameU2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenant by name - wrong X-Auth-Token 403 - json"><con:settings/><con:config service="identity-admin" methodName="Get tenants by name" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenant by name - wrong X-Auth-Token 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403
log.info "GET - tenants - Wrong X-Auth-Token - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/tenants';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"forbidden":{"code":403,"message":"Access is denied"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#tenantNameU2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenant by name - no X-Auth-Token 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Get tenants by name" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenant by name - no X-Auth-Token 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "GET - tenants - Wrong X-Auth-Token - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#tenantNameU2}"/>
  <con:entry key="X-Auth-Token" value="bad"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenant by name - no X-Auth-Token 401 - json"><con:settings/><con:config service="identity-admin" methodName="Get tenants by name" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenant by name - no X-Auth-Token 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
log.info "GET - tenants - Wrong X-Auth-Token - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/tenants';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized":{"code":401,"message":"No valid token provided. Please use the 'X-Auth-Token' header with a valid token."</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#tenantNameU2}"/>
  <con:entry key="X-Auth-Token" value="bad"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Name - badname 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Get tenants by name" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Name - badname 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: 'badname' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="badname"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Name - badname 404 - json"><con:settings/><con:config service="identity-admin" methodName="Get tenants by name" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Name - badname 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Tenant with id/name: 'badname' was not found</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="badname"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Id - badId - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants by ID" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Id - badId - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="1212121"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tenants by Id - badId - json"><con:settings/><con:config service="identity-admin" methodName="Get Tenants by ID" resourcePath="/${#Project#path}/tenants/{tenantId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants by Id - badId - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="121212"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Endpoints by token" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7107cce6-4ac9-42f8-a54c-7514793d455b"><con:settings/><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - xml"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - json"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 2"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - tokenById - listEndPointsForToken - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def id = jsonObj."endpoints".id
log.info id

def types = jsonObj."endpoints".type
log.info types

def names = jsonObj."endpoints".name
log.info names


for (i=0; i&lt;names.size(); i++)
{
	log.info names[i]
	if (names[i] == "" || names[i] == null)
	{
		assert false
	}
}</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="verify contents"><con:configuration><scriptText>def response = context.expand( '${GET - tokenById - listEndPointsForToken - json#Response}' )
log.info response
def phase1 = "{\"endpoints\":[{\"tenantId\":"
def phase2 = "{\"endpoints\":[{\"Id\":"
def phase3 = "{\"endpoints\":[{\"region\":"
log.info phase1
if ( response.contains(phase1) || response.contains(phase2) || response.contains(phase3))
{
	assert true
}
else assert false</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - belongsTo - xml"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - belongsTo - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [@tenantId]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
exists( //ns1:endpoints/ns1:endpoint/@tenantId)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - belongsTo - json"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - belongsTo - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>"endpoints":[{"tenantId":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="verify contents"><con:configuration><scriptText>def response = context.expand( '${GET - tokenById - listEndPointsForToken - belongsTo - json#Response}' )
log.info response
def phase1 = "{\"endpoints\":[{\"tenantId\":"
def phase2 = "{\"endpoints\":[{\"Id\":"
def phase3 = "{\"endpoints\":[{\"region\":"
log.info phase1
if ( response.contains(phase1) || response.contains(phase2) || response.contains(phase3))
{
	assert true
}
else assert false</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsFor AdminToken - json"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsFor AdminToken - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 2"><con:configuration/></con:assertion><con:assertion type="GroovyScriptAssertion" name="verify contents"><con:configuration><scriptText>def response = context.expand( '${GET - tokenById - listEndPointsForToken - json#Response}' )
log.info response
def phase1 = "{\"endpoints\":[{\"tenantId\":"
def phase2 = "{\"endpoints\":[{\"Id\":"
def phase3 = "{\"endpoints\":[{\"region\":"
log.info phase1
if ( response.contains(phase1) || response.contains(phase2) || response.contains(phase3))
{
	assert true
}
else assert false</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>"adminURL"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [adminURL]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/tokens/${#TestSuite#tokenId3}/endpoints';
exists( //ns1:Response/ns1:endpoints/ns1:e/ns1:adminURL)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId3}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="belongsTo" value=""/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Endpoints by token - Neg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f3691f2a-ecb1-4a58-991a-65c1e4f8f9a6"><con:settings/><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - badId 404 - xml"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - badId 404 - json"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound":{"code":404</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - badBelongsTo 200 - xml"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - badBelongsTo 200 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken - badBelongsTo 200 - json"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken - badBelongsTo 200 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>{"endpoints":[{"tenantId":||{"endpoints":[{"region":||{"endpoints":[{"id":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken badAuthToken 401 - xml"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - tokenById - listEndPointsForToken badAuthToken 401 - json"><con:settings/><con:config service="identity-admin" methodName="List Endoints for a Token" resourcePath="/${#Project#path}/tokens/{tokenId}/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tokenById - listEndPointsForToken badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"message":"No valid token provided. Please use the 'X-Auth-Token' header with a valid token."</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateToken" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="18846633-4216-4398-9878-613c58b83bba"><con:settings/><con:testStep type="restrequest" name="GET - validateToken - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"access":{"token":{"id":"${#TestSuite#tokenId}","expires":"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="get token info"><con:settings/><con:config><script>def expiration = context.expand( '${GET - validateToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@expires}' )
def user = context.expand( '${GET - validateToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@name}' )
def role = context.expand( '${GET - validateToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/ns1:roles[1]/ns1:role[1]/@description}' )
def token = context.expand( '${GET - validateToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )

log.info "Returns token, expiration, user info, and the user's roles: " + token +", "+ expiration + ", "+ user + ", "+ role</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken other account - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken other account - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"access":{"token":{"id":"${#TestSuite#tokenId2}","expires":"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken belongsTo - xml"><con:settings/><con:config service="identity-admin" methodName="Validate Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken belongsTo - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>${#TestSuite#tokenId}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken belongsTo - json"><con:settings/><con:config service="identity-admin" methodName="Validate Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken belongsTo - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"access":{"token":{"id":"${#TestSuite#tokenId}","expires":"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - checkToken - xml"><con:settings/><con:config service="identity-admin" methodName="Check Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - checkToken - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v2:auth xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - checkToken - json"><con:settings/><con:config service="identity-admin" methodName="Check Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - checkToken - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - checkToken - belongsTo - xml"><con:settings/><con:config service="identity-admin" methodName="Check Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - checkToken - belongsTo - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - checkToken - belongsTo - json"><con:settings/><con:config service="identity-admin" methodName="Check Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - checkToken - belongsTo - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="belongsTo" value="${#TestSuite#tenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>badTokenId</con:name><con:value>1010</con:value></con:property><con:property><con:name>badTenantId</con:name><con:value>1212</con:value></con:property><con:property><con:name>badAuthToken</con:name><con:value>badToken</con:value></con:property><con:property><con:name>validEndpoints</con:name><con:value>187011</con:value></con:property><con:property><con:name>request1</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username}", "password":"${#TestSuite#password}" } } }</con:value></con:property><con:property><con:name>badrequest1</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"badUser", "password":"${#TestSuite#password}" } } }</con:value></con:property><con:property><con:name>badrequest2</con:name><con:value>{ "auth":{ "passwordCredentials":{ "username":"${#TestSuite#username}" } } }</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="ValidateToken - Neg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="fee5fb40-6a16-4d69-80ea-a4328cb605c2"><con:settings/><con:testStep type="restrequest" name="GET - validateToken badId - xml 404"><con:settings/><con:config service="identity-admin" methodName="Validate Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken badId - xml 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid Token, not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken badId - json 404"><con:settings/><con:config service="identity-admin" methodName="Validate Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken badId - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Invalid Token, not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken badBelongsTo - xml 404"><con:settings/><con:config service="identity-admin" methodName="Validate Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken badBelongsTo - xml 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>Token doesn't belong to Tenant with Id/Name: '${#TestCase#badTenantId}'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken badBelongsTo - json 404"><con:settings/><con:config service="identity-admin" methodName="Validate Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken badBelongsTo - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"message":"Token doesn't belong to Tenant with Id/Name: '${#TestCase#badTenantId}'</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - checkToken badId - xml 404"><con:settings/><con:config service="identity-admin" methodName="Check Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - checkToken badId - xml 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - checkToken badId - json 404"><con:settings/><con:config service="identity-admin" methodName="Check Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - checkToken badId - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestCase#badTokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - checkToken badBelongsTo - xml 404"><con:settings/><con:config service="identity-admin" methodName="Check Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - checkToken badBelongsTo - xml 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - checkToken badBelongsTo - json 404"><con:settings/><con:config service="identity-admin" methodName="Check Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - checkToken badBelongsTo - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="belongsTo" value="${#TestCase#badTenantId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken badAuthToken - xml 401"><con:settings/><con:config service="identity-admin" methodName="Validate Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken badAuthToken - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - validateToken badAuthToken - json 401"><con:settings/><con:config service="identity-admin" methodName="Validate Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - validateToken badAuthToken - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized":{"code":401,"message":"No valid token provided. Please use the 'X-Auth-Token' header with a valid token."</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - checkToken badAuthToken - xml 401"><con:settings/><con:config service="identity-admin" methodName="Check Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - checkToken badAuthToken - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="HEAD - checkToken badAuthToken - json 401"><con:settings/><con:config service="identity-admin" methodName="Check Token" resourcePath="/${#Project#path}/tokens/{tokenId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="HEAD - checkToken badAuthToken - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tokenId" value="${#TestSuite#tokenId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>badTenantId</con:name><con:value>badtenant</con:value></con:property><con:property><con:name>badTokenId</con:name><con:value>123456789</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Users" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="0e4859bb-2d44-4c62-a429-c3a946066b34"><con:settings/><con:testStep type="restrequest" name="GET - Get a User by Name - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users" methodName="Get a User by Name" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get a User by Name - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userByName - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id="${#TestSuite#userId2}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get a User by Name - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users" methodName="Get a User by Name" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get a User by Name - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
assert context.expand(messageExchange.responseHeaders["Content-Type"]) == "application/json"</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get a User by Name - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def user = jsonObj."user"
def found = false
if (user != null)
{
	def id = jsonObj."user".id
	def name = jsonObj."user".username
	assert id == context.expand( '${#TestSuite#userId2}' )
	assert name == context.expand( '${#TestSuite#username2}' )
}</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get a User by Id - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get a User by Id - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userById - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>id="${#TestSuite#userId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get a User by Id - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get a User by Id - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userById - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"id":"${#TestSuite#userId}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="username"><con:configuration><token>"username":"${#TestSuite#username}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List User Global Roles - xml"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List User Global Roles - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userById - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>name="identity:user-admin"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List User Global Roles - json"><con:settings/><con:config service="identity-admin" methodName="List User Global Roles" resourcePath="/${#Project#path}/users/{user_id}/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List User Global Roles - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting><con:setting id="AutoInferSchemas">false</con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - userById - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"roles":[{"id":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Schema Compliance" disabled="true"><con:configuration><definition>file:/home/jenny/keystone/keystone/content/admin/identity-admin.wadl</definition></con:configuration></con:assertion><con:assertion type="Schema Compliance" disabled="true"><con:configuration><definition>https://github.com/openstack/keystone/blob/master/keystone/content/admin/identity-admin.wadl</definition></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - List User Global Roles - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def users = jsonObj."roles"
def found = false
if (users != null)
{
	def id = jsonObj."roles".id
	def name = jsonObj."roles".name
	for (i=0; i&lt;id.size(); i++)
	{
		if (id[i] == "3" || name[i] == "identity:user-admin")
		{
			found = true
		}
	}
	assert found == true
}</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - tenant roles - xml" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - tenant roles - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>roles id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - tenant roles - json" disabled="true"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - tenant roles - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>roles id="</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>badname</con:name><con:value>badname</con:value></con:property><con:property><con:name>badAuthToken</con:name><con:value>badToken</con:value></con:property><con:property><con:name>badId</con:name><con:value>11111111</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Users - Neg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="6dafaed8-40df-49b8-adf4-3e920c309be6"><con:settings/><con:testStep type="restrequest" name="GET - userByName - bad name 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - bad name 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: 'badname' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#badname}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - bad name 404 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - bad name 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"message":"User with id: '${#TestCase#badname}' was not found."</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestCase#badname}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - badAuthToken 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username2}"/>
  <con:entry key="X-Auth-Token" value="abc"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - badAuthToken 401 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"message":"No valid token provided</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username2}"/>
  <con:entry key="X-Auth-Token" value="abc"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - badId 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#badId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - badId 404 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"message":"User with id: '${#TestCase#badId}' was not found."</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#badId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - badAuthToken 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - badAuthToken 401 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"message":"No valid token provided. Please use the 'X-Auth-Token' header with a valid token."</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - badId 404 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - badId 404 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#badId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - badId 404 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - badId 404 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#badId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - badAuthToken 401 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - badAuthToken 401 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userById - roles - badAuthToken 401 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by ID" resourcePath="/${#Project#path}/users/{user_id}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userById - roles - badAuthToken 401 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"message":"No valid token provided. Please use the 'X-Auth-Token' header with a valid token."</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestCase#badAuthToken}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - not admin token 403 - xml"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - not admin token 403 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [ns2:message]" disabled="true"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:forbidden[1]/ns2:message[1]/text()</path><content>This function is only available for getting Sub-Users of this account.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:user[1]/@username</path><content>${#TestSuite#username2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - userByName - not admin token 403 - json"><con:settings/><con:config service="identity-admin" methodName="Get a User by Name" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - userByName - not admin token 403 - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>"message":"Access is denied</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" disabled="true"><con:configuration><token>"message":"This function is only available for getting Sub-Users of this account."</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="XPath Match" disabled="true"><con:configuration><path>declare namespace ns1='https://auth.staging.us.ccp.rackspace.net/v2.0/users';
//ns1:Response[1]/ns1:user[1]/ns1:username[1]</path><content>${#TestSuite#username2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>badname</con:name><con:value>badname</con:value></con:property><con:property><con:name>badAuthToken</con:name><con:value>badauth</con:value></con:property><con:property><con:name>badId</con:name><con:value>1000000</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>cmarin4</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>3895e8dc-8771-4cc4-91d0-bc96bf2d273d</con:value></con:property><con:property><con:name>userId</con:name><con:value>121633</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>MossoCloudFS_c0f072fb-aacc-4410-921e-3b2fc7bb8aa1z</con:value></con:property><con:property><con:name>tenantName</con:name><con:value>MossoCloudFS_c0f072fb-aacc-4410-921e-3b2fc7bb8aa1z</con:value></con:property><con:property><con:name>tenantId2</con:name><con:value>999901</con:value></con:property><con:property><con:name>tenantName2</con:name><con:value>999901</con:value></con:property><con:property><con:name>extAlias</con:name><con:value>RAX-KSKEY</con:value></con:property><con:property><con:name>roleId</con:name><con:value>1</con:value></con:property><con:property><con:name>auth-token</con:name><con:value>e973f4be-869a-42e2-b4d7-a7a770e87bf8</con:value></con:property><con:property><con:name>expiredToken</con:name><con:value>a3923e3c-cc8d-4190-9e6a-8d7bd7e2a1-A</con:value></con:property><con:property><con:name>invalidTokenId</con:name><con:value>jenny-test</con:value></con:property><con:property><con:name>tenantTokenId</con:name><con:value>13899dbe-0d6d-4966-9cdc-fe5d26ac93eb</con:value></con:property><con:property><con:name>apiKey</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property><con:property><con:name>newApiKey</con:name><con:value>jenny-key</con:value></con:property><con:property><con:name>credType</con:name><con:value>RAX-KSKEY:apiKeyCredentials</con:value></con:property><con:property><con:name>credType1</con:name><con:value>KEYSTONE:passwordCredentials</con:value></con:property><con:property><con:name>newTenantId</con:name><con:value>103952</con:value></con:property><con:property><con:name>newTenantName</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456a3ef1</con:value></con:property><con:property><con:name>invalidTenantId</con:name><con:value>0</con:value></con:property><con:property><con:name>invalidTenantName</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456a3ef</con:value></con:property><con:property><con:name>otherTenant</con:name><con:value>103950</con:value></con:property><con:property><con:name>invalidUsername</con:name><con:value>authtest</con:value></con:property><con:property><con:name>username2</con:name><con:value>cmarin1</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>userId2</con:name><con:value>191416</con:value></con:property><con:property><con:name>apiKey2</con:name><con:value>7e4a5dda01d9f447695b5ff476a6788f</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>131ed887-f72c-4ae3-bd86-f27fa624abb0</con:value></con:property><con:property><con:name>numTenants</con:name><con:value>2</con:value></con:property><con:property><con:name>tenantIdU2</con:name><con:value>5700812</con:value></con:property><con:property><con:name>tenantNameU2</con:name><con:value>5700812</con:value></con:property><con:property><con:name>username3</con:name><con:value>cmarin3</con:value></con:property><con:property><con:name>password3</con:name><con:value>Password1</con:value></con:property><con:property><con:name>tokenId3</con:name><con:value>19df7a8c-45ee-4fc4-87de-17bde56377c3</con:value></con:property><con:property><con:name>key3</con:name><con:value>0f97f489c848438090250d50c7e1ea88</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - RAX-KSKEY-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Credentials" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="ebff5d3b-5d81-4122-9510-a60305defcab"><con:settings/><con:testStep type="restrequest" name="POST - getAdminToken - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getAdminToken - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#Project#auth-pass}" username="${#Project#auth-user}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - getAdminToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - getAdminToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
//testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("auth-token", tokenId)
testRunner.testCase.testSuite.setPropertyValue("authUserId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - getToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - getToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
//testRunner.testCase.testSuite.setPropertyValue("auth-token", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="transfer" name="transfer token" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>admin-token</con:name><con:sourceType>tokenId</con:sourceType><con:sourceStep>#TestSuite#</con:sourceStep><con:targetType>auth-token</con:targetType><con:targetStep>#TestSuite#</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken other user - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken other user - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#testuser}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user token info 2"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - getToken other user - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - getToken other user - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId2", tokenId)
//testRunner.testCase.testSuite.setPropertyValue("auth-token", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential tenant Id - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential tenant Id - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth tenantId="${#TestSuite#tenantId}"  xmlns="http://docs.openstack.org/identity/api/v2.0">&lt;apiKeyCredentials apiKey="${#TestSuite#apiKey2}" username="${#TestSuite#testUser}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="set json request"><con:settings/><con:config><script>
def json_request = '{"auth":{"RAX-KSKEY:apiKeyCredentials":{"username": "${#TestSuite#testUser}", "apiKey": "${#TestSuite#apiKey2}"}}}'
def json_request2 = '{"auth":{"RAX-KSKEY:apiKeyCredentials":{"username": "${#TestSuite#testUser}", "apiKey": "${#TestSuite#apiKey}"}}}'
testRunner.testCase.testSteps["POST - getToken apiKeyCredential tenant Id - json"].setPropertyValue("Request", json_request)
testRunner.testCase.testSteps["POST - updateUserCredentials - json 1"].setPropertyValue("Request", json_request2)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken apiKeyCredential tenant Id - json"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tokens" methodName="Authenticate for Service API" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken apiKeyCredential tenant Id - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"auth":{"RAX-KSKEY:apiKeyCredentials":{"username": "${#TestSuite#testUser}", "apiKey": "${#TestSuite#apiKey2}"}}}</con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 2"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - getToken apiKeyCredential tenant Id - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)


def versionId = jsonObj."access"."serviceCatalog"."endpoints".versionId
def versionInfo = jsonObj."access"."serviceCatalog"."endpoints".versionInfo
def tenantId = jsonObj."access"."serviceCatalog"."endpoints".tenantId
def serviceName = jsonObj."access"."serviceCatalog".name
log.info serviceName.size()
for (i=0; i&lt;serviceName.size(); i++)
{
	log.info serviceName[i]
	if (serviceName[i] == "cloudServers")
	{
		stop = i
		log.info serviceName[i]
		break;
	}
}
log.info serviceName
log.info tenantId[stop]
log.info versionId[stop]
log.info versionInfo[stop]
assert tenantId[stop] != null
assert versionId[stop] != null
assert versionInfo[stop] != null

</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [versionId]" disabled="true"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://auth-n01.dev.us.ccp.rackspace.net/v2.0/tokens"
def node = holder.getDomNode( "//ns1:Response[1]/ns1:access[1]/ns1:serviceCatalog[1]/ns1:e[/name=cloudFilesCDN]/ns1:endpoints[1]/ns1:e[1]/ns1:versionId[1]" )

assert node != null
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store testToken info"><con:settings/><con:config><script>def testTokenId = context.expand( '${POST - getToken other user - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get testTokenId: " + testTokenId
def testUserId = context.expand( '${POST - getToken other user - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get testUserId: " + testUserId

if (testTokenId == "" | testUserId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("testTokenId", testTokenId)
testRunner.testCase.testSuite.setPropertyValue("testUserId", testUserId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials - json"><con:settings/><con:config service="RAX-KSKEY-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>{"credentials":[{"RAX-KSKEY:apiKeyCredentials":{?&lt;item>}},{"passwordCredentials":{?&lt;item>}}]}</token><ignoreCase>false</ignoreCase><useRegEx>true</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains apiKeyCredential"><con:configuration><token>{"RAX-KSKEY:apiKeyCredentials":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains passwordCredential" disabled="true"><con:configuration><token>{"passwordCredentials":{</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials testuser w admin token - xml"><con:settings/><con:config service="RAX-KSKEY-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials testuser w admin token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@username]"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:credentials[1]/ns2:apiKeyCredentials[1]/@username</path><content>${#TestSuite#testUser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@apiKey]"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:credentials[1]/ns2:apiKeyCredentials[1]/@apiKey</path><content>${#TestSuite#apiKey2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials testuser w admin token - json"><con:settings/><con:config service="RAX-KSKEY-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials testuser w admin token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [username]" disabled="true"><con:configuration><path>declare namespace ns1='http://auth-n02.dev.us.ccp.rackspace.net/v2.0/users/104476/OS-KSADM/credentials';
//ns1:Response[1]/ns1:credentials[1]/ns1:apiKeyCredentials[1]/ns1:e[1]/ns1:username[1]/text()</path><content>${#TestSuite#testUser}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" disabled="true"><con:configuration><scriptText>def response = context.expand( '${GET - listCredentials testuser w admin token - json#Response}' )
log.info response
def responseJson = context.expand('{"credentials":[{"RAX-KSKEY:apiKeyCredentials":{"username":"${#TestSuite#testuser}","apiKey":"${#TestSuite#apiKey}"}}]}')
log.info responseJson
if (response != responseJson)
{
	assert false
}</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>{"credentials":[{"RAX-KSKEY:apiKeyCredentials":{"username":"${#TestSuite#testuser}","apiKey":"${#TestSuite#testApiKey}"}}]}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - apiKeyCredentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - apiKeyCredentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>username="${#TestSuite#testuser}" </token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store  apikey"><con:settings/><con:config><script>//def apiKey = context.expand( '${GET - apiKeyCredentials - xml#ResponseAsXml#declare namespace ns2=\'http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0\'; declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:credentials[1]/ns2:apiKeyCredentials[1]/@apiKey}' )
def apiKey = context.expand( '${GET - apiKeyCredentials - xml#Response#declare namespace ns2=\'http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0\'; //ns2:apiKeyCredentials[1]/@apiKey}' )

log.info "get apiKey: " + apiKey


if (apiKey == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("apiKey", apiKey)
</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - apiKeyCredentials - json"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - apiKeyCredentials - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" disabled="true"><con:configuration><scriptText>def response = context.expand( '${GET - apiKeyCredentials - json#Response}' )
log.info response
def responseJson = context.expand('{"RAX-KSKEY:apiKeyCredentials":{"username":"${#TestSuite#username}","apiKey":"${#TestSuite#apiKey}"}}')
log.info responseJson
if (response != responseJson)
{
	assert false;
}</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"RAX-KSKEY:apiKeyCredentials":{"username":"${#TestSuite#testUser}","apiKey":"${#TestSuite#apiKey2}"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="verify response" disabled="true"><con:settings/><con:config><script>def response = context.expand( '${GET - apiKeyCredentials - json#Response}' )
log.info response
def responseJson = context.expand('{"RAX-KSKEY:apiKeyCredentials":{"username":"${#TestSuite#username}","apiKey":"${#TestSuite#apiKey}"}}')
log.info responseJson
if (response != responseJson)
{
	assert false;
}</script></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body</con:name><con:sourceType>response</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - xml</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" transferChildNodes="false" entitize="false" transferToAll="false"><con:name>body2</con:name><con:sourceType>response2</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - restore apiKey- xml</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="set requests"><con:settings/><con:config><script>//def json_request = '{ "auth":{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#username}", "apiKey":"${#TestSuite#apiKey}" } } }'
//testRunner.testCase.testSteps["POST - getToken apiKeyCredential valid tenant Id - json 2"].setPropertyValue("Request", json_request)
def xml_request1 = '&lt;?xml version="1.0" encoding="UTF-8"?>&lt;apiKeyCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" username="${#TestSuite#testuser}" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>'
testRunner.testCase.testSteps["POST - updateUserCredentials - xml"].setPropertyValue("Request", xml_request1)

def xml_request2 = '&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/>'
testRunner.testCase.testSteps["POST - updateUserCredentials - restore apiKey- xml"].setPropertyValue("Request", xml_request2)

//testRunner.testCase.testSteps["POST - updateUserCredentials - xml"].setHeaderValue("Media Type", "application/json")

def json_request1 = '{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testUser}", "apiKey":"${#TestSuite#testApiKey}" } }'
testRunner.testCase.testSteps["POST - updateUserCredentials - json 1"].setPropertyValue("Request", json_request1)

def json_request2 = '{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testUser}", "apiKey":"${#TestSuite#apiKey}" } }'
testRunner.testCase.testSteps["POST - updateUserCredentials - restore apiKey- json 1"].setPropertyValue("Request", json_request2)

def json_request3 = '{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testUser}", "apiKey":"${#TestSuite#apiKey}" } }'
testRunner.testCase.testSteps["POST - addUserCredentials - json"].setPropertyValue("Request", json_request3)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8"?>&lt;apiKeyCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" username="${#TestSuite#testuser}" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@apiKey]"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns2:apiKeyCredentials[1]/@apiKey</path><content>${#TestSuite#testApiKey}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - restore apiKey- xml"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - restore apiKey- xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@apiKey]"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns2:apiKeyCredentials[1]/@apiKey</path><content>${#TestSuite#apiKey}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>${#TestSuite#apiKey}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:username/><con:password/><con:domain/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - json 1"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - json 1" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testUser}", "apiKey":"${#TestSuite#testApiKey}" } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>def response = context.expand( '${POST - updateUserCredentials - json 1#Response}' )
log.info response
assert response.contains(context.expand('${#TestSuite#testApiKey}'))</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - restore apiKey- json 1"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - restore apiKey- json 1" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testUser}", "apiKey":"${#TestSuite#apiKey}" } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>def response = context.expand( '${POST - updateUserCredentials - restore apiKey- json 1#Response}' )
log.info response
assert response.contains(context.expand('${#TestSuite#apiKey}'))</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/><con:domain/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials w testuser token - xml"><con:settings/><con:config service="RAX-KSKEY-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials w testuser token - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:userDisabled[1]/ns1:message[1]/text()</path><content>Access is denied</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains"><con:configuration><token>apiKeyCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" disabled="true"><con:configuration><token>passwordCredentials</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials w testuser token - json"><con:settings/><con:config service="RAX-KSKEY-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials w testuser token - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/users/${#TestSuite#testUserId}/OS-KSADM/credentials';
//ns1:Fault[1]/ns1:userDisabled[1]/ns1:message[1]/text()</path><content>Access is denied</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"RAX-KSKEY:apiKeyCredentials"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple NotContains" disabled="true"><con:configuration><token>"passwordCredentials"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#testTokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer2" disabled="true"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>body</con:name><con:sourceType>responseJson</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>body2</con:name><con:sourceType>response2Json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - restore apiKey - json</con:targetStep></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>body3</con:name><con:sourceType>response2Json</con:sourceType><con:sourceStep>#TestCase#</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>POST - updateUserCredentials - restore apiKey - json</con:targetStep></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - json" disabled="true"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testApiKey}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - restore apiKey - json" disabled="true"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - restore apiKey - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/><con:domain/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - xml" disabled="true"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - credentials after delete - xml" disabled="true"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="List Credentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - credentials after delete - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - xml- NOT IMPLETENTED" disabled="true"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential." resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - xml- NOT IMPLETENTED" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - credentials - xml" disabled="true"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="List Credentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - credentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - userCredentials - json" disabled="true"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Delete user credential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - userCredentials - json" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - json" disabled="true"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential." resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{ "RAX-KSKEY:apiKeyCredentials":{ "username":"${#TestSuite#testUser}", "apiKey":"${#TestSuite#apiKey}" } }</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 501
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - credentials - json" disabled="true"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="List Credentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - credentials - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - updateUserCredentials - restore apiKey - xml" disabled="true"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Add user Credential." resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - updateUserCredentials - restore apiKey - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:credentials><con:username/><con:password/><con:domain/></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testApiKey}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Copy of POST - updateUserCredentials - xml" disabled="true"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Update user credential" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Copy of POST - updateUserCredentials - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;apiKeyCredentials username="cmarin3" apiKey="${#TestSuite#apiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@apiKey]"><con:configuration><path>declare namespace ns2='http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0';
//ns2:apiKeyCredentials[1]/@apiKey</path><content>${#TestSuite#testApiKey}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>response</con:name><con:value>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#testApiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:value></con:property><con:property><con:name>response2</con:name><con:value>&lt;apiKeyCredentials username="${#TestSuite#testuser}" apiKey="${#TestSuite#apiKey}" xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSKEY/v1.0"/></con:value></con:property><con:property><con:name>responseJson</con:name><con:value>{ "RAX-KSKEY:apikeyCredentials":{ "username":"${#TestSuite#userId}", "apikey":"${#TestSuite#testApiKey}" } }</con:value></con:property><con:property><con:name>response2Json</con:name><con:value>{ "RAX-KSKEY:apikeyCredentials":{ "username":"${#TestSuite#userId}", "apikey":"${#TestSuite#apiKey}" } } </con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Credentials - Neg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="39f508ee-5799-458e-8eea-05985cc50fbe"><con:settings/><con:testStep type="restrequest" name="GET - listCredentials no token - xml 401"><con:settings/><con:config service="RAX-KSKEY-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials no token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="bad"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials no token - json 401"><con:settings/><con:config service="RAX-KSKEY-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials no token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#testUserId}"/>
  <con:entry key="X-Auth-Token" value="bad"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials mix token user - xml 403"><con:settings/><con:config service="RAX-KSKEY-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials mix token user - xml 403" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:forbidden[1]/ns1:message[1]</path><content>Not authorized.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listCredentials mix token user - json 403"><con:settings/><con:config service="RAX-KSKEY-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listCredentials mix token user - json 403" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/users/104472/OS-KSADM/credentials';
//ns1:Fault[1]/ns1:userDisabled[1]/ns1:message[1]/text()</path><content>Access is denied</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"forbidden":{"code":403,</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - apiKeyCredentials no authtoken - xml 401"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - apiKeyCredentials no authtoken - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="bad"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - apiKeyCredentials no authtoken - json 401"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - apiKeyCredentials no authtoken - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/users/104472/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized":{"code":401,"message":"No valid token provided. Please use the 'X-Auth-Token' header with a valid token."</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="bad"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - apiKeyCredentials mix token user - xml 403"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - apiKeyCredentials mix token user - xml 403" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:forbidden[1]/ns1:message[1]</path><content>Not authorized.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - apiKeyCredentials mix token user - json 403"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - apiKeyCredentials mix token user - json 403" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/users/104472/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials';
//ns1:Fault[1]/ns1:userDisabled[1]/ns1:message[1]/text()</path><content>Access is denied</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"forbidden":{"code":403</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - apiKeyCredentials invalid user - xml 404"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - apiKeyCredentials invalid user - xml 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>User with id: '${GET - apiKeyCredentials invalid user - xml 404#userId}' was not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - apiKeyCredentials invalid user - json 404"><con:settings/><con:config service="RAX-KSKEY-admin" methodName="Get user Credentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - apiKeyCredentials invalid user - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/users/12345/OS-KSADM/credentials/RAX-KSKEY:apiKeyCredentials';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>Credential type RAX-KSKEY:apiKeyCredentials was not found for User with Id: '${GET - apiKeyCredentials invalid user - json 404#userId}'</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>"message":"User with id: '${GET - apiKeyCredentials invalid user - json 404#userId}' was not found."</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>cmarin2</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>73df8dfd-6b6b-4d80-8ab3-99992ec41fa6</con:value></con:property><con:property><con:name>apiKey</con:name><con:value>7e4a5dda01d9f447695b5ff476a6788f</con:value></con:property><con:property><con:name>userId</con:name><con:value>104472</con:value></con:property><con:property><con:name>testuser</con:name><con:value>cmarin1</con:value></con:property><con:property><con:name>testpassword</con:name><con:value>Password1</con:value></con:property><con:property><con:name>testTokenId</con:name><con:value>131ed887-f72c-4ae3-bd86-f27fa624abb0</con:value></con:property><con:property><con:name>testUserId</con:name><con:value>191416</con:value></con:property><con:property><con:name>testApiKey</con:name><con:value>7e4a5dda01d9f447695b5ff476a6788f</con:value></con:property><con:property><con:name>newUser</con:name><con:value>jmunoz1</con:value></con:property><con:property><con:name>auth-token</con:name><con:value>e973f4be-869a-42e2-b4d7-a7a770e87bf8</con:value></con:property><con:property><con:name>authUserId</con:name><con:value>153345</con:value></con:property><con:property><con:name>apiKey2</con:name><con:value>7e4a5dda01d9f447695b5ff476a6788f</con:value></con:property><con:property><con:name>tokenId2</con:name><con:value>131ed887-f72c-4ae3-bd86-f27fa624abb0</con:value></con:property><con:property><con:name>userId2</con:name><con:value>191416</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>10203040</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - RAX-KSGRP-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="groups" searchProperties="true" id="826c402e-92d4-4df3-900d-48567e827916"><con:settings/><con:testStep type="restrequest" name="POST - getToken - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#Project#auth-pass}" username="${#Project#auth-user}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - getToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - getToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("auth-token", tokenId)
testRunner.testCase.testSuite.setPropertyValue("authUserId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - xml"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups - json"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"RAX-KSGRP:groups":[{"id":</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Groups - Neg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b49db4e0-3a0a-4022-b6df-b5b6ae3aeac7"><con:settings/><con:testStep type="restrequest" name="GET - listGroups no token - xml 401"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups no token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="bad"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups no token - json 401"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups no token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="bad"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups badToken - xml 401"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups badToken - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="badtoken"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups badToken - json 401"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups badToken - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/users/104472/RAX-KSGRP';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="badtoken"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups invalid user id - xml 404"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups invalid user id - xml 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>User with id: '${#TestSuite#username}' was not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups invalid user id - json 404"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups invalid user id - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/users/cmarin2/RAX-KSGRP';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>User with id: '${#TestSuite#username}' was not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound":{"code":404,"message":"User with id: '${#TestSuite#username}' was not found."}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups invalid user - xml"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups invalid user - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@contentLength]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]</path><content>User with id: '12345' was not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="12345"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listGroups invalid user - json"><con:settings/><con:config service="RAX-KSGRP-admin" methodName="List Groups for a User" resourcePath="/${#Project#path}/users/{userId}/RAX-KSGRP" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listGroups invalid user - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/users/123456/RAX-KSGRP';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>User with id: '${GET - listGroups invalid user - json 404#userId}' was not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>User with id: '123456' was not found.</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="123456"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>jasonseats</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>268aa813-936a-4aed-8ee2-e8608037ae4b</con:value></con:property><con:property><con:name>userId</con:name><con:value>43880</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>103952</con:value></con:property><con:property><con:name>groupId</con:name><con:value/></con:property><con:property><con:name>groupName</con:name><con:value/></con:property><con:property><con:name>auth-token</con:name><con:value>e973f4be-869a-42e2-b4d7-a7a770e87bf8</con:value></con:property><con:property><con:name>authUserId</con:name><con:value>153345</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - RAX-KSQA-admin"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="secretQA" searchProperties="true" id="7c0975bb-1590-4a27-8602-5ebd7d849373" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - getToken - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#Project#auth-pass}" username="${#Project#auth-user}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - getToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - getToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("auth-token", tokenId)
testRunner.testCase.testSuite.setPropertyValue("authUserId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get a User by Name - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users" methodName="Get a User by Name" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get a User by Name - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="Valid HTTP Status Codes" name="Valid HTTP Status Codes"><con:configuration><codes>200</codes></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>def userid = context.expand( '${GET - Get a User by Name - xml#Response#declare namespace ns2=\'http://docs.openstack.org/identity/api/v2.0\'; //ns2:user[1]/@id}' )
context.testCase.testSuite.setPropertyValue("userId", userid)</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#username}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get User SecretQA"><con:settings/><con:config service="RAX-KSQA-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" methodName="Get User SecretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get User SecretQA" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get User SecretQA#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def Q = jsonObj."RAX-KSQA:secretQA".question
log.info Q

assert (jsonObj != null)
assert (Q != null)</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store QA"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get User SecretQA#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def Q = jsonObj."RAX-KSQA:secretQA".question
log.info Q

def A = jsonObj."RAX-KSQA:secretQA".answer
log.info A

// store info
testRunner.testCase.testSuite.setPropertyValue("question", Q)
testRunner.testCase.testSuite.setPropertyValue("answer", A)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get User SecretQA - json"><con:settings/><con:config service="RAX-KSQA-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" methodName="Get User SecretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get User SecretQA - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get User SecretQA - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def Q = jsonObj."RAX-KSQA:secretQA".question
log.info Q

assert (jsonObj != null)
assert (Q != null)</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get User SecretQA - xml"><con:settings/><con:config service="RAX-KSQA-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" methodName="Get User SecretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get User SecretQA - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get User SecretQA - xml#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def Q = jsonObj."RAX-KSQA:secretQA".question
log.info Q

assert (jsonObj != null)
assert (Q != "")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@username]"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns3:secretQA[1]/@username</path><content>${#TestSuite#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@question]"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns3:secretQA[1]/@question</path><content>${#TestSuite#question}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@answer]"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns3:secretQA[1]/@answer</path><content>${#TestSuite#answer}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Update User SecretQA"><con:settings/><con:config service="RAX-KSQA-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" methodName="Update User SecretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Update User SecretQA" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0" question="${#TestSuite#updateQuestion}" answer="${#TestSuite#updateAnswer}" /></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="wait 1"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get User SecretQA first update - xml"><con:settings/><con:config service="RAX-KSQA-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" methodName="Get User SecretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get User SecretQA first update - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get User SecretQA - xml#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def Q = jsonObj."RAX-KSQA:secretQA".question
log.info Q

assert (jsonObj != null)
assert (Q != "")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@username]"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns3:secretQA[1]/@username</path><content>${#TestSuite#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@question]"><con:configuration><path>declare namespace ns4='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns4:secretQA[1]/@question</path><content>${#TestSuite#updateQuestion}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@answer]"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns3:secretQA[1]/@answer</path><content>${#TestSuite#updateAnswer}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="set json request"><con:settings/><con:config><script>def json_req1 = '{"RAX-KSQA:secretQA": {"question": "${#TestSuite#question}","answer": "${#TestSuite#answer}"}}'

testRunner.testCase.testSteps['PUT - Update User SecretQA - json'].setPropertyValue("Request", json_req1)

//def json_req1 = '{"RAX-KSQA:secretQA": {"question": "${#TestSuite#question}","answer": "${#TestSuite#answer}"}}'

//testRunner.testCase.testSteps['PUT - Update User SecretQA - json'].setPropertyValue("Request", json_req1)</script></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Update User SecretQA - json"><con:settings/><con:config service="RAX-KSQA-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" methodName="Update User SecretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Update User SecretQA - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>{"RAX-KSQA:secretQA": {"question": "${#TestSuite#question}","answer": "${#TestSuite#answer}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="delay" name="wait 2"><con:settings/><con:config><delay>3000</delay></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get User SecretQA after update - xml"><con:settings/><con:config service="RAX-KSQA-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" methodName="Get User SecretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get User SecretQA after update - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get User SecretQA - xml#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def Q = jsonObj."RAX-KSQA:secretQA".question
log.info Q

assert (jsonObj != null)
assert (Q != "")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@username]"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns3:secretQA[1]/@username</path><content>${#TestSuite#username}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@question]"><con:configuration><path>declare namespace ns4='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns4:secretQA[1]/@question</path><content>${#TestSuite#question}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@answer]"><con:configuration><path>declare namespace ns3='http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0';
//ns3:secretQA[1]/@answer</path><content>${#TestSuite#answer}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="secretQA - Neg" searchProperties="true" id="1f999bca-09c0-4141-83f7-3a8ea2cbcbbd" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="restrequest" name="POST - getToken regular user - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken regular user - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store regular user token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - getToken regular user - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - getToken regular user - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get User SecretQA - neg 403"><con:settings/><con:config service="RAX-KSQA-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" methodName="Get User SecretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get User SecretQA - neg 403" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get User SecretQA - neg 401"><con:settings/><con:config service="RAX-KSQA-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" methodName="Get User SecretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get User SecretQA - neg 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get User SecretQA - neg 401#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def code = jsonObj."unauthorized".code
log.info code
assert code == 401
def msg = jsonObj."unauthorized".message
log.info msg
assert msg.contains("No valid token provided.")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="bad"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get User SecretQA 2 - neg 401"><con:settings/><con:config service="RAX-KSQA-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" methodName="Get User SecretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get User SecretQA 2 - neg 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get User SecretQA 2 - neg 401#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def code = jsonObj."unauthorized".code
log.info code
assert code == 401
def msg = jsonObj."unauthorized".message
log.info msg
assert msg.contains("No valid token provided.")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="123456"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get User SecretQA wrong userId - neg 404"><con:settings/><con:config service="RAX-KSQA-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" methodName="Get User SecretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get User SecretQA wrong userId - neg 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get User SecretQA wrong userId - neg 404#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def code = jsonObj."itemNotFound".code
log.info code
assert code == 404
def msg = jsonObj."itemNotFound".message
log.info msg
def userId = context.expand( '${GET - Get User SecretQA wrong userId - neg ?#userId}' )
assert msg.contains("User with Id:")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="123456"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Update User SecretQA - neg 403"><con:settings/><con:config service="RAX-KSQA-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" methodName="Update User SecretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Update User SecretQA - neg 403" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
          question="${#TestSuite#updateQuestion}"
          answer="${#TestSuite#updateAnswer}" /></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${PUT - Update User SecretQA - neg 403#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)
def code = jsonObj."forbidden".code
log.info code
assert code == 403
def msg = jsonObj."forbidden".message
log.info msg
assert msg.contains("Access is denied")</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get User SecretQA - xml neg 403"><con:settings/><con:config service="RAX-KSQA-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" methodName="Get User SecretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get User SecretQA - xml neg 403" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [ns2:message]"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:forbidden[1]/ns2:message[1]/text()</path><content>Access is denied</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get User SecretQA xml - neg 401"><con:settings/><con:config service="RAX-KSQA-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" methodName="Get User SecretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get User SecretQA xml - neg 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [ns2:message]"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:unauthorized[1]/ns2:message[1]/text()</path><content>No valid token provided. Please use the 'X-Auth-Token' header with a valid token.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="bad"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Update User SecretQA xml - neg 403"><con:settings/><con:config service="RAX-KSQA-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" methodName="Update User SecretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Update User SecretQA xml - neg 403" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
          question="${#TestSuite#updateQuestion}"
          answer="${#TestSuite#updateAnswer}" /></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 403</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [ns2:message]"><con:configuration><path>declare namespace ns2='http://docs.openstack.org/identity/api/v2.0';
//ns2:forbidden[1]/ns2:message[1]/text()</path><content>Access is denied</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Update User SecretQA xml - neg 404"><con:settings/><con:config service="RAX-KSQA-admin" resourcePath="/${#Project#path}/users/{userId}/RAX-KSQA/secretqa" methodName="Update User SecretQA" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Update User SecretQA xml - neg 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;secretQA xmlns="http://docs.rackspace.com/identity/api/ext/RAX-KSQA/v1.0"
          question="${#TestSuite#updateQuestion}"
          answer="${#TestSuite#updateAnswer}" /></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [ns2:message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]</path><content>User with Id: '123456'  not found (verify Id).</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="123456"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>cmarin1</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>userId</con:name><con:value>191416</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>131ed887-f72c-4ae3-bd86-f27fa624abb0</con:value></con:property><con:property><con:name>auth-token</con:name><con:value>e973f4be-869a-42e2-b4d7-a7a770e87bf8</con:value></con:property><con:property><con:name>username2</con:name><con:value>cmarin5</con:value></con:property><con:property><con:name>password2</con:name><con:value>Password1</con:value></con:property><con:property><con:name>userId2</con:name><con:value/></con:property><con:property><con:name>question</con:name><con:value>Is this a test too?</con:value></con:property><con:property><con:name>answer</con:name><con:value>Yes, it is.</con:value></con:property><con:property><con:name>updateQuestion</con:name><con:value>What is your pet name?</con:value></con:property><con:property><con:name>updateAnswer</con:name><con:value>Tom</con:value></con:property><con:property><con:name>authUserId</con:name><con:value>153345</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - OS-KSCATALOG-admin" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="endpoint template operations" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b3e1bbcf-1764-4261-88db-585eb37df2c9"><con:settings/><con:testStep type="restrequest" name="POST - getAuthToken - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getAuthToken - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - getAuthToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - getAuthToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("auth-token", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointTemplates - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoint Templates" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointTemplates - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestSuite#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointTemplates - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoint Templates" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointTemplates - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestSuite#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request>&lt;v1:endpointTemplate adminURL="http://127.0.0.1:35357/v2.0" enabled="true" global="true" id="" internalURL="http://127.0.0.1:5000/v2.0" name="identity" publicURL="http://keystone.publicinternets.com/v2.0" region="RegionTwo" type="identity" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">&lt;v1:version id="1" info="https://compute.north.public.com/v1/ " list="https://compute.north.public.com/"/>&lt;atom:link href="https://service-href.com" rel="author" xmlns:atom="http://www.w3.org/2005/Atom"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store new endpointTemplate info"><con:settings/><con:config><script>def id = context.expand( '${POST - addEndpointTemplate - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0\'; //ns1:endpointTemplate[1]/@id}' )

testRunner.testCase.testSuite.setPropertyValue("newTemplateId", id)

def region = context.expand( '${POST - addEndpointTemplate - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0\'; //ns1:endpointTemplate[1]/@region}' )

testRunner.testCase.testSuite.setPropertyValue("newTemplateRegion", region)

def name = context.expand( '${POST - addEndpointTemplate - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0\'; //ns1:endpointTemplate[1]/@name}' )

testRunner.testCase.testSuite.setPropertyValue("newTemplateName", name)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration/></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate result"><con:configuration><scriptText>def region = context.expand( '${GET - endpointTemplate - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0\'; //ns1:endpointTemplate[1]/@region}' )
def name = context.expand( '${GET - endpointTemplate - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0\'; //ns1:endpointTemplate[1]/@name}' )
def newTemplateRegion = context.expand( '${#TestSuite#newTemplateRegion}' )
def newTemplateName = context.expand( '${#TestSuite#newTemplateName}' )
assert (name == newTemplateName)
assert (region == newTemplateRegion)</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="${#TestSuite#newTemplateId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTemplate - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint Template." resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTemplate - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="${#TestSuite#newTemplateId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate - xml 400"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate - xml 400" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate result" disabled="true"><con:configuration><scriptText>def region = context.expand( '${GET - endpointTemplate - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0\'; //ns1:endpointTemplate[1]/@region}' )
def name = context.expand( '${GET - endpointTemplate - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0\'; //ns1:endpointTemplate[1]/@name}' )
def newTemplateRegion = context.expand( '${#TestSuite#newTemplateRegion}' )
def newTemplateName = context.expand( '${#TestSuite#newTemplateName}' )
assert (name == newTemplateName)
assert (region == newTemplateRegion)</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>The endpoint template could not be found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="${#TestSuite#newTemplateId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="set json request"><con:settings/><con:config><script>def jsonReq = '{"OS-KSCATALOG:endpointTemplate":{"id":1,"region":"RegionTwo","global":true,"type":"identity","name":"identity","publicURL":"http://keystone.publicinternets.com/v2.0","internalURL":"http://127.0.0.1:5000/v2.0","adminURL":"http://127.0.0.1:35357/v2.0","versionId":"1","versionInfo":"http://keystone.publicinternets.com/v2.0","versionList":"http://keystone.publicinternets.com/","enabled":true}}'
testRunner.testCase.testSteps["POST - addEndpointTemplate - json"].setPropertyValue("Request", jsonReq)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>{"OS-KSCATALOG:endpointTemplate":{"id":1,"region":"RegionTwo","global":true,"type":"identity","name":"identity","publicURL":"http://keystone.publicinternets.com/v2.0","internalURL":"http://127.0.0.1:5000/v2.0","adminURL":"http://127.0.0.1:35357/v2.0","versionId":"1","versionInfo":"http://keystone.publicinternets.com/v2.0","versionList":"http://keystone.publicinternets.com/","enabled":true}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="json store data" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - endpointTemplate - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def id = jsonObj."OS-KSCATALOG:endpointTemplate".id
log.info id
def name = jsonObj."OS-KSCATALOG:endpointTemplate".name
log.info name
def region = jsonObj."OS-KSCATALOG:endpointTemplate".region
log.info region

</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store info"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - addEndpointTemplate - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def id = jsonObj."OS-KSCATALOG:endpointTemplate".id
log.info id
def name = jsonObj."OS-KSCATALOG:endpointTemplate".name
log.info name
def region = jsonObj."OS-KSCATALOG:endpointTemplate".region
log.info region
testRunner.testCase.testSuite.setPropertyValue("newTemplateId", id)
testRunner.testCase.testSuite.setPropertyValue("newTemplateName", name)
testRunner.testCase.testSuite.setPropertyValue("newTemplateRegion", region)

</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Json Parse"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - endpointTemplate - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def name = jsonObj."OS-KSCATALOG:endpointTemplate".name
log.info name
def region = jsonObj."OS-KSCATALOG:endpointTemplate".region
log.info region
def newTemplateName = context.expand( '${#TestSuite#newTemplateName}' )
def newTemplateRegion = context.expand( '${#TestSuite#newTemplateRegion}' )

assert (name == newTemplateName)
assert (region == newTemplateRegion)</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="${#TestSuite#newTemplateId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTemplate - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint Template." resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTemplate - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="${#TestSuite#newTemplateId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate - json 400"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate - json 400" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate result" disabled="true"><con:configuration><scriptText>def region = context.expand( '${GET - endpointTemplate - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0\'; //ns1:endpointTemplate[1]/@region}' )
def name = context.expand( '${GET - endpointTemplate - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0\'; //ns1:endpointTemplate[1]/@name}' )
def newTemplateRegion = context.expand( '${#TestSuite#newTemplateRegion}' )
def newTemplateName = context.expand( '${#TestSuite#newTemplateName}' )
assert (name == newTemplateName)
assert (region == newTemplateRegion)</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound": {"message": "The endpoint template could not be found", "code": "404"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="${#TestSuite#newTemplateId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="false" keepSession="false" maxResults="0" name="endpoint template operations - Neg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="03b81010-891a-4170-abff-9368f91ef36d"><con:settings/><con:testStep type="restrequest" name="POST - getToken - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password2}" username="${#TestSuite#username2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - getToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - getToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointTemplates no auth-token - xml 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoint Templates" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointTemplates no auth-token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceId" value="${#TestSuite#serviceId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointTemplates no auth-token - json 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoint Templates" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointTemplates no auth-token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "Missing token", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceId" value="${#TestSuite#serviceId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointTemplates w regular token - xml 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoint Templates" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointTemplates w regular token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>You are not authorized to make this call</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestSuite#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listEndpointTemplates w regular token - json 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoint Templates" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listEndpointTemplates w regular token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "You are not authorized to make this call", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestSuite#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate no auth-token - xml 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate no auth-token - xml 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate adminURL="http://127.0.0.1:35357/v2.0" enabled="true" global="true" id="" internalURL="http://127.0.0.1:5000/v2.0" name="identity" publicURL="http://keystone.publicinternets.com/v2.0" region="RegionTwo" type="identity" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">&lt;v1:version id="1" info="https://compute.north.public.com/v1/ " list="https://compute.north.public.com/"/>&lt;atom:link href="https://service-href.com" rel="author" xmlns:atom="http://www.w3.org/2005/Atom"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate no auth-token - json 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate no auth-token - json 401" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate adminURL="http://127.0.0.1:35357/v2.0" enabled="true" global="true" id="" internalURL="http://127.0.0.1:5000/v2.0" name="identity" publicURL="http://keystone.publicinternets.com/v2.0" region="RegionTwo" type="identity" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">&lt;v1:version id="1" info="https://compute.north.public.com/v1/ " list="https://compute.north.public.com/"/>&lt;atom:link href="https://service-href.com" rel="author" xmlns:atom="http://www.w3.org/2005/Atom"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "Missing token", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate w regular token - xml 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate w regular token - xml 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate adminURL="http://127.0.0.1:35357/v2.0" enabled="true" global="true" id="" internalURL="http://127.0.0.1:5000/v2.0" name="identity" publicURL="http://keystone.publicinternets.com/v2.0" region="RegionTwo" type="identity" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">&lt;v1:version id="1" info="https://compute.north.public.com/v1/ " list="https://compute.north.public.com/"/>&lt;atom:link href="https://service-href.com" rel="author" xmlns:atom="http://www.w3.org/2005/Atom"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>You are not authorized to make this call</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate w regular token - json 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate w regular token - json 401" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate adminURL="http://127.0.0.1:35357/v2.0" enabled="true" global="true" id="" internalURL="http://127.0.0.1:5000/v2.0" name="identity" publicURL="http://keystone.publicinternets.com/v2.0" region="RegionTwo" type="identity" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">&lt;v1:version id="1" info="https://compute.north.public.com/v1/ " list="https://compute.north.public.com/"/>&lt;atom:link href="https://service-href.com" rel="author" xmlns:atom="http://www.w3.org/2005/Atom"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "You are not authorized to make this call", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate w invalid service - xml 400"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate w invalid service - xml 400" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate adminURL="http://127.0.0.1:35357/v2.0" enabled="true" global="true" id="" internalURL="http://127.0.0.1:5000/v2.0" name="any" publicURL="http://keystone.publicinternets.com/v2.0" region="RegionTwo" type="any" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">&lt;v1:version id="1" info="https://compute.north.public.com/v1/ " list="https://compute.north.public.com/"/>&lt;atom:link href="https://service-href.com" rel="author" xmlns:atom="http://www.w3.org/2005/Atom"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:badRequest[1]/ns1:message[1]/text()</path><content>A service with that name and type doesn't exist.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTemplate w invalid service - json 400"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTemplate w invalid service - json 400" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate adminURL="http://127.0.0.1:35357/v2.0" enabled="true" global="true" id="" internalURL="http://127.0.0.1:5000/v2.0" name="any" publicURL="http://keystone.publicinternets.com/v2.0" region="RegionTwo" type="any" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0">&lt;v1:version id="1" info="https://compute.north.public.com/v1/ " list="https://compute.north.public.com/"/>&lt;atom:link href="https://service-href.com" rel="author" xmlns:atom="http://www.w3.org/2005/Atom"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"badRequest": {"message": "A service with that name and type doesn't exist.", "code": "400"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate no auth-token - xml 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate no auth-token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="endpointTemplateId" value="${#TestSuite#newTemplateId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate no auth-token - json 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate no auth-token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "Missing token", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="endpointTemplateId" value="${#TestSuite#newTemplateId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate w regular token - xml 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate w regular token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>You are not authorized to make this call</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="${#TestSuite#newTemplateId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate w regular token - json 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate w regular token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "You are not authorized to make this call", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="${#TestSuite#newTemplateId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate no templateId - xml 400"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate no templateId - xml 400" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Validate result" disabled="true"><con:configuration><scriptText>def region = context.expand( '${GET - endpointTemplate - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0\'; //ns1:endpointTemplate[1]/@region}' )
def name = context.expand( '${GET - endpointTemplate - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0\'; //ns1:endpointTemplate[1]/@name}' )
def newTemplateRegion = context.expand( '${#TestSuite#newTemplateRegion}' )
def newTemplateName = context.expand( '${#TestSuite#newTemplateName}' )
assert (name == newTemplateName)
assert (region == newTemplateRegion)</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>The endpoint template could not be found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="${#TestSuite#newTemplateId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTemplate no templateId - json 400"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint Template" resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTemplate no templateId - json 400" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound": {"message": "The endpoint template could not be found", "code": "404"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="${#TestSuite#newTemplateId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTemplate no auth-token - xml 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint Template." resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTemplate no auth-token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="endpointTemplateId" value="${#TestSuite#newTemplateId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTemplate no auth-token - json 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint Template." resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTemplate no auth-token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "Missing token", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="endpointTemplateId" value="${#TestSuite#newTemplateId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTemplate w regular token - xml 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint Template." resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTemplate w regular token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>You are not authorized to make this call</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="${#TestSuite#newTemplateId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTemplate w regular token - json 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint Template." resourcePath="/${#Project#path}/OS-KSCATALOG/endpointTemplates/{endpointTemplateId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTemplate w regular token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "You are not authorized to make this call", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="endpointTemplateId" value="${#TestSuite#newTemplateId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="endpoint operations" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="f64eb613-f3e7-42c0-99bd-c007256134a4"><con:settings/><con:testStep type="restrequest" name="GET - tenants - xml"><con:settings/><con:config service="identity-admin" methodName="Get Tenants" resourcePath="/${#Project#path}/tenants" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - tenants - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "GET - tenants - xml - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>tenants</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store tenant info"><con:settings/><con:config><script>def tenantId = context.expand( '${GET - tenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[1]/@id}' )
def tenantName = context.expand( '${GET - tenants - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenants[1]/ns1:tenant[1]/@name}' )
log.info "get tenantId: " + tenantId
log.info "get tenantName: " + tenantName
if (tenantId == "" || tenantName == "")
{
	assert false;	
}

testRunner.testCase.testSuite.setPropertyValue("tenantId", tenantId)
testRunner.testCase.testSuite.setPropertyValue("tenantName", tenantName)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Endpoints - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoints" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Endpoints - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Endpoints - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoints" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Endpoints - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate id="12" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">identity&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="validate response"><con:configuration><scriptText>def region = context.expand( '${POST - addEndpointTenant - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:endpoint[1]/@region}' )
def type = context.expand( '${POST - addEndpointTenant - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:endpoint[1]/@type}' )
def name = context.expand( '${POST - addEndpointTenant - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:endpoint[1]/@name}' )
def newTemplateName = context.expand( '${#TestSuite#newTemplateName}' )
def newTemplateRegion = context.expand( '${#TestSuite#newTemplateRegion}' )
assert (name == newTemplateName)
assert (region == newTemplateRegion)</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store endpointId"><con:settings/><con:config><script>def id = context.expand( '${POST - addEndpointTenant - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:endpoint[1]/@id}' )

testRunner.testCase.testSuite.setPropertyValue("newEndpointId", id)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant - xml"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint." resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant after delete - xml 400"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant after delete - xml 400" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="set json request"><con:settings/><con:config><script>def jsonReq = '{"OS-KSCATALOG:endpointTemplate":{"id":"12"}}'

testRunner.testCase.testSteps["POST - addEndpointTenant - json"].setPropertyValue("Request", jsonReq)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>{"OS-KSCATALOG:endpointTemplate":{"id":"12"}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="validate response"><con:configuration><scriptText>def region = context.expand( '${POST - addEndpointTenant - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:endpoint[1]/@region}' )
def type = context.expand( '${POST - addEndpointTenant - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:endpoint[1]/@type}' )
def name = context.expand( '${POST - addEndpointTenant - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:endpoint[1]/@name}' )
def newTemplateName = context.expand( '${#TestSuite#newTemplateName}' )
def newTemplateRegion = context.expand( '${#TestSuite#newTemplateRegion}' )
assert (name == newTemplateName)
assert (region == newTemplateRegion)</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant - json"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint." resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant after delete - json 400"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant after delete - json 400" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="endpoint operations - Neg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="4e51d6a6-f489-4af2-aab4-6f4fc28f2004"><con:settings/><con:testStep type="restrequest" name="GET - List Endpoints no auth-token - xml 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoints" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Endpoints no auth-token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tenantId" value="${#TestSuite#tenantId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Endpoints no auth-token - json 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoints" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Endpoints no auth-token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "Missing token", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tenantId" value="${#TestSuite#tenantId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Endpoints w regular token - xml 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoints" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Endpoints w regular token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>You are not authorized to make this call</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Endpoints w regular token - json 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="List Endpoints" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Endpoints w regular token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "You are not authorized to make this call", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant no auth-token - xml 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant no auth-token - xml 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate id="12" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">identity&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tenantId" value="${#TestSuite#tenantId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant no auth-token - json 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant no auth-token - json 401" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate id="12" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">identity&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "Missing token", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tenantId" value="${#TestSuite#tenantId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant w regular token - xml 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant w regular token - xml 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate id="12" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">identity&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>You are not authorized to make this call</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant w regular token - json 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant w regular token - json 401" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate id="12" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">identity&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "You are not authorized to make this call", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant no endpointID - xml 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant no endpointID - xml 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate id="" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">identity&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>The endpoint template could not be found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant no endpointID - json 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant no endpointID - json 404" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate id="" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">identity&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="itemNotFound"><con:configuration><token>{"itemNotFound": {"message": "The endpoint template could not be found", "code": "404"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant no endpointTemplate - xml 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant no endpointTemplate - xml 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate id="12" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="itemNotFound"><con:configuration><token>{"itemNotFound": {"message": "The endpoint template could not be found", "code": "404"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant no endpointTemplate - json 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant no endpointTemplate - json 404" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate id="12" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="itemNotFound"><con:configuration><token>{"itemNotFound": {"message": "The endpoint template could not be found", "code": "404"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant no tenantId - xml 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant no tenantId - xml 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate id="12" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">identity&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>Item not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant no tenantId - json 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant no tenantId - json 404" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate id="12" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">identity&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound": {"message": "Item not found.", "code": 404,</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant invalid tenantId - xml 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant invalid tenantId - xml 404" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate id="12" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">identity&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>The tenant not found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="5"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addEndpointTenant invalid tenantId - json 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Add Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addEndpointTenant invalid tenantId - json 404" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:endpointTemplate id="12" xsi:type="v1:EndpointTemplateWithOnlyId" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSCATALOG/v1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">identity&lt;xml-fragment id="?"/>&lt;/v1:endpointTemplate></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound": {"message": "The tenant not found", "code": "404"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="5"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant no auth-token - xml 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant no auth-token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant no auth-token - json 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant no auth-token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant w regular token - xml 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant w regular token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant w regular token - json 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant w regular token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant no tenantId - xml 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant no tenantId - xml 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant no tenantId - json 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant no tenantId - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="5"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant invalid tenantId - xml 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant invalid tenantId - xml 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="5"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant invalid tenantId - json 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant invalid tenantId - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="5"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant invalid endpoint - xml 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant invalid endpoint - xml 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="endpointId" value="13"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - endpointTenant invalid endpoint - json 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Get Endpoint" resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - endpointTenant invalid endpoint - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="endpointId" value="13"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant no auth-token - xml 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint." resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant no auth-token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant no auth-token - json 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint." resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant no auth-token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "Missing token", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant w regular token - xml 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint." resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant w regular token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]1"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>You are not authorized to make this call</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant w regular token - json 401"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint." resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant w regular token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "You are not authorized to make this call", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant no tenantId - xml 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint." resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant no tenantId - xml 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant invalid tenantId - xml 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint." resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant invalid tenantId - xml 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="6"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE - endpointTenant invalid tenantId - json 404"><con:settings/><con:config service="OS-KSCATALOG-admin" methodName="Delete Endpoint." resourcePath="/${#Project#path}/tenants/{tenantId}/OS-KSCATALOG/endpoints/{endpointId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE - endpointTenant invalid tenantId - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="6"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="endpointId" value="${#TestSuite#newEndpointId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>cmarin2</con:value></con:property><con:property><con:name>password</con:name><con:value>Password1</con:value></con:property><con:property><con:name>userId</con:name><con:value>104472</con:value></con:property><con:property><con:name>auth-token</con:name><con:value>5d557c7c-797a-41f0-bf6e-78038124be5f</con:value></con:property><con:property><con:name>newTemplateId</con:name><con:value/></con:property><con:property><con:name>newTemplateName</con:name><con:value/></con:property><con:property><con:name>newTemplateRegion</con:name><con:value/></con:property><con:property><con:name>username2</con:name><con:value>joeuser</con:value></con:property><con:property><con:name>password2</con:name><con:value>secrete</con:value></con:property><con:property><con:name>userId2</con:name><con:value>1</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>887665443383838</con:value></con:property><con:property><con:name>serviceId</con:name><con:value/></con:property><con:property><con:name>tenantId</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456a3ef1</con:value></con:property><con:property><con:name>tenantName</con:name><con:value>MossoCloudFS_f3b094b3-0185-45bf-9608-a853456a3ef1</con:value></con:property><con:property><con:name>newEndpointId</con:name><con:value/></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - OS-KSADM-admin" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="users" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="1392077d-97b8-4251-9468-e554ea3c558b"><con:settings/><con:testStep type="restrequest" name="POST - getAuthToken - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getAuthToken - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - getAuthToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - getAuthToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
//testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("auth-token", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - getToken - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - getToken - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password2}" username="${#TestSuite#username2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store regular token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - getToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - getToken - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
//testRunner.testCase.testSuite.setPropertyValue("auth-token", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Users - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Users - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:user xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Users - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="List users" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Users - json" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:user xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check for existance of [e]"><con:configuration><path>declare namespace ns1='http://localhost/v2.0/users';
exists( //ns1:Response/ns1:users/ns1:e)</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add User - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add User - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;user created="2011-11-01T00:00:00.000-05:00" display-name="" email="${#TestCase#testemail}" enabled="true" id="${#TestCase#testuserId}" password="xyz" username="${#TestCase#testuser}" xmlns="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store user info"><con:settings/><con:config><script>def newUserId = context.expand( '${POST - Add User - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get newUserId: " + newUserId

if (newUserId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("newUserId", newUserId)</script></con:config></con:testStep><con:testStep type="groovy" name="set json requests"><con:settings/><con:config><script>def json_req1 = '{"user": {"username": "${#TestCase#testuser2}","password": "${#TestCase#testpassword2}","id": "${#TestCase#testuserId}","email": "${#TestCase#testemail2}","enabled": true}}'

testRunner.testCase.testSteps['POST - Add User - json'].setPropertyValue("Resquest", json_req1)	</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add User - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user" resourcePath="/${#Project#path}/users" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add User - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>{
"user": {
"username": "${#TestCase#testuser2}",
"password": "${#TestCase#testpassword2}",
"id": "${#TestCase#testuserId}",
"email": "${#TestCase#testemail2}",
"enabled": true
}
}
</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Update User - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Update user" resourcePath="/${#Project#path}/users/{userId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Update User - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:user id="${#TestCase#newuserId}" username="${#TestCase#newemail}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuser}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Set user enabled. - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/enabled" methodName="Set user enabled." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Set user enabled. - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:user enabled="true" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="6"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - infoGlobalUserRoles - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - infoGlobalUserRoles - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:user xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="roleId" value="1"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add Global roles to a user - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add roles to a user on a tenant." resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add Global roles to a user - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration/></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#newUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="1"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Global Roles on User - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="Delete roles from a user on tenant." resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Global Roles on User - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#testTenantId}"/>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="1"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUserRoles - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Roles" resourcePath="/${#Project#path}/OS-KSADM/roles" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUserRoles - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#newUserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Credentials - xml"><con:settings/><con:config service="OS-KSADM-admin" methodName="List Credentials" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Credentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="set requests"><con:settings/><con:config><script>def xml_request_post = '&lt;?xml version="1.0" encoding="UTF-8"?>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestSuite#username2}" password="${#TestSuite#password2}"/>'
testRunner.testCase.testSteps['POST - addUserCredentials - xml 400'].setPropertyValue("Request", xml_request_post)

def xml_request_post2 = '&lt;?xml version="1.0" encoding="UTF-8"?>&lt;passwordCredentials xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://docs.openstack.org/identity/api/v2.0" username="${#TestSuite#username2}" password="${#TestSuite#updatePwd2}"/>'
testRunner.testCase.testSteps['POST - Update user credential - xml'].setPropertyValue("Request", xml_request_post2)

def json_request_post2 = '{"passwordCredentials": {"username": "${#TestSuite#username2}","password": "${#TestSuite#password2}"}}'
testRunner.testCase.testSteps['POST - Update user credential - json'].setPropertyValue("Request", json_request_post2)

testRunner.testCase.testSteps['POST - addUserCredentials - json'].setPropertyValue("Request", json_request_post2)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - xml 400"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential." resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - xml 400" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:credential xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:badRequest[1]/ns1:message[1]/text()</path><content>Password credentials already available.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Update user credential - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" methodName="Update user credential" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Update user credential - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:credential xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@username]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:passwordCredentials[1]/@username</path><content>${#TestSuite#username2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Update user credential - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" methodName="Update user credential" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Update user credential - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>{"passwordCredentials": {"username": "${#TestSuite#username2}","password": "${#TestSuite#password2}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"username": "${#TestSuite#username2}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get user Credentials - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" methodName="Get user Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get user Credentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@username]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:passwordCredentials[1]/@username</path><content>${#TestSuite#username2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete user credential - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" methodName="Delete user credential" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete user credential - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get user Credentials - json 404"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" methodName="Get user Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get user Credentials - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound": {"message": "Password credentials could not be found", "code": "404"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - addUserCredentials - json"><con:settings/><con:config service="OS-KSADM-admin" methodName="Add user Credential." resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - addUserCredentials - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>{"passwordCredentials": {"username": "${#TestSuite#username2}","password": "${#TestSuite#password2}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"passwordCredentials": {"username": "${#TestSuite#username2}",</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get user Credentials after add - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/{credential-type}" methodName="Get user Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get user Credentials after add - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@username]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:passwordCredentials[1]/@username</path><content>${#TestSuite#username2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete user - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/users/{userId}" methodName="Delete user" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete user - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get a User by ID - xml 404"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/users/{user_id}" methodName="Get a User by ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get a User by ID - xml 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Match content of [@code]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/@code</path><content>404</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>The user could not be found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="user_id" value="${#TestCase#testuserId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>testuser</con:name><con:value>testuser</con:value></con:property><con:property><con:name>testemail</con:name><con:value>testuser@rackspace.com</con:value></con:property><con:property><con:name>testuserId</con:name><con:value>8</con:value></con:property><con:property><con:name>newemail</con:name><con:value>testuser1@rackspace.com</con:value></con:property><con:property><con:name>newuserId</con:name><con:value>43211234</con:value></con:property><con:property><con:name>testTenantId</con:name><con:value>1111111</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="tenants" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b03ccc5a-0369-40e1-ade2-e1f90e0d57cd"><con:settings/><con:testStep type="restrequest" name="POST - Add Tenant - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants" methodName="Add Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Tenant - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:tenant enabled="true" id="${#TestCase#tenantId}" name="${#TestCase#tenantName}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>second tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="verify tenant added"><con:settings/><con:config><script>def tenantName = context.expand( '${POST - Add Tenant - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenant[1]/@name}' )
def getTenantName = context.expand( '${#TestCase#tenantName}' )
def tenantId = context.expand( '${POST - Add Tenant - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:tenant[1]/@id}' )

if (tenantName != getTenantName)
{
	assert false;
}
else
{
	testRunner.testCase.setPropertyValue("tenantId", tenantId)
}</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Tenant - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants" methodName="Add Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Tenant - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:tenant enabled="true" id="${#TestCase#tenantId}" name="${#TestCase#tenantName2}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>my 3rd tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="verify tenant added 2"><con:settings/><con:config><script>def tenantName = context.expand( '${POST - Add Tenant - json#ResponseAsXml#declare namespace ns1=\'http://localhost/v2.0/tenants\'; //ns1:Response[1]/ns1:tenant[1]/ns1:name[1]}' )
def getTenantName = context.expand( '${#TestCase#tenantName2}' )
def tenantId = context.expand( '${POST - Add Tenant - json#ResponseAsXml#declare namespace ns1=\'http://localhost/v2.0/tenants\'; //ns1:Response[1]/ns1:tenant[1]/ns1:id[1]}' )

if (tenantName != getTenantName)
{
	assert false;
}
else
{
	testRunner.testCase.setPropertyValue("tenantId2", tenantId)
}</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Update Tenant - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}" methodName="Update Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Update Tenant - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:tenant enabled="true" id="${#TestCase#tenantId}" name="${#TestCase#updateTenantName}" updated="2011-11-01T00:00:00.000-05:00" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description/>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@name]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:tenant[1]/@name</path><content>${#TestCase#updateTenantName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Update Tenant - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}" methodName="Update Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Update Tenant - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:tenant enabled="true" id="${#TestCase#tenantId}" name="${#TestCase#updateTenantName}" updated="2011-11-01T00:00:00.000-05:00" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>my 2nd tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [description]"><con:configuration><path>declare namespace ns1='http://localhost/v2.0/tenants/${#TestCase#tenantId}';
//ns1:Response[1]/ns1:tenant[1]/ns1:description[1]/text()</path><content>${POST - Update Tenant - json#Request#declare namespace v2='http://docs.openstack.org/identity/api/v2.0'; //v2:tenant[1]/v2:description[1]}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Tenant - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}" methodName="Delete a Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Tenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getTenantById after delete - xml 404"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants/{tenantId}" methodName="Get Tenants by ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getTenantById after delete - xml 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>The tenant could not be found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Tenant - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}" methodName="Delete a Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Tenant - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Tenant - json 404"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}" methodName="Delete a Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Tenant - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/tenants/${#TestCase#tenantId2}';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>The tenant could not be found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - getTenantById after delete 2 - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants/{tenantId}" methodName="Get Tenants by ID" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - getTenantById after delete 2 - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>The tenant could not be found</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listRolesForTenant - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}" methodName="Update Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listRolesForTenant - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Users for a Tenant no limit &amp; marker - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}/users" methodName="List users for a Tenant." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Users for a Tenant no limit &amp; marker - xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:tenant xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description/>&lt;/v2:tenant></con:request><con:assertion type="XPath Match" name="Check count of [user]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count( //ns1:users/ns1:user)</path><content>${#TestSuite#totalUsers}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Users for a Tenant w limit 2 &amp; marker 1- xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}/users" methodName="List users for a Tenant." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Users for a Tenant w limit 2 &amp; marker 1- xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="XPath Match" name="Check count of [user]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count( //ns1:users/ns1:user)</path><content>2</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="2"/>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="marker" value="1"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Users for a Tenant w limit 1 &amp; marker 1- xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}/users" methodName="List users for a Tenant." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Users for a Tenant w limit 1 &amp; marker 1- xml" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:tenant xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description/>&lt;/v2:tenant></con:request><con:assertion type="XPath Match" name="Check count of [user]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count( //ns1:users/ns1:user)</path><content>1</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="1"/>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="marker" value="1"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Users for a Tenant no limit &amp; marker - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}/users" methodName="List users for a Tenant." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Users for a Tenant no limit &amp; marker - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Check count of [e]"><con:configuration><path>declare namespace ns1='http://localhost/v2.0/tenants/1/users';
count( //ns1:Response/ns1:users/ns1:e)</path><content>${#TestSuite#totalUsers}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - listUsersWithRoleForTenant no limit - xml" disabled="true"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="List Services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - listUsersWithRoleForTenant no limit - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="roleId" value="${#TestSuite#roleId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add roles to user on tenant - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" methodName="Add roles to a user on a tenant." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add roles to user on tenant - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:role xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="roleId" value="${#TestSuite#roleId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Roles for User on Tenant after added - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{user_id}/roles" methodName="List Roles for User on Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Roles for User on Tenant after added - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>&lt;role id="${#TestSuite#roleId2}"</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete roles from a user on tenant - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" methodName="Delete roles from a user on tenant." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete roles from a user on tenant - xml" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="roleId" value="${#TestSuite#roleId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Roles for User on Tenant after deleted - xml"><con:settings/><con:config service="identity-admin" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{user_id}/roles" methodName="List Roles for User on Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Roles for User on Tenant after deleted - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Assert node [@id]" disabled="true"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder

def holder = new XmlHolder( messageExchange.responseContentAsXml )
holder.namespaces["ns1"] = "http://docs.openstack.org/identity/api/v2.0"
def node = holder.getDomNode( "//ns1:roles[1]/ns1:role@id=\"2\"" )

assert node != null
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="user_id" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete non exist roles from  user on tenant - xml 404"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" methodName="Delete roles from a user on tenant." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete non exist roles from  user on tenant - xml 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/tenants/1/users/3/roles/OS-KSADM/2';
//ns1:Fault[1]/ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>This role is not mapped to the user.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="roleId" value="${#TestSuite#roleId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>tenantId</con:name><con:value>5</con:value></con:property><con:property><con:name>tenantName</con:name><con:value>custome-y</con:value></con:property><con:property><con:name>updateTenantName</con:name><con:value>customer-y</con:value></con:property><con:property><con:name>tenantName2</con:name><con:value>customer-z</con:value></con:property><con:property><con:name>tenantId2</con:name><con:value>6</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="tenants - Neg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="7b48b80a-aa66-4c15-90e9-5bcc697b265b"><con:settings/><con:testStep type="restrequest" name="POST - Add Tenant no auth-token - json 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants" methodName="Add Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Tenant no auth-token - json 401" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:tenant enabled="true" id="${#TestCase#tenantId}" name="${#TestCase#tenantName2}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>my 3rd tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "Missing token", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Tenant invalid auth-token - json 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants" methodName="Add Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Tenant invalid auth-token - json 401" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:tenant enabled="true" id="${#TestCase#tenantId}" name="${#TestCase#tenantName2}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>my 3rd tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "You are not authorized to make this call", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Tenant missing tenant name - json 400"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants" methodName="Add Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Tenant missing tenant name - json 400" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:tenant enabled="true" id="${#TestCase#tenantId}" name="" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>my 3rd tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"badRequest": {"message": "Expecting a unique Tenant Name", "code": "400"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Tenant with special char name - json 409"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants" methodName="Add Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Tenant with special char name - json 409" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:tenant enabled="true" id="${#TestCase#tenantId}" name="~~~;;;###???" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description>my 3rd tenant&lt;/v2:description>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration/></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"tenantConflict": {"message": "A tenant with that name already exists", "code": "409"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="verify tenant added" disabled="true"><con:settings/><con:config><script>def tenantName = context.expand( '${POST - Add Tenant with special char name - json 409#ResponseAsXml#declare namespace ns1=\'http://localhost/v2.0/tenants\'; //ns1:Response[1]/ns1:tenant[1]/ns1:name[1]}' )
def postTenantName = context.expand( '${POST - Add Tenant with special char name - json 409#Request#declare namespace v2=\'http://docs.openstack.org/identity/api/v2.0\'; //v2:tenant[1]/@name}' )

def tenantId = context.expand( '${POST - Add Tenant with special char name - json 409#ResponseAsXml#declare namespace ns1=\'http://localhost/v2.0/tenants\'; //ns1:Response[1]/ns1:tenant[1]/ns1:id[1]}' )

if (tenantName != postTenantName)
{
	assert false;
}
else
{
	testRunner.testCase.setPropertyValue("tenantIdx", tenantId)
}</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Update Tenant no auth-token - xml 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}" methodName="Update Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Update Tenant no auth-token - xml 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:tenant enabled="false" id="${#TestCase#tenantId}" name="" updated="2011-11-01T00:00:00.000-05:00" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description/>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tenantId" value="${#TestCase#tenantId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Update Tenant invalid auth-token - json 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}" methodName="Update Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Update Tenant invalid auth-token - json 401" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:tenant enabled="false" id="${#TestCase#tenantId}" name="" updated="2011-11-01T00:00:00.000-05:00" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description/>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "You are not authorized to make this call", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Update Tenant no tenant name - json 400"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}" methodName="Update Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Update Tenant no tenant name - json 400" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:tenant enabled="false" id="${#TestCase#tenantIdx}" name="" updated="2011-11-01T00:00:00.000-05:00" xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description/>&lt;/v2:tenant></con:request><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"badRequest": {"message": "Expecting a unique Tenant Name", "code": "400"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantIdx}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Tenant no auth-token - xml 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}" methodName="Delete a Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Tenant no auth-token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tenantId" value="${#TestCase#tenantIdx}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Tenant invalid auth-token - xml 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}" methodName="Delete a Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Tenant invalid auth-token - xml 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "You are not authorized to make this call", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestCase#tenantIdx}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Tenant no tenant id - xml 404"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}" methodName="Delete a Tenant" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Tenant no tenant id - xml 404" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:itemNotFound[1]/ns1:message[1]/text()</path><content>Item not found.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Users for a Tenant no auth-token - xml 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}/users" methodName="List users for a Tenant." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Users for a Tenant no auth-token - xml 401" mediaType="application/xml" accept="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:tenant xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description/>&lt;/v2:tenant></con:request><con:assertion type="XPath Match" name="Check count of [user]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count( //ns1:users/ns1:user)</path><content>${#TestSuite#totalUsers}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="tenantId" value="${#TestSuite#tenantId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Users for a Tenant invalid auth-token - xml 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}/users" methodName="List users for a Tenant." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Users for a Tenant invalid auth-token - xml 401" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:tenant xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description/>&lt;/v2:tenant></con:request><con:assertion type="XPath Match" name="Check count of [user]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count( //ns1:users/ns1:user)</path><content>${#TestSuite#totalUsers}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "You are not authorized to make this call", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Users for a Tenant no tenant id - xml 404"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}/users" methodName="List users for a Tenant." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Users for a Tenant no tenant id - xml 404" mediaType="application/xml" accept="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:tenant xmlns:v2="http://docs.openstack.org/identity/api/v2.0">&lt;v2:description/>&lt;/v2:tenant></con:request><con:assertion type="XPath Match" name="Check count of [user]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
count( //ns1:users/ns1:user)</path><content>${#TestSuite#totalUsers}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound": {"message": "Item not found.", "code": 404, "details": "Error Details..."}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="PUT - Add roles to user on tenant - existing role - xml 409"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/tenants/{tenantId}/users/{userId}/roles/OS-KSADM/{roleId}" methodName="Add roles to a user on a tenant." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="PUT - Add roles to user on tenant - existing role - xml 409" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 409
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:roleConflict[1]/ns1:message[1]/text()</path><content>This role is already mapped to the user.</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="tenantId" value="${#TestSuite#tenantId}"/>
  <con:entry key="userId" value="${#TestSuite#userId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="roleId" value="${#TestSuite#roleId2}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties><con:property><con:name>tenantIdx</con:name><con:value>4</con:value></con:property></con:properties><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Roles" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="84d61ba4-7a68-4109-9e36-63b1148c3474"><con:settings/><con:testStep type="restrequest" name="GET - Get Role By Name"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles" methodName="Get Role By Name" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Role By Name" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
assert context.expand(messageExchange.responseHeaders["Content-Type"]).contains("application/json")</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"role": {"id": "${#TestSuite#roleId1}", "name": "${#TestSuite#rolename1}"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1" disabled="true"><con:configuration><token>{"role": {"id": "1","name": "Admin"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#rolename1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Role By Name - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles" methodName="Get Role By Name" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Role By Name - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
assert context.expand(messageExchange.responseHeaders["Content-Type"]).contains("application/json")</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"role": {"id": "${#TestSuite#roleId1}", "name": "${#TestSuite#rolename1}"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains 1" disabled="true"><con:configuration><token>{"role": {"id": "1","name": "Admin"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#rolename1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Role By Name - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles" methodName="Get Role By Name" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Role By Name - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains" disabled="true"><con:configuration><token>{"role": {"id": "${#TestSuite#roleId1}", "name": "${#TestSuite#rolename1}"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@name]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:role[1]/@name</path><content>${#TestSuite#rolename1}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#rolename1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Role"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles" methodName="Add Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Role" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:role description="regular role" id="${#TestSuite#roleId3}" name="${#TestSuite#rolename3}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store role id"><con:settings/><con:config><script>def roleId = context.expand( '${POST - Add Role#ResponseAsXml#declare namespace ns1=\'http://localhost/v2.0/OS-KSADM/roles\'; //ns1:Response[1]/ns1:role[1]/ns1:id[1]}' )

testRunner.testCase.testSuite.setPropertyValue("roleId3", roleId);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Role"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" methodName="Get Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Role" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def getRoleId = context.expand( '${POST - Add Role#ResponseAsXml#declare namespace ns1=\'${#Project#Endpoint}/v2.0/OS-KSADM/roles\'; //ns1:Response[1]/ns1:role[1]/ns1:id[1]}' )
log.info getRoleId
def roleId3 = context.expand( '${#TestSuite#roleId3}' )
assert (getRoleId == roleId3)</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="roleId" value="${#TestSuite#roleId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Role"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" methodName="Delete Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Role" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="roleId" value="${#TestSuite#roleId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Role - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles" methodName="Add Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Role - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:role description="regular role" id="${#TestSuite#roleId3}" name="${#TestSuite#rolename3}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@name]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:role[1]/@name</path><content>${#TestSuite#rolename3}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store role id 2"><con:settings/><con:config><script>def roleId = context.expand( '${POST - Add Role - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:role[1]/@id}' )

testRunner.testCase.testSuite.setPropertyValue("roleId3", roleId);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Role - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" methodName="Get Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Role - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def getRoleId = context.expand( '${GET - Get Role - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:role[1]/@id}' )

def roleId3 = context.expand( '${#TestSuite#roleId3}' )
assert (getRoleId == roleId3)</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="roleId" value="${#TestSuite#roleId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Role 2"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" methodName="Delete Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Role 2" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="roleId" value="${#TestSuite#roleId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Role - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles" methodName="Add Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Role - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:role description="regular role" id="${#TestSuite#roleId3}" name="${#TestSuite#rolename3}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [name]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/OS-KSADM/roles';
//ns1:Response[1]/ns1:role[1]/ns1:name[1]/text()</path><content>${#TestSuite#rolename3}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store role id 3"><con:settings/><con:config><script>def roleId = context.expand( '${POST - Add Role - json#ResponseAsXml#declare namespace ns1=\'http://localhost/v2.0/OS-KSADM/roles\'; //ns1:Response[1]/ns1:role[1]/ns1:id[1]}' )

testRunner.testCase.testSuite.setPropertyValue("roleId3", roleId);</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Role - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" methodName="Get Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Role - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
def getRoleId = context.expand( '${POST - Add Role - json#ResponseAsXml#declare namespace ns1=\'${#Project#Endpoint}/v2.0/OS-KSADM/roles\'; //ns1:Response[1]/ns1:role[1]/ns1:id[1]}' )
log.info getRoleId
def roleId3 = context.expand( '${#TestSuite#roleId3}' )
assert (getRoleId == roleId3)</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="roleId" value="${#TestSuite#roleId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Role 3"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" methodName="Delete Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Role 3" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="roleId" value="${#TestSuite#roleId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Roles - Neg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="b7f4a7c3-2a9e-488d-a58b-1f50d8cd3d94"><con:settings/><con:testStep type="restrequest" name="GET - Get Role By Name no auth-token - json 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles" methodName="Get Role By Name" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Role By Name no auth-token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
assert context.expand(messageExchange.responseHeaders["Content-Type"]).contains("application/json")</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/OS-KSADM/roles';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="name" value="${#TestSuite#rolename1}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Role By Name invalid auth-token - json 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles" methodName="Get Role By Name" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Role By Name invalid auth-token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
assert context.expand(messageExchange.responseHeaders["Content-Type"]).contains("application/json")</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/OS-KSADM/roles';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>You are not authorized to make this call</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#rolename1}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Role no auth-token - 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles" methodName="Add Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Role no auth-token - 401" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:role description="regular role" id="${#TestSuite#roleId3}" name="${#TestSuite#rolename3}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/OS-KSADM/roles';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Role invalid auth-token - 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles" methodName="Add Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Role invalid auth-token - 401" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:role description="regular role" id="${#TestSuite#roleId3}" name="${#TestSuite#rolename3}" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/OS-KSADM/roles';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>You are not authorized to make this call</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Role missing role name - 400"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles" methodName="Add Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Role missing role name - 400" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:role description="regular role" id="${#TestSuite#roleId3}" name="" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/OS-KSADM/roles';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]/text()</path><content>Expecting Role name</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Role special char role name"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles" methodName="Add Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Role special char role name" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v2:role description="identity" id="${#TestSuite#roleId3}" name=":::*!?%%%%" serviceId="" xmlns:v2="http://docs.openstack.org/identity/api/v2.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]" disabled="true"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/OS-KSADM/roles';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]/text()</path><content>Expecting a Role name</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Role no auth-token - 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" methodName="Delete Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Role no auth-token - 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/OS-KSADM/roles/${#TestSuite#roleId3}';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="roleId" value="${#TestSuite#roleId3}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Role invalid auth-token - 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" methodName="Delete Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Role invalid auth-token - 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/OS-KSADM/roles/${#TestSuite#roleId3}';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>You are not authorized to make this call</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestSuite#roleId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Role no auth-token - xml 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" methodName="Get Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Role no auth-token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="roleId" value="${#TestSuite#roleId3}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Role invalid auth-token - xml 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" methodName="Get Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Role invalid auth-token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>You are not authorized to make this call</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
  <con:entry key="roleId" value="${#TestSuite#roleId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Role no role id - xml 400"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" methodName="Get Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Role no role id - xml 400" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:unauthorized[1]/ns1:message[1]/text()</path><content>You are not authorized to make this call</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Role after add special char"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/roles/{roleId}" methodName="Delete Role" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Role after add special char" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
  <con:entry key="roleId" value="${#TestSuite#roleId3}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Services" searchProperties="true" id="ca630e0b-eb20-4d39-97e2-4db43b781dac"><con:settings/><con:testStep type="restrequest" name="GET - List Services"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="List Services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Services" mediaType="application/xml" accept=""><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="json parse"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - List Services#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def info = jsonObj."OS-KSADM:services".description
log.info info</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Services - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="List Services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Services - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def jsonResp = context.expand( '${GET - List Services - json#Response}' )
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Services - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="List Services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Services - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def jsonResp = context.expand( '${GET - List Services - json#Response}' )
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Service"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="Add Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Service" mediaType="application/xml" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:service description="test description" name="${#TestSuite#serviceName}" type="${#TestSuite#serviceType}" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
def contenttype = messageExchange.responseHeaders["Content-Type"]
assert context.expand(contenttype).contains("application/json")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="verify data"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Add Service#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def name = jsonObj."OS-KSADM:service".name
log.info name

def type = jsonObj."OS-KSADM:service".type

assert (name == context.expand('${#TestSuite#serviceName}'))
assert (type == context.expand('${#TestSuite#serviceType}'))</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store info"><con:settings/><con:config><script>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

println "hi"
GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Add Service#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def id = jsonObj."OS-KSADM:service".id
log.info id
testRunner.testCase.testSuite.setPropertyValue("serviceId", id)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Service"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="Get Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Service" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="verify contents"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get Service#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def name = jsonObj."OS-KSADM:service".name
log.info name

def type = jsonObj."OS-KSADM:service".type

assert (name == context.expand('${#TestSuite#serviceName}'))
assert (type == context.expand('${#TestSuite#serviceType}'))</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#serviceName}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Service"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" methodName="Delete Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Service" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestSuite#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Service - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="Add Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Service - json" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:service description="test description" name="${#TestSuite#serviceName}" type="${#TestSuite#serviceType}" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
def contenttype = messageExchange.responseHeaders["Content-Type"]
assert context.expand(contenttype).contains("application/json")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="verify data"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Add Service - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def name = jsonObj."OS-KSADM:service".name
log.info name

def type = jsonObj."OS-KSADM:service".type
def id = jsonObj."OS-KSADM:service".id

assert (name == context.expand('${#TestSuite#serviceName}'))
assert (type == context.expand('${#TestSuite#serviceType}'))
</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Service - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="Get Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Service - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="verify contents"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get Service - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def name = jsonObj."OS-KSADM:service".name
log.info name

def type = jsonObj."OS-KSADM:service".type

assert (name == context.expand('${#TestSuite#serviceName}'))
assert (type == context.expand('${#TestSuite#serviceType}'))</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#serviceName}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Service - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" methodName="Delete Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Service - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestSuite#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Service - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="Add Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Service - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:service description="test description" name="${#TestSuite#serviceName}" type="${#TestSuite#serviceType}" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201
def contenttype = messageExchange.responseHeaders["Content-Type"]
assert context.expand(contenttype).contains("application/json")</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="verify data"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${POST - Add Service - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def name = jsonObj."OS-KSADM:service".name
log.info name

def type = jsonObj."OS-KSADM:service".type
def id = jsonObj."OS-KSADM:service".id

assert (name == context.expand('${#TestSuite#serviceName}'))
assert (type == context.expand('${#TestSuite#serviceType}'))
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@name]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0';
//ns1:service[1]/@name</path><content>${#TestSuite#serviceName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@type]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0';
//ns1:service[1]/@type</path><content>${#TestSuite#serviceType}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Service - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="Get Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Service - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="verify contents" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get Service - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def name = jsonObj."OS-KSADM:service".name
log.info name

def type = jsonObj."OS-KSADM:service".type

assert (name == context.expand('${#TestSuite#serviceName}'))
assert (type == context.expand('${#TestSuite#serviceType}'))</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@name]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0';
//ns1:service[1]/@name</path><content>${#TestSuite#serviceName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#serviceName}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Service - by Id"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" methodName="Get Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Service - by Id" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get Service - by Id#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def name = jsonObj."OS-KSADM:service".name
log.info name

def type = jsonObj."OS-KSADM:service".type

assert (name == context.expand('${#TestSuite#serviceName}'))
assert (type == context.expand('${#TestSuite#serviceType}'))</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestSuite#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Service - by Id - json"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" methodName="Get Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Service - by Id - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get Service - by Id - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def name = jsonObj."OS-KSADM:service".name
log.info name

def type = jsonObj."OS-KSADM:service".type

assert (name == context.expand('${#TestSuite#serviceName}'))
assert (type == context.expand('${#TestSuite#serviceType}'))</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestSuite#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Service - by Id - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" methodName="Get Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Service - by Id - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get Service - by Id - json#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def name = jsonObj."OS-KSADM:service".name
log.info name

def type = jsonObj."OS-KSADM:service".type

assert (name == context.expand('${#TestSuite#serviceName}'))
assert (type == context.expand('${#TestSuite#serviceType}'))</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@name]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0';
//ns1:service[1]/@name</path><content>${#TestSuite#serviceName}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestSuite#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Service - xml"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" methodName="Delete Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Service - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestSuite#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Services - Neg" searchProperties="true" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword="" id="60f44974-4ba3-4c1a-aabb-928ffe18fb48"><con:settings/><con:testStep type="restrequest" name="GET - List Services no auth-token - json 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="List Services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Services no auth-token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def jsonResp = context.expand( '${GET - List Services - json#Response}' )
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/OS-KSADM/services';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Services invalid auth-token - json 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="List Services" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Services invalid auth-token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Schema Compliance" name="Schema Compliance"><con:configuration><definition/></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Script Assertion 1"><con:configuration><scriptText>def jsonResp = context.expand( '${GET - List Services - json#Response}' )
</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/OS-KSADM/services';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>You are not authorized to make this call</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Service no auth token - 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="Add Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Service no auth token - 401" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:service description="test description" name="${#TestSuite#serviceName}" type="${#TestSuite#serviceType}" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
def contenttype = messageExchange.responseHeaders["Content-Type"]
assert context.expand(contenttype).contains("application/json")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/OS-KSADM/services';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>Missing token</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Service invalid auth token - 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="Add Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Service invalid auth token - 401" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:service description="test description" name="${#TestSuite#serviceName}" type="${#TestSuite#serviceType}" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401
def contenttype = messageExchange.responseHeaders["Content-Type"]
assert context.expand(contenttype).contains("application/json")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/OS-KSADM/services';
//ns1:Fault[1]/ns1:unauthorized[1]/ns1:message[1]/text()</path><content>You are not authorized to make this call</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Service missing service name - 400"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="Add Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Service missing service name - 400" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:service description="test description" id="" name="" type="${#TestSuite#serviceType}" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
def contenttype = messageExchange.responseHeaders["Content-Type"]
assert context.expand(contenttype).contains("application/json")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/OS-KSADM/services';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]/text()</path><content>Expecting Service Name</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Service 1"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="Get Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Service 1" mediaType="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="verify contents" disabled="true"><con:configuration><scriptText>import net.sf.*;
import net.sf.json.*;
import net.sf.json.groovy.*;
import net.sf.json.groovy.JsonSlurper;

GJson.enhanceClasses()
def jsonResp = context.expand( '${GET - Get Service 1#Response}' )
def jsonObj = new JsonSlurper().parseText(jsonResp)

def info = jsonObj."OS-KSADM:services".description
log.info info

def name = jsonObj."OS-KSADM:services".name
log.info name

def type = jsonObj."OS-KSADM:services".type

assert (name == context.expand('${#TestSuite#serviceName}'))
assert (type == context.expand('${#TestSuite#serviceType}'))</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Service no auth-token - json 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="Get Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Service no auth-token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "Missing token", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="name" value="${#TestSuite#serviceName}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Service invalid auth-token - json 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="Get Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Service invalid auth-token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "You are not authorized to make this call", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="name" value="${#TestSuite#serviceName}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Service no auth-token - json 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" methodName="Delete Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Service no auth-token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "Missing token", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="serviceId" value="${#TestSuite#serviceId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Service invalid auth-token - json 401"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" methodName="Delete Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Service invalid auth-token - json 401" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"unauthorized": {"message": "You are not authorized to make this call", "code": "401"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestSuite#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Service 2 - json 404"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" methodName="Delete Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Service 2 - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound": {"message": "The service could not be found", "code": "404"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestSuite#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get Service - by Id 2 - json 404"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" methodName="Get Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get Service - by Id 2 - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>{"itemNotFound": {"message": "The service could not be found", "code": "404"}}</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestSuite#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Service missing service type - 400"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="Add Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Service missing service type - 400" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:service description="test description" id="" name="testName" type="" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
def contenttype = messageExchange.responseHeaders["Content-Type"]
assert context.expand(contenttype).contains("application/json")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/OS-KSADM/services';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]/text()</path><content>Expecting Service Type</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Service 3 - json 404"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" methodName="Delete Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Service 3 - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestSuite#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add Service missing both service name and type - 400"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services" methodName="Add Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add Service missing both service name and type - 400" mediaType="application/xml" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;v1:service description="test description" id="" name="" type="" xmlns:v1="http://docs.openstack.org/identity/api/ext/OS-KSADM/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400
def contenttype = messageExchange.responseHeaders["Content-Type"]
assert context.expand(contenttype).contains("application/json")</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [message]"><con:configuration><path>declare namespace ns1='${#Project#Endpoint}/v2.0/OS-KSADM/services';
//ns1:Fault[1]/ns1:badRequest[1]/ns1:message[1]/text()</path><content>Expecting Service Name</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete Service 4 - json 404"><con:settings/><con:config service="OS-KSADM-admin" resourcePath="/${#Project#path}/OS-KSADM/services/{serviceId}" methodName="Delete Service" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete Service 4 - json 404" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="status code"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 404</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="serviceId" value="${#TestSuite#serviceId}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>jvadmin</con:value></con:property><con:property><con:name>password</con:name><con:value>secrete</con:value></con:property><con:property><con:name>roleId1</con:name><con:value>1</con:value></con:property><con:property><con:name>rolename1</con:name><con:value>Admin</con:value></con:property><con:property><con:name>roleId2</con:name><con:value>2</con:value></con:property><con:property><con:name>rolename2</con:name><con:value>KeystoneServiceAdmin</con:value></con:property><con:property><con:name>roleId3</con:name><con:value/></con:property><con:property><con:name>rolename3</con:name><con:value>Service</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>d82ff4f2-ea20-4824-b915-bd3d8555e7db</con:value></con:property><con:property><con:name>userId</con:name><con:value>3</con:value></con:property><con:property><con:name>newUserId</con:name><con:value>1111111</con:value></con:property><con:property><con:name>auth-token</con:name><con:value>a60d3cb1-561f-415e-994d-c0ac5dfdeed4</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>1</con:value></con:property><con:property><con:name>totalUsers</con:name><con:value>4</con:value></con:property><con:property><con:name>userId2</con:name><con:value>4</con:value></con:property><con:property><con:name>username2</con:name><con:value>jvuser</con:value></con:property><con:property><con:name>password2</con:name><con:value>secrete</con:value></con:property><con:property><con:name>serviceId</con:name><con:value>8</con:value></con:property><con:property><con:name>serviceName</con:name><con:value>TestService</con:value></con:property><con:property><con:name>serviceType</con:name><con:value>test</con:value></con:property><con:property><con:name>updatePwd2</con:name><con:value>Password1</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:testSuite name="Functional - OS-KSEC2-admin" disabled="true"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="users - credentials" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password}" username="${#TestSuite#username}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("auth-token", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Credentials - xml"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Credentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@username]"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:credentials[1]/ns1:passwordCredentials[1]/@username</path><content>${#TestSuite#username2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add user Credential - xml"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="Add user Credential." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add user Credential - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;ec2Credentials key="${#TestSuite#key2}" signature="${#TestSuite#signature2}" username="${#TestSuite#username2}" xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Update user credential - xml"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials" methodName="Update user credential" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Update user credential - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;ec2Credentials key="${#TestSuite#newKey}" signature="${#TestSuite#signature2}" username="${#TestSuite#username2}" xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete user credential - xml"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials" methodName="Delete user credential" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete user credential - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get user Credentials - xml"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials" methodName="Get user Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get user Credentials - xml" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - List Credentials - json"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="List Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - List Credentials - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:assertion type="XPath Match" name="Match content of [@username]" disabled="true"><con:configuration><path>declare namespace ns1='http://docs.openstack.org/identity/api/v2.0';
//ns1:credentials[1]/ns1:passwordCredentials[1]/@username</path><content>${#TestSuite#username2}</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:assertion type="Simple Contains" name="Contains"><con:configuration><token>"credentials": [{"passwordCredentials": {"username": "${#TestSuite#username2}"}}]</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="set requests"><con:settings/><con:config><script>def post_json_req1 = '{"OS-KSEC2-ec2Credentials":{"username":"${#TestSuite#username2}", "secret":"${#TestSuite#key2}", "signature":"${#TestSuite#signature2}"}}'
testRunner.testCase.testSteps['POST - Add user Credential - json'].setPropertyValue("Request", post_json_req1);

def post_json_req2 = '{"OS-KSEC2-ec2Credentials":{"username":"${#TestSuite#username2}", "secret":"${#TestSuite#newKey}", "signature":"${#TestSuite#signature2}"}}'
testRunner.testCase.testSteps['POST - Update user credential - json'].setPropertyValue("Request", post_json_req2);</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add user Credential - json"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="Add user Credential." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add user Credential - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>{"OS-KSEC2-ec2Credentials":{"username":"${#TestSuite#username2}", "secret":"${#TestSuite#key2}", "signature":"${#TestSuite#signature2}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 201</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Update user credential - json"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials" methodName="Update user credential" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Update user credential - json" mediaType="application/json" postQueryString="false" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>{"OS-KSEC2-ec2Credentials":{"username":"${#TestSuite#username2}", "secret":"${#TestSuite#newKey}", "signature":"${#TestSuite#signature2}"}}</con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get user Credentials - json"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials" methodName="Get user Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get user Credentials - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete user credential - json"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials" methodName="Delete user credential" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete user credential - json" mediaType="application/xml" accept="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 204</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#auth-token}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="users - credentials - Neg" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="POST - user token - xml"><con:settings/><con:config service="identity-admin" methodName="Authenticate for Service API" resourcePath="/${#Project#path}/tokens" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - user token - xml" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;auth xmlns="http://docs.openstack.org/identity/api/v2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
&lt;passwordCredentials password="${#TestSuite#password2}" username="${#TestSuite#username2}"/>
&lt;/auth></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 200
log.info "POST - authentication - XML - Status: " +  messageExchange.responseStatusCode</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="store regular token info"><con:settings/><con:config><script>def tokenId = context.expand( '${POST - user token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:token[1]/@id}' )
log.info "get TokenId: " + tokenId
def userId = context.expand( '${POST - user token - xml#Response#declare namespace ns1=\'http://docs.openstack.org/identity/api/v2.0\'; //ns1:access[1]/ns1:user[1]/@id}' )
log.info "get UserId: " + userId

if (tokenId == "" | userId == "")
{
	assert false;	
}
testRunner.testCase.testSuite.setPropertyValue("tokenId", tokenId)
testRunner.testCase.testSuite.setPropertyValue("userId2", userId)</script></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add user Credential no auth-token - xml 401"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="Add user Credential." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add user Credential no auth-token - xml 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;ec2Credentials key="${#TestSuite#key2}" signature="${#TestSuite#signature2}" username="${#TestSuite#username2}" xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add user Credential with regular token - xml 401"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="Add user Credential." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add user Credential with regular token - xml 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;ec2Credentials key="${#TestSuite#key2}" signature="${#TestSuite#signature2}" username="${#TestSuite#username2}" xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Add user Credential no userId - xml 400"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials" methodName="Add user Credential." xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Add user Credential no userId - xml 400" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;ec2Credentials key="${#TestSuite#key2}" signature="${#TestSuite#signature2}" username="${#TestSuite#username2}" xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Update user credential no auth-token - xml 401"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials" methodName="Update user credential" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Update user credential no auth-token - xml 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;ec2Credentials key="${#TestSuite#key2}" signature="${#TestSuite#signature2}" username="${#TestSuite#username2}" xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Update user credential with regular token - xml 401"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials" methodName="Update user credential" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Update user credential with regular token - xml 401" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;ec2Credentials key="${#TestSuite#key2}" signature="${#TestSuite#signature2}" username="${#TestSuite#username2}" xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#userId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST - Update user credential no userId - xml 400"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials" methodName="Update user credential" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST - Update user credential no userId - xml 400" mediaType="application/xml" postQueryString="false" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request>&lt;ec2Credentials key="${#TestSuite#key2}" signature="${#TestSuite#signature2}" username="${#TestSuite#username2}" xmlns="http://docs.openstack.org/identity/api/ext/OS-KSEC2/v1.0"/></con:request><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#auth-token}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete user credential no auth-token - xml 401"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials" methodName="Delete user credential" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete user credential no auth-token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete user credential w regular token - xml 401"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials" methodName="Delete user credential" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete user credential w regular token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DEL - Delete user credential no userId - xml 400"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials" methodName="Delete user credential" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DEL - Delete user credential no userId - xml 400" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get user Credentials no auth-token - xml 401"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials" methodName="Get user Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get user Credentials no auth-token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="userId" value="${#TestSuite#userId2}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get user Credentials w regular token - xml 401"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials" methodName="Get user Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get user Credentials w regular token - xml 401" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 401</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="userId" value="${#TestSuite#userId2}"/>
  <con:entry key="X-Auth-Token" value="${#TestSuite#tokenId}"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="GET - Get user Credentials no userId - xml 400"><con:settings/><con:config service="OS-KSEC2-admin" resourcePath="/${#Project#path}/users/{userId}/OS-KSADM/credentials/OS-KSEC2:ec2Credentials" methodName="Get user Credentials" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET - Get user Credentials no userId - xml 400" mediaType="application/xml" accept="application/xml"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#Endpoint}:${#Project#adminport}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="Script Assertion"><con:configuration><scriptText>assert messageExchange.responseStatusCode == 400</scriptText></con:configuration></con:assertion><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="X-Auth-Token" value="${#TestSuite#tokenId}" xmlns="http://eviware.com/soapui/config"/></con:parameters></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties><con:property><con:name>username</con:name><con:value>jvadmin</con:value></con:property><con:property><con:name>password</con:name><con:value>secrete</con:value></con:property><con:property><con:name>tokenId</con:name><con:value>7f9ba360-7035-4fff-8819-e2176bb5997d</con:value></con:property><con:property><con:name>userId</con:name><con:value>3</con:value></con:property><con:property><con:name>userId2</con:name><con:value>4</con:value></con:property><con:property><con:name>username2</con:name><con:value>jvuser</con:value></con:property><con:property><con:name>password2</con:name><con:value>secrete</con:value></con:property><con:property><con:name>key2</con:name><con:value>1234567890</con:value></con:property><con:property><con:name>newKey</con:name><con:value>0987654321</con:value></con:property><con:property><con:name>tenantId</con:name><con:value>103952</con:value></con:property><con:property><con:name>auth-token</con:name><con:value>e77864e3-2ce1-415e-a0c3-14e3a8340919</con:value></con:property><con:property><con:name>signature2</con:name><con:value>testing</con:value></con:property></con:properties><con:reportParameters/></con:testSuite><con:requirements/><con:properties><con:property><con:name>Endpoint</con:name><con:value>https://staging.rackidentity.api.rackspacecloud.com</con:value></con:property><con:property><con:name>path</con:name><con:value>cloud/v2.0</con:value></con:property><con:property><con:name>EndpointJson</con:name><con:value>https://staging.rackidentity.api.rackspacecloud.com</con:value></con:property><con:property><con:name>badpassword</con:name><con:value>badpassword</con:value></con:property><con:property><con:name>devEndpoint</con:name><con:value>https://staging.rackidentity.api.rackspacecloud.com</con:value></con:property><con:property><con:name>auth-user</con:name><con:value>auth</con:value></con:property><con:property><con:name>auth-pass</con:name><con:value>auth123</con:value></con:property><con:property><con:name>auth-token</con:name><con:value>17df0a98-924e-441d-9c27-c327a23363-A</con:value></con:property><con:property><con:name>stagingEndpoint</con:name><con:value>https://auth.staging.us.ccp.rackspace.net</con:value></con:property></con:properties><con:wssContainer/><con:databaseConnectionContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:sensitiveInformation/></con:soapui-project>