<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:/app-config.xml</param-value>
	</context-param>

	<!--
		Ensures UTF-8 in content <filter>
		<filter-name>charsetFilter</filter-name>
		<filter-class>com.rackspace.idm.filters.CharsetFilter</filter-class>
		</filter> <filter-mapping> <filter-name>charsetFilter</filter-name>
		<url-pattern>/*</url-pattern> </filter-mapping>
	-->

	<!-- Set location of log4j.xml outside of web application -->
	<context-param>
		<param-name>log4jConfigLocation</param-name>
		<param-value>file:${idm.properties.location}/log4j.xml</param-value>
	</context-param>

    <listener>  
        <listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>  
    </listener> 

	<!--
		<filter> <filter-name>jersey</filter-name>
		<filter-class>com.sun.jersey.spi.container.servlet.ServletContainer</filter-class>
		<init-param>
		<param-name>com.sun.jersey.config.property.WebPageContentRegex</param-name>
		<param-value>/(images|js|styles|web)/.*</param-value> </init-param>
		</filter> <filter-mapping> <filter-name>jersey</filter-name>
		<url-pattern>/*</url-pattern> </filter-mapping>
	-->
    <!--Filter use to do a url Decode-->

    <filter>
        <filter-name>UrlFilter</filter-name>
        <filter-class>com.rackspace.idm.api.resource.cloud.UrlFilter</filter-class>
        <init-param>
            <param-name></param-name>
            <param-value></param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>ldapLoggingFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>

    <filter>
        <filter-name>LoggerFilter</filter-name>
        <filter-class>com.rackspace.idm.api.resource.cloud.LoggerFilter</filter-class>
        <init-param>
            <param-name></param-name>
            <param-value></param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>ResponseHeaderFilter10</filter-name>
        <filter-class>com.rackspace.idm.api.filter.ResponseFilter</filter-class>
        <init-param>
            <param-name>Headers</param-name>
            <param-value>
                Vary: Accept, Accept-Encoding, X-Auth-Token, X-Auth-Key, X-Storage-User, X-Storage-Pass, X-Auth-User
            </param-value>
        </init-param>
    </filter>

    <filter>
        <filter-name>ResponseHeaderFilter11</filter-name>
        <filter-class>com.rackspace.idm.api.filter.ResponseFilter</filter-class>
        <init-param>
            <param-name>Headers</param-name>
            <param-value>
                Vary: Accept, Accept-Encoding
            </param-value>
        </init-param>
    </filter>

    <filter>
        <description>
            The filter adds response headers to every response that it is
            mapped to. It does not replace existing http headers.
        </description>
        <filter-name>ResponseHeaderFilter20</filter-name>
        <filter-class>com.rackspace.idm.api.filter.ResponseFilter</filter-class>
        <init-param>
            <description>
                The Headers parameter denotes the headers to add to the
                response. Set this value to the actual headers. For example:

                Vary: Accept, Accept-Encoding

                You can supply multiple headers one per line. If the same header is
                specified twice it will be combined into a comma separated list.

                Vary: Accept
                Vary: Accept-Encoding
            </description>
            <param-name>Headers</param-name>
            <param-value>
                Vary: Accept, Accept-Encoding, X-Auth-Token
            </param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>UrlFilter</filter-name>
        <url-pattern>/cloud/v1*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>UrlFilter</filter-name>
        <url-pattern>/cloud/v2*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>ldapLoggingFilter</filter-name>
        <url-pattern>/cloud/v1.0/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ldapLoggingFilter</filter-name>
        <url-pattern>/cloud/v1.1/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ldapLoggingFilter</filter-name>
        <url-pattern>/cloud/v2.0/*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>LoggerFilter</filter-name>
        <url-pattern>/cloud/v1*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>LoggerFilter</filter-name>
        <url-pattern>/cloud/v2*</url-pattern>
    </filter-mapping>

    <filter-mapping>
        <filter-name>ResponseHeaderFilter10</filter-name>
        <url-pattern>/cloud/auth</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ResponseHeaderFilter10</filter-name>
        <url-pattern>/cloud/v1.0/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ResponseHeaderFilter11</filter-name>
        <url-pattern>/cloud/v1.1/*</url-pattern>
    </filter-mapping>
    <filter-mapping>
        <filter-name>ResponseHeaderFilter20</filter-name>
        <url-pattern>/cloud/v2.0/*</url-pattern>
    </filter-mapping>

    <servlet-mapping>
        <servlet-name>keystone</servlet-name>
        <url-pattern>/cloud/v3/*</url-pattern>
    </servlet-mapping>

	<listener>
		<listener-class>org.springframework.web.util.Log4jConfigListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<listener>
		<listener-class>org.springframework.web.context.request.RequestContextListener</listener-class>
	</listener>
	<servlet>
		<servlet-name>Jersey Spring Web Application</servlet-name>
		<servlet-class>com.sun.jersey.spi.spring.container.servlet.SpringServlet</servlet-class>
		<init-param>
			<param-name>com.sun.jersey.config.property.packages</param-name>
			<param-value>com.rackspace.idm;org.codehaus.jackson.jaxrs</param-value>
		</init-param>
		<init-param>
			<param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name>
			<param-value>com.rackspace.idm.api.filter.DefaultAcceptHeaderFilter;
			    com.rackspace.idm.api.filter.UriExtensionFilter;
				com.rackspace.idm.api.filter.AuthenticationFilter;
				com.sun.jersey.api.container.filter.GZIPContentEncodingFilter
			</param-value>
		</init-param>
		<init-param>
			<param-name>com.sun.jersey.config.feature.DisableWADL</param-name>
			<param-value>true</param-value>
		</init-param>
        <init-param>
            <param-name>com.sun.jersey.spi.container.ContainerResponseFilters</param-name>
            <param-value>com.sun.jersey.api.container.filter.GZIPContentEncodingFilter</param-value>
        </init-param>
	</servlet>
	<servlet>
        <servlet-name>DelegatePassThroughServlet</servlet-name>
        <servlet-class>com.rackspace.idm.web.DelegatePassThroughServlet</servlet-class>
    </servlet>

    <servlet>
        <servlet-name>keystone</servlet-name>
        <servlet-class>com.xhaus.modjy.ModjyJServlet</servlet-class>
        <init-param>
            <param-name>app_import_name</param-name>
            <param-value>application.handler</param-value>
        </init-param>
        <init-param>
            <param-name>cache_callables</param-name>
            <param-value>1</param-value>
        </init-param>
        <init-param>
            <param-name>reload_on_mod</param-name>
            <param-value>1</param-value>
        </init-param>
        <init-param>
            <param-name>log_level</param-name>
            <param-value>debug</param-value>
        </init-param>
        <init-param>
            <param-name>load_site_packages</param-name>
            <param-value>0</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>

	<servlet-mapping>
		<servlet-name>Jersey Spring Web Application</servlet-name>
		<url-pattern>/*</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>DelegatePassThroughServlet</servlet-name>
		<url-pattern>/docs/*</url-pattern>
	</servlet-mapping>
</web-app>
